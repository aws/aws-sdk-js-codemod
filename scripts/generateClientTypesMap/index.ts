import { writeFile } from "fs/promises";
import { join } from "path";
import { format } from "prettier";

import { CLIENT_NAMES } from "../../src/transforms/v2-to-v3/config";
import { getClientTypesMap } from "./getClientTypesMap";

const codegenComment = `// This file is generated by scripts/generateClientTypesMap/index.ts
// Do not edit this file directly. Instead, edit the script and run it to regenerate this file.`;

const filePath = join("src", "transforms", "v2-to-v3", "config", "CLIENT_TYPES_MAP.ts");
const relativeFilePath = join(__dirname, "..", "..", filePath);

(async () => {
  let fileContent = codegenComment;

  fileContent += `\n\n/* eslint-disable @typescript-eslint/naming-convention */`;
  fileContent += `\nexport const CLIENT_TYPES_MAP: Record<string, Record<string, string>> = `;

  const clientTypesMap = {};

  for (const clientName of CLIENT_NAMES) {
    clientTypesMap[clientName] = await getClientTypesMap(clientName);
  }

  fileContent += JSON.stringify(clientTypesMap);
  fileContent += `;\n`;

  await writeFile(relativeFilePath, format(fileContent, { parser: "typescript", printWidth: 100 }));
})();
