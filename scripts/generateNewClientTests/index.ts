// This script generates tests in src/transforms/v2-to-v3/__fixtures__/new-client
// Run them using: yarn tsx scripts/generateNewClientTests/index.ts
import { writeFile } from "fs/promises";
import { join } from "path";

import { getGlobalImportEqualsInput } from "./getGlobalImportEqualsInput";
import { getGlobalImportEqualsOutput } from "./getGlobalImportEqualsOutput";
import { getGlobalImportInput } from "./getGlobalImportInput";
import { getGlobalImportOutput } from "./getGlobalImportOutput";
import { getGlobalRequireInput } from "./getGlobalRequireInput";
import { getGlobalRequireOutput } from "./getGlobalRequireOutput";
import { getServiceImportDeepInput } from "./getServiceImportDeepInput";
import { getServiceImportDeepOutput } from "./getServiceImportDeepOutput";
import { getServiceImportEqualsInput } from "./getServiceImportEqualsInput";
import { getServiceImportEqualsOutput } from "./getServiceImportEqualsOutput";
import { getServiceImportInput } from "./getServiceImportInput";
import { getServiceImportOutput } from "./getServiceImportOutput";
import { getServiceImportWithNameInput } from "./getServiceImportWithNameInput";
import { getServiceImportWithNameOutput } from "./getServiceImportWithNameOutput";
import { getServiceRequireDeepInput } from "./getServiceRequireDeepInput";
import { getServiceRequireDeepOutput } from "./getServiceRequireDeepOutput";
import { getServiceRequireInput } from "./getServiceRequireInput";
import { getServiceRequireOutput } from "./getServiceRequireOutput";

// The "use strict" directive is added to so that comments can be attached to it.
// Recast removes the comments while removing import/require.
// Details in https://github.com/awslabs/aws-sdk-js-codemod/issues/205
const codegenComment = `// This file is generated by scripts/generateNewClientTests/index.ts
// Do not edit this file directly. Instead, edit the script and run it to regenerate this file.
"use strict";`;

const newClientsTestsFolder = join("src", "transforms", "v2-to-v3", "__fixtures__", "new-client");
const newClientTestsPath = join(__dirname, "..", "..", newClientsTestsFolder);

(async () => {
  for (const [fileName, getFileContent] of [
    ["global-import.input.js", getGlobalImportInput],
    ["global-import.output.js", getGlobalImportOutput],
    ["global-import-equals.input.ts", getGlobalImportEqualsInput],
    ["global-import-equals.output.ts", getGlobalImportEqualsOutput],
    ["global-require.input.js", getGlobalRequireInput],
    ["global-require.output.js", getGlobalRequireOutput],
    ["service-import.input.js", getServiceImportInput],
    ["service-import.output.js", getServiceImportOutput],
    ["service-import-equals.input.ts", getServiceImportEqualsInput],
    ["service-import-equals.output.ts", getServiceImportEqualsOutput],
    ["service-import-deep.input.js", getServiceImportDeepInput],
    ["service-import-deep.output.js", getServiceImportDeepOutput],
    ["service-import-with-name.input.js", getServiceImportWithNameInput],
    ["service-import-with-name.output.js", getServiceImportWithNameOutput],
    ["service-require.input.js", getServiceRequireInput],
    ["service-require.output.js", getServiceRequireOutput],
    ["service-require-deep.input.js", getServiceRequireDeepInput],
    ["service-require-deep.output.js", getServiceRequireDeepOutput],
  ] as [string, (comment: string) => string][]) {
    const filePath = join(newClientTestsPath, fileName);
    await writeFile(filePath, getFileContent(codegenComment));
  }
})();
