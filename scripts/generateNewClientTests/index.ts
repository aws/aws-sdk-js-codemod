// This script generates tests in src/transforms/v2-to-v3/__fixtures__/new-client
// Run them using: yarn tsx scripts/generateNewClientTests/index.ts
import { writeFile } from "fs/promises";
import { join } from "path";

import { getGlobalImportInputContent } from "./getGlobalImportInputContent";
import { getGlobalImportOutputContent } from "./getGlobalImportOutputContent";
import { getGlobalRequireInputContent } from "./getGlobalRequireInputContent";
import { getGlobalRequireOutputContent } from "./getGlobalRequireOutputContent";
import { getServiceImportInputContent } from "./getServiceImportInputContent";
import { getServiceImportOutputContent } from "./getServiceImportOutputContent";
import { getServiceRequireInputContent } from "./getServiceRequireInputContent";
import { getServiceRequireOutputContent } from "./getServiceRequireOutputContent";

// The "use strict" directive is added to so that comments can be attached to it.
// Recast removes the comments while removing import/require.
// Details in https://github.com/awslabs/aws-sdk-js-codemod/issues/205
const codegenComment = `// This file is generated by scripts/generateNewClientTests/index.ts
// Do not edit this file directly. Instead, edit the script and run it to regenerate this file.
"use strict";`;

const newClientsTestsFolder = join("src", "transforms", "v2-to-v3", "__fixtures__", "new-client");
const newClientTestsPath = join(__dirname, "..", "..", newClientsTestsFolder);

(async () => {
  for (const [fileName, getFileContent] of [
    ["global-import.input.js", getGlobalImportInputContent],
    ["global-import.output.js", getGlobalImportOutputContent],
    ["global-require.input.js", getGlobalRequireInputContent],
    ["global-require.output.js", getGlobalRequireOutputContent],
    ["service-import.input.js", getServiceImportInputContent],
    ["service-import.output.js", getServiceImportOutputContent],
    ["service-require.input.js", getServiceRequireInputContent],
    ["service-require.output.js", getServiceRequireOutputContent],
  ] as [string, (comment: string) => string][]) {
    const filePath = join(newClientTestsPath, fileName);
    await writeFile(filePath, getFileContent(codegenComment));
  }
})();
