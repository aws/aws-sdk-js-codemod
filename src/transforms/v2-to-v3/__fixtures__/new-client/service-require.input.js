// This file is generated by scripts/generateNewClientTests/index.ts
// Do not edit this file directly. Instead, edit the script and run it to regenerate this file.
"use strict";
const { ACM } = require("aws-sdk");
const { ACMPCA } = require("aws-sdk");
const { APIGateway } = require("aws-sdk");
const { ARCZonalShift } = require("aws-sdk");
const { AccessAnalyzer } = require("aws-sdk");
const { Account } = require("aws-sdk");
const { AlexaForBusiness } = require("aws-sdk");
const { Amp } = require("aws-sdk");
const { Amplify } = require("aws-sdk");
const { AmplifyBackend } = require("aws-sdk");
const { AmplifyUIBuilder } = require("aws-sdk");
const { ApiGatewayManagementApi } = require("aws-sdk");
const { ApiGatewayV2 } = require("aws-sdk");
const { AppConfig } = require("aws-sdk");
const { AppConfigData } = require("aws-sdk");
const { AppIntegrations } = require("aws-sdk");
const { AppMesh } = require("aws-sdk");
const { AppRunner } = require("aws-sdk");
const { AppStream } = require("aws-sdk");
const { AppSync } = require("aws-sdk");
const { Appflow } = require("aws-sdk");
const { ApplicationAutoScaling } = require("aws-sdk");
const { ApplicationCostProfiler } = require("aws-sdk");
const { ApplicationInsights } = require("aws-sdk");
const { Athena } = require("aws-sdk");
const { AuditManager } = require("aws-sdk");
const { AugmentedAIRuntime } = require("aws-sdk");
const { AutoScaling } = require("aws-sdk");
const { AutoScalingPlans } = require("aws-sdk");
const { Backup } = require("aws-sdk");
const { BackupGateway } = require("aws-sdk");
const { BackupStorage } = require("aws-sdk");
const { Batch } = require("aws-sdk");
const { Billingconductor } = require("aws-sdk");
const { Braket } = require("aws-sdk");
const { Budgets } = require("aws-sdk");
const { CUR } = require("aws-sdk");
const { Chime } = require("aws-sdk");
const { ChimeSDKIdentity } = require("aws-sdk");
const { ChimeSDKMediaPipelines } = require("aws-sdk");
const { ChimeSDKMeetings } = require("aws-sdk");
const { ChimeSDKMessaging } = require("aws-sdk");
const { ChimeSDKVoice } = require("aws-sdk");
const { Cloud9 } = require("aws-sdk");
const { CloudControl } = require("aws-sdk");
const { CloudDirectory } = require("aws-sdk");
const { CloudFormation } = require("aws-sdk");
const { CloudFront } = require("aws-sdk");
const { CloudHSM } = require("aws-sdk");
const { CloudHSMV2 } = require("aws-sdk");
const { CloudSearch } = require("aws-sdk");
const { CloudSearchDomain } = require("aws-sdk");
const { CloudTrail } = require("aws-sdk");
const { CloudWatch } = require("aws-sdk");
const { CloudWatchEvents } = require("aws-sdk");
const { CloudWatchLogs } = require("aws-sdk");
const { CodeArtifact } = require("aws-sdk");
const { CodeBuild } = require("aws-sdk");
const { CodeCatalyst } = require("aws-sdk");
const { CodeCommit } = require("aws-sdk");
const { CodeDeploy } = require("aws-sdk");
const { CodeGuruProfiler } = require("aws-sdk");
const { CodeGuruReviewer } = require("aws-sdk");
const { CodePipeline } = require("aws-sdk");
const { CodeStar } = require("aws-sdk");
const { CodeStarNotifications } = require("aws-sdk");
const { CodeStarconnections } = require("aws-sdk");
const { CognitoIdentity } = require("aws-sdk");
const { CognitoIdentityServiceProvider } = require("aws-sdk");
const { CognitoSync } = require("aws-sdk");
const { Comprehend } = require("aws-sdk");
const { ComprehendMedical } = require("aws-sdk");
const { ComputeOptimizer } = require("aws-sdk");
const { ConfigService } = require("aws-sdk");
const { Connect } = require("aws-sdk");
const { ConnectCampaigns } = require("aws-sdk");
const { ConnectCases } = require("aws-sdk");
const { ConnectContactLens } = require("aws-sdk");
const { ConnectParticipant } = require("aws-sdk");
const { ControlTower } = require("aws-sdk");
const { CostExplorer } = require("aws-sdk");
const { CustomerProfiles } = require("aws-sdk");
const { DAX } = require("aws-sdk");
const { DLM } = require("aws-sdk");
const { DMS } = require("aws-sdk");
const { DataBrew } = require("aws-sdk");
const { DataExchange } = require("aws-sdk");
const { DataPipeline } = require("aws-sdk");
const { DataSync } = require("aws-sdk");
const { Detective } = require("aws-sdk");
const { DevOpsGuru } = require("aws-sdk");
const { DeviceFarm } = require("aws-sdk");
const { DirectConnect } = require("aws-sdk");
const { DirectoryService } = require("aws-sdk");
const { Discovery } = require("aws-sdk");
const { DocDB } = require("aws-sdk");
const { DocDBElastic } = require("aws-sdk");
const { Drs } = require("aws-sdk");
const { DynamoDB } = require("aws-sdk");
const { DynamoDBStreams } = require("aws-sdk");
const { EBS } = require("aws-sdk");
const { EC2 } = require("aws-sdk");
const { EC2InstanceConnect } = require("aws-sdk");
const { ECR } = require("aws-sdk");
const { ECRPUBLIC } = require("aws-sdk");
const { ECS } = require("aws-sdk");
const { EFS } = require("aws-sdk");
const { EKS } = require("aws-sdk");
const { ELB } = require("aws-sdk");
const { ELBv2 } = require("aws-sdk");
const { EMR } = require("aws-sdk");
const { EMRServerless } = require("aws-sdk");
const { EMRcontainers } = require("aws-sdk");
const { ES } = require("aws-sdk");
const { ElastiCache } = require("aws-sdk");
const { ElasticBeanstalk } = require("aws-sdk");
const { ElasticInference } = require("aws-sdk");
const { ElasticTranscoder } = require("aws-sdk");
const { EventBridge } = require("aws-sdk");
const { Evidently } = require("aws-sdk");
const { FMS } = require("aws-sdk");
const { FSx } = require("aws-sdk");
const { Finspace } = require("aws-sdk");
const { Finspacedata } = require("aws-sdk");
const { Firehose } = require("aws-sdk");
const { Fis } = require("aws-sdk");
const { ForecastQueryService } = require("aws-sdk");
const { ForecastService } = require("aws-sdk");
const { FraudDetector } = require("aws-sdk");
const { GameLift } = require("aws-sdk");
const { GameSparks } = require("aws-sdk");
const { Glacier } = require("aws-sdk");
const { GlobalAccelerator } = require("aws-sdk");
const { Glue } = require("aws-sdk");
const { Grafana } = require("aws-sdk");
const { Greengrass } = require("aws-sdk");
const { GreengrassV2 } = require("aws-sdk");
const { GroundStation } = require("aws-sdk");
const { GuardDuty } = require("aws-sdk");
const { Health } = require("aws-sdk");
const { HealthLake } = require("aws-sdk");
const { Honeycode } = require("aws-sdk");
const { IAM } = require("aws-sdk");
const { IVS } = require("aws-sdk");
const { IdentityStore } = require("aws-sdk");
const { Imagebuilder } = require("aws-sdk");
const { Inspector } = require("aws-sdk");
const { Inspector2 } = require("aws-sdk");
const { IoT1ClickDevicesService } = require("aws-sdk");
const { IoT1ClickProjects } = require("aws-sdk");
const { IoTAnalytics } = require("aws-sdk");
const { IoTEvents } = require("aws-sdk");
const { IoTEventsData } = require("aws-sdk");
const { IoTFleetHub } = require("aws-sdk");
const { IoTFleetWise } = require("aws-sdk");
const { IoTJobsDataPlane } = require("aws-sdk");
const { IoTRoboRunner } = require("aws-sdk");
const { IoTSecureTunneling } = require("aws-sdk");
const { IoTSiteWise } = require("aws-sdk");
const { IoTThingsGraph } = require("aws-sdk");
const { IoTTwinMaker } = require("aws-sdk");
const { IoTWireless } = require("aws-sdk");
const { Iot } = require("aws-sdk");
const { IotData } = require("aws-sdk");
const { IotDeviceAdvisor } = require("aws-sdk");
const { Ivschat } = require("aws-sdk");
const { KMS } = require("aws-sdk");
const { Kafka } = require("aws-sdk");
const { KafkaConnect } = require("aws-sdk");
const { Kendra } = require("aws-sdk");
const { Keyspaces } = require("aws-sdk");
const { Kinesis } = require("aws-sdk");
const { KinesisAnalytics } = require("aws-sdk");
const { KinesisAnalyticsV2 } = require("aws-sdk");
const { KinesisVideo } = require("aws-sdk");
const { KinesisVideoArchivedMedia } = require("aws-sdk");
const { KinesisVideoMedia } = require("aws-sdk");
const { KinesisVideoSignalingChannels } = require("aws-sdk");
const { KinesisVideoWebRTCStorage } = require("aws-sdk");
const { LakeFormation } = require("aws-sdk");
const { Lambda } = require("aws-sdk");
const { LexModelBuildingService } = require("aws-sdk");
const { LexModelsV2 } = require("aws-sdk");
const { LexRuntime } = require("aws-sdk");
const { LexRuntimeV2 } = require("aws-sdk");
const { LicenseManager } = require("aws-sdk");
const { LicenseManagerLinuxSubscriptions } = require("aws-sdk");
const { LicenseManagerUserSubscriptions } = require("aws-sdk");
const { Lightsail } = require("aws-sdk");
const { Location } = require("aws-sdk");
const { LookoutEquipment } = require("aws-sdk");
const { LookoutMetrics } = require("aws-sdk");
const { LookoutVision } = require("aws-sdk");
const { M2 } = require("aws-sdk");
const { MQ } = require("aws-sdk");
const { MTurk } = require("aws-sdk");
const { MWAA } = require("aws-sdk");
const { MachineLearning } = require("aws-sdk");
const { Macie } = require("aws-sdk");
const { Macie2 } = require("aws-sdk");
const { ManagedBlockchain } = require("aws-sdk");
const { MarketplaceCatalog } = require("aws-sdk");
const { MarketplaceCommerceAnalytics } = require("aws-sdk");
const { MarketplaceEntitlementService } = require("aws-sdk");
const { MarketplaceMetering } = require("aws-sdk");
const { MediaConnect } = require("aws-sdk");
const { MediaConvert } = require("aws-sdk");
const { MediaLive } = require("aws-sdk");
const { MediaPackage } = require("aws-sdk");
const { MediaPackageVod } = require("aws-sdk");
const { MediaStore } = require("aws-sdk");
const { MediaStoreData } = require("aws-sdk");
const { MediaTailor } = require("aws-sdk");
const { MemoryDB } = require("aws-sdk");
const { Mgn } = require("aws-sdk");
const { MigrationHub } = require("aws-sdk");
const { MigrationHubConfig } = require("aws-sdk");
const { MigrationHubOrchestrator } = require("aws-sdk");
const { MigrationHubRefactorSpaces } = require("aws-sdk");
const { MigrationHubStrategy } = require("aws-sdk");
const { Mobile } = require("aws-sdk");
const { Neptune } = require("aws-sdk");
const { NetworkFirewall } = require("aws-sdk");
const { NetworkManager } = require("aws-sdk");
const { Nimble } = require("aws-sdk");
const { OAM } = require("aws-sdk");
const { Omics } = require("aws-sdk");
const { OpenSearch } = require("aws-sdk");
const { OpenSearchServerless } = require("aws-sdk");
const { OpsWorks } = require("aws-sdk");
const { OpsWorksCM } = require("aws-sdk");
const { Organizations } = require("aws-sdk");
const { Outposts } = require("aws-sdk");
const { PI } = require("aws-sdk");
const { Panorama } = require("aws-sdk");
const { Personalize } = require("aws-sdk");
const { PersonalizeEvents } = require("aws-sdk");
const { PersonalizeRuntime } = require("aws-sdk");
const { Pinpoint } = require("aws-sdk");
const { PinpointEmail } = require("aws-sdk");
const { PinpointSMSVoice } = require("aws-sdk");
const { PinpointSMSVoiceV2 } = require("aws-sdk");
const { Pipes } = require("aws-sdk");
const { Polly } = require("aws-sdk");
const { Pricing } = require("aws-sdk");
const { PrivateNetworks } = require("aws-sdk");
const { Proton } = require("aws-sdk");
const { QLDB } = require("aws-sdk");
const { QLDBSession } = require("aws-sdk");
const { QuickSight } = require("aws-sdk");
const { RAM } = require("aws-sdk");
const { RDS } = require("aws-sdk");
const { RDSDataService } = require("aws-sdk");
const { RUM } = require("aws-sdk");
const { Rbin } = require("aws-sdk");
const { Redshift } = require("aws-sdk");
const { RedshiftData } = require("aws-sdk");
const { RedshiftServerless } = require("aws-sdk");
const { Rekognition } = require("aws-sdk");
const { Resiliencehub } = require("aws-sdk");
const { ResourceExplorer2 } = require("aws-sdk");
const { ResourceGroups } = require("aws-sdk");
const { ResourceGroupsTaggingAPI } = require("aws-sdk");
const { RoboMaker } = require("aws-sdk");
const { RolesAnywhere } = require("aws-sdk");
const { Route53 } = require("aws-sdk");
const { Route53Domains } = require("aws-sdk");
const { Route53RecoveryCluster } = require("aws-sdk");
const { Route53RecoveryControlConfig } = require("aws-sdk");
const { Route53RecoveryReadiness } = require("aws-sdk");
const { Route53Resolver } = require("aws-sdk");
const { S3 } = require("aws-sdk");
const { S3Control } = require("aws-sdk");
const { S3Outposts } = require("aws-sdk");
const { SES } = require("aws-sdk");
const { SESV2 } = require("aws-sdk");
const { SMS } = require("aws-sdk");
const { SNS } = require("aws-sdk");
const { SQS } = require("aws-sdk");
const { SSM } = require("aws-sdk");
const { SSMContacts } = require("aws-sdk");
const { SSMIncidents } = require("aws-sdk");
const { SSO } = require("aws-sdk");
const { SSOAdmin } = require("aws-sdk");
const { SSOOIDC } = require("aws-sdk");
const { STS } = require("aws-sdk");
const { SWF } = require("aws-sdk");
const { SageMaker } = require("aws-sdk");
const { SageMakerFeatureStoreRuntime } = require("aws-sdk");
const { SageMakerGeospatial } = require("aws-sdk");
const { SageMakerMetrics } = require("aws-sdk");
const { SageMakerRuntime } = require("aws-sdk");
const { SagemakerEdge } = require("aws-sdk");
const { SavingsPlans } = require("aws-sdk");
const { Scheduler } = require("aws-sdk");
const { Schemas } = require("aws-sdk");
const { SecretsManager } = require("aws-sdk");
const { SecurityHub } = require("aws-sdk");
const { SecurityLake } = require("aws-sdk");
const { ServerlessApplicationRepository } = require("aws-sdk");
const { ServiceCatalog } = require("aws-sdk");
const { ServiceCatalogAppRegistry } = require("aws-sdk");
const { ServiceDiscovery } = require("aws-sdk");
const { ServiceQuotas } = require("aws-sdk");
const { Shield } = require("aws-sdk");
const { Signer } = require("aws-sdk");
const { SimSpaceWeaver } = require("aws-sdk");
const { SnowDeviceManagement } = require("aws-sdk");
const { Snowball } = require("aws-sdk");
const { SsmSap } = require("aws-sdk");
const { StepFunctions } = require("aws-sdk");
const { StorageGateway } = require("aws-sdk");
const { Support } = require("aws-sdk");
const { SupportApp } = require("aws-sdk");
const { Synthetics } = require("aws-sdk");
const { Textract } = require("aws-sdk");
const { TimestreamQuery } = require("aws-sdk");
const { TimestreamWrite } = require("aws-sdk");
const { TranscribeService } = require("aws-sdk");
const { Transfer } = require("aws-sdk");
const { Translate } = require("aws-sdk");
const { VoiceID } = require("aws-sdk");
const { WAF } = require("aws-sdk");
const { WAFRegional } = require("aws-sdk");
const { WAFV2 } = require("aws-sdk");
const { WellArchitected } = require("aws-sdk");
const { Wisdom } = require("aws-sdk");
const { WorkDocs } = require("aws-sdk");
const { WorkLink } = require("aws-sdk");
const { WorkMail } = require("aws-sdk");
const { WorkMailMessageFlow } = require("aws-sdk");
const { WorkSpaces } = require("aws-sdk");
const { WorkSpacesWeb } = require("aws-sdk");
const { XRay } = require("aws-sdk");

new ACM();
new ACMPCA();
new APIGateway();
new ARCZonalShift();
new AccessAnalyzer();
new Account();
new AlexaForBusiness();
new Amp();
new Amplify();
new AmplifyBackend();
new AmplifyUIBuilder();
new ApiGatewayManagementApi();
new ApiGatewayV2();
new AppConfig();
new AppConfigData();
new AppIntegrations();
new AppMesh();
new AppRunner();
new AppStream();
new AppSync();
new Appflow();
new ApplicationAutoScaling();
new ApplicationCostProfiler();
new ApplicationInsights();
new Athena();
new AuditManager();
new AugmentedAIRuntime();
new AutoScaling();
new AutoScalingPlans();
new Backup();
new BackupGateway();
new BackupStorage();
new Batch();
new Billingconductor();
new Braket();
new Budgets();
new CUR();
new Chime();
new ChimeSDKIdentity();
new ChimeSDKMediaPipelines();
new ChimeSDKMeetings();
new ChimeSDKMessaging();
new ChimeSDKVoice();
new Cloud9();
new CloudControl();
new CloudDirectory();
new CloudFormation();
new CloudFront();
new CloudHSM();
new CloudHSMV2();
new CloudSearch();
new CloudSearchDomain();
new CloudTrail();
new CloudWatch();
new CloudWatchEvents();
new CloudWatchLogs();
new CodeArtifact();
new CodeBuild();
new CodeCatalyst();
new CodeCommit();
new CodeDeploy();
new CodeGuruProfiler();
new CodeGuruReviewer();
new CodePipeline();
new CodeStar();
new CodeStarNotifications();
new CodeStarconnections();
new CognitoIdentity();
new CognitoIdentityServiceProvider();
new CognitoSync();
new Comprehend();
new ComprehendMedical();
new ComputeOptimizer();
new ConfigService();
new Connect();
new ConnectCampaigns();
new ConnectCases();
new ConnectContactLens();
new ConnectParticipant();
new ControlTower();
new CostExplorer();
new CustomerProfiles();
new DAX();
new DLM();
new DMS();
new DataBrew();
new DataExchange();
new DataPipeline();
new DataSync();
new Detective();
new DevOpsGuru();
new DeviceFarm();
new DirectConnect();
new DirectoryService();
new Discovery();
new DocDB();
new DocDBElastic();
new Drs();
new DynamoDB();
new DynamoDBStreams();
new EBS();
new EC2();
new EC2InstanceConnect();
new ECR();
new ECRPUBLIC();
new ECS();
new EFS();
new EKS();
new ELB();
new ELBv2();
new EMR();
new EMRServerless();
new EMRcontainers();
new ES();
new ElastiCache();
new ElasticBeanstalk();
new ElasticInference();
new ElasticTranscoder();
new EventBridge();
new Evidently();
new FMS();
new FSx();
new Finspace();
new Finspacedata();
new Firehose();
new Fis();
new ForecastQueryService();
new ForecastService();
new FraudDetector();
new GameLift();
new GameSparks();
new Glacier();
new GlobalAccelerator();
new Glue();
new Grafana();
new Greengrass();
new GreengrassV2();
new GroundStation();
new GuardDuty();
new Health();
new HealthLake();
new Honeycode();
new IAM();
new IVS();
new IdentityStore();
new Imagebuilder();
new Inspector();
new Inspector2();
new IoT1ClickDevicesService();
new IoT1ClickProjects();
new IoTAnalytics();
new IoTEvents();
new IoTEventsData();
new IoTFleetHub();
new IoTFleetWise();
new IoTJobsDataPlane();
new IoTRoboRunner();
new IoTSecureTunneling();
new IoTSiteWise();
new IoTThingsGraph();
new IoTTwinMaker();
new IoTWireless();
new Iot();
new IotData();
new IotDeviceAdvisor();
new Ivschat();
new KMS();
new Kafka();
new KafkaConnect();
new Kendra();
new Keyspaces();
new Kinesis();
new KinesisAnalytics();
new KinesisAnalyticsV2();
new KinesisVideo();
new KinesisVideoArchivedMedia();
new KinesisVideoMedia();
new KinesisVideoSignalingChannels();
new KinesisVideoWebRTCStorage();
new LakeFormation();
new Lambda();
new LexModelBuildingService();
new LexModelsV2();
new LexRuntime();
new LexRuntimeV2();
new LicenseManager();
new LicenseManagerLinuxSubscriptions();
new LicenseManagerUserSubscriptions();
new Lightsail();
new Location();
new LookoutEquipment();
new LookoutMetrics();
new LookoutVision();
new M2();
new MQ();
new MTurk();
new MWAA();
new MachineLearning();
new Macie();
new Macie2();
new ManagedBlockchain();
new MarketplaceCatalog();
new MarketplaceCommerceAnalytics();
new MarketplaceEntitlementService();
new MarketplaceMetering();
new MediaConnect();
new MediaConvert();
new MediaLive();
new MediaPackage();
new MediaPackageVod();
new MediaStore();
new MediaStoreData();
new MediaTailor();
new MemoryDB();
new Mgn();
new MigrationHub();
new MigrationHubConfig();
new MigrationHubOrchestrator();
new MigrationHubRefactorSpaces();
new MigrationHubStrategy();
new Mobile();
new Neptune();
new NetworkFirewall();
new NetworkManager();
new Nimble();
new OAM();
new Omics();
new OpenSearch();
new OpenSearchServerless();
new OpsWorks();
new OpsWorksCM();
new Organizations();
new Outposts();
new PI();
new Panorama();
new Personalize();
new PersonalizeEvents();
new PersonalizeRuntime();
new Pinpoint();
new PinpointEmail();
new PinpointSMSVoice();
new PinpointSMSVoiceV2();
new Pipes();
new Polly();
new Pricing();
new PrivateNetworks();
new Proton();
new QLDB();
new QLDBSession();
new QuickSight();
new RAM();
new RDS();
new RDSDataService();
new RUM();
new Rbin();
new Redshift();
new RedshiftData();
new RedshiftServerless();
new Rekognition();
new Resiliencehub();
new ResourceExplorer2();
new ResourceGroups();
new ResourceGroupsTaggingAPI();
new RoboMaker();
new RolesAnywhere();
new Route53();
new Route53Domains();
new Route53RecoveryCluster();
new Route53RecoveryControlConfig();
new Route53RecoveryReadiness();
new Route53Resolver();
new S3();
new S3Control();
new S3Outposts();
new SES();
new SESV2();
new SMS();
new SNS();
new SQS();
new SSM();
new SSMContacts();
new SSMIncidents();
new SSO();
new SSOAdmin();
new SSOOIDC();
new STS();
new SWF();
new SageMaker();
new SageMakerFeatureStoreRuntime();
new SageMakerGeospatial();
new SageMakerMetrics();
new SageMakerRuntime();
new SagemakerEdge();
new SavingsPlans();
new Scheduler();
new Schemas();
new SecretsManager();
new SecurityHub();
new SecurityLake();
new ServerlessApplicationRepository();
new ServiceCatalog();
new ServiceCatalogAppRegistry();
new ServiceDiscovery();
new ServiceQuotas();
new Shield();
new Signer();
new SimSpaceWeaver();
new SnowDeviceManagement();
new Snowball();
new SsmSap();
new StepFunctions();
new StorageGateway();
new Support();
new SupportApp();
new Synthetics();
new Textract();
new TimestreamQuery();
new TimestreamWrite();
new TranscribeService();
new Transfer();
new Translate();
new VoiceID();
new WAF();
new WAFRegional();
new WAFV2();
new WellArchitected();
new Wisdom();
new WorkDocs();
new WorkLink();
new WorkMail();
new WorkMailMessageFlow();
new WorkSpaces();
new WorkSpacesWeb();
new XRay();
