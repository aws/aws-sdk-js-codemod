// This file is generated by scripts/generateReqResTypesMap/index.ts
// Do not edit this file directly. Instead, edit the script and run it to regenerate this file.

/* eslint-disable @typescript-eslint/naming-convention */
export const CLIENT_REQ_RES_TYPES_MAP: Record<string, Record<string, string>> = {
  ApiKey: { APIGateway: "UpdateApiKey" },
  Authorizer: { APIGateway: "UpdateAuthorizer" },
  BasePathMapping: { APIGateway: "UpdateBasePathMapping" },
  Deployment: { APIGateway: "UpdateDeployment", AppConfig: "StopDeployment" },
  DocumentationPart: { APIGateway: "UpdateDocumentationPart" },
  DocumentationVersion: { APIGateway: "UpdateDocumentationVersion" },
  DomainName: { APIGateway: "UpdateDomainName" },
  Model: { APIGateway: "UpdateModel" },
  RequestValidator: { APIGateway: "UpdateRequestValidator" },
  Resource: { APIGateway: "UpdateResource" },
  RestApi: { APIGateway: "UpdateRestApi" },
  Stage: { APIGateway: "UpdateStage" },
  UsagePlan: { APIGateway: "UpdateUsagePlan" },
  UsagePlanKey: { APIGateway: "GetUsagePlanKey" },
  VpcLink: { APIGateway: "UpdateVpcLink" },
  ClientCertificate: { APIGateway: "UpdateClientCertificate" },
  Account: { APIGateway: "UpdateAccount" },
  ApiKeys: { APIGateway: "GetApiKeys" },
  Authorizers: { APIGateway: "GetAuthorizers" },
  BasePathMappings: { APIGateway: "GetBasePathMappings" },
  ClientCertificates: { APIGateway: "GetClientCertificates" },
  Deployments: { APIGateway: "GetDeployments", AppConfig: "ListDeployments" },
  DocumentationParts: { APIGateway: "GetDocumentationParts" },
  DocumentationVersions: { APIGateway: "GetDocumentationVersions" },
  DomainNames: { APIGateway: "GetDomainNames" },
  ExportResponse: { APIGateway: "GetExport" },
  GatewayResponse: { APIGateway: "UpdateGatewayResponse" },
  GatewayResponses: { APIGateway: "GetGatewayResponses" },
  Integration: { APIGateway: "UpdateIntegration" },
  IntegrationResponse: { APIGateway: "UpdateIntegrationResponse" },
  Method: { APIGateway: "UpdateMethod" },
  MethodResponse: { APIGateway: "UpdateMethodResponse" },
  Template: { APIGateway: "GetModelTemplate" },
  Models: { APIGateway: "GetModels" },
  RequestValidators: { APIGateway: "GetRequestValidators" },
  Resources: { APIGateway: "GetResources" },
  RestApis: { APIGateway: "GetRestApis" },
  SdkResponse: { APIGateway: "GetSdk" },
  SdkType: { APIGateway: "GetSdkType" },
  SdkTypes: { APIGateway: "GetSdkTypes" },
  Stages: { APIGateway: "GetStages" },
  Tags: { APIGateway: "GetTags" },
  Usage: { APIGateway: "UpdateUsage" },
  UsagePlanKeys: { APIGateway: "GetUsagePlanKeys" },
  UsagePlans: { APIGateway: "GetUsagePlans" },
  VpcLinks: { APIGateway: "GetVpcLinks" },
  ApiKeyIds: { APIGateway: "ImportApiKeys" },
  DocumentationPartIds: { APIGateway: "ImportDocumentationParts" },
  ZonalShift: { ARCZonalShift: "UpdateZonalShift" },
  CreateAppResult: { Amplify: "CreateApp", OpsWorks: "CreateApp" },
  CreateBackendEnvironmentResult: { Amplify: "CreateBackendEnvironment" },
  CreateBranchResult: { Amplify: "CreateBranch" },
  CreateDeploymentResult: { Amplify: "CreateDeployment", OpsWorks: "CreateDeployment" },
  CreateDomainAssociationResult: { Amplify: "CreateDomainAssociation" },
  CreateWebhookResult: { Amplify: "CreateWebhook" },
  DeleteAppResult: { Amplify: "DeleteApp" },
  DeleteBackendEnvironmentResult: { Amplify: "DeleteBackendEnvironment" },
  DeleteBranchResult: { Amplify: "DeleteBranch" },
  DeleteDomainAssociationResult: { Amplify: "DeleteDomainAssociation" },
  DeleteJobResult: { Amplify: "DeleteJob" },
  DeleteWebhookResult: { Amplify: "DeleteWebhook" },
  GenerateAccessLogsResult: { Amplify: "GenerateAccessLogs" },
  GetAppResult: { Amplify: "GetApp" },
  GetArtifactUrlResult: { Amplify: "GetArtifactUrl" },
  GetBackendEnvironmentResult: { Amplify: "GetBackendEnvironment" },
  GetBranchResult: { Amplify: "GetBranch" },
  GetDomainAssociationResult: { Amplify: "GetDomainAssociation" },
  GetJobResult: { Amplify: "GetJob", DeviceFarm: "GetJob" },
  GetWebhookResult: { Amplify: "GetWebhook" },
  ListAppsResult: { Amplify: "ListApps" },
  ListArtifactsResult: { Amplify: "ListArtifacts", DeviceFarm: "ListArtifacts" },
  ListBackendEnvironmentsResult: { Amplify: "ListBackendEnvironments" },
  ListBranchesResult: { Amplify: "ListBranches" },
  ListDomainAssociationsResult: { Amplify: "ListDomainAssociations" },
  ListJobsResult: {
    Amplify: "ListJobs",
    DeviceFarm: "ListJobs",
    S3Control: "ListJobs",
    Snowball: "ListJobs",
  },
  ListWebhooksResult: { Amplify: "ListWebhooks" },
  StartDeploymentResult: { Amplify: "StartDeployment" },
  StartJobResult: { Amplify: "StartJob" },
  StopJobResult: { Amplify: "StopJob", DeviceFarm: "StopJob" },
  UpdateAppResult: { Amplify: "UpdateApp" },
  UpdateBranchResult: { Amplify: "UpdateBranch" },
  UpdateDomainAssociationResult: { Amplify: "UpdateDomainAssociation" },
  UpdateWebhookResult: { Amplify: "UpdateWebhook" },
  CreateIntegrationResult: { ApiGatewayV2: "CreateIntegration" },
  CreateRouteResult: { ApiGatewayV2: "CreateRoute", EC2: "CreateRoute" },
  GetIntegrationResult: { ApiGatewayV2: "GetIntegration" },
  GetRouteResult: { ApiGatewayV2: "GetRoute" },
  UpdateIntegrationResult: { ApiGatewayV2: "UpdateIntegration" },
  UpdateRouteResult: { ApiGatewayV2: "UpdateRoute" },
  Application: { AppConfig: "UpdateApplication", Mgn: "UpdateApplication" },
  ConfigurationProfile: { AppConfig: "UpdateConfigurationProfile" },
  DeploymentStrategy: { AppConfig: "UpdateDeploymentStrategy" },
  Environment: { AppConfig: "UpdateEnvironment" },
  Extension: { AppConfig: "UpdateExtension" },
  ExtensionAssociation: { AppConfig: "UpdateExtensionAssociation" },
  HostedConfigurationVersion: { AppConfig: "GetHostedConfigurationVersion" },
  Configuration: { AppConfig: "GetConfiguration" },
  Applications: { AppConfig: "ListApplications" },
  ConfigurationProfiles: { AppConfig: "ListConfigurationProfiles" },
  DeploymentStrategies: { AppConfig: "ListDeploymentStrategies" },
  Environments: { AppConfig: "ListEnvironments" },
  ExtensionAssociations: { AppConfig: "ListExtensionAssociations" },
  Extensions: { AppConfig: "ListExtensions" },
  HostedConfigurationVersions: { AppConfig: "ListHostedConfigurationVersions" },
  ResourceTags: { AppConfig: "ListTagsForResource" },
  CreateGatewayRouteInput: { AppMesh: "CreateGatewayRoute" },
  CreateGatewayRouteOutput: { AppMesh: "CreateGatewayRoute" },
  CreateMeshInput: { AppMesh: "CreateMesh" },
  CreateMeshOutput: { AppMesh: "CreateMesh" },
  CreateRouteInput: { AppMesh: "CreateRoute" },
  CreateRouteOutput: { AppMesh: "CreateRoute" },
  CreateVirtualGatewayInput: { AppMesh: "CreateVirtualGateway" },
  CreateVirtualGatewayOutput: { AppMesh: "CreateVirtualGateway" },
  CreateVirtualNodeInput: { AppMesh: "CreateVirtualNode" },
  CreateVirtualNodeOutput: { AppMesh: "CreateVirtualNode" },
  CreateVirtualRouterInput: { AppMesh: "CreateVirtualRouter" },
  CreateVirtualRouterOutput: { AppMesh: "CreateVirtualRouter" },
  CreateVirtualServiceInput: { AppMesh: "CreateVirtualService" },
  CreateVirtualServiceOutput: { AppMesh: "CreateVirtualService" },
  DeleteGatewayRouteInput: { AppMesh: "DeleteGatewayRoute" },
  DeleteGatewayRouteOutput: { AppMesh: "DeleteGatewayRoute" },
  DeleteMeshInput: { AppMesh: "DeleteMesh" },
  DeleteMeshOutput: { AppMesh: "DeleteMesh" },
  DeleteRouteInput: { AppMesh: "DeleteRoute" },
  DeleteRouteOutput: { AppMesh: "DeleteRoute" },
  DeleteVirtualGatewayInput: { AppMesh: "DeleteVirtualGateway" },
  DeleteVirtualGatewayOutput: { AppMesh: "DeleteVirtualGateway" },
  DeleteVirtualNodeInput: { AppMesh: "DeleteVirtualNode" },
  DeleteVirtualNodeOutput: { AppMesh: "DeleteVirtualNode" },
  DeleteVirtualRouterInput: { AppMesh: "DeleteVirtualRouter" },
  DeleteVirtualRouterOutput: { AppMesh: "DeleteVirtualRouter" },
  DeleteVirtualServiceInput: { AppMesh: "DeleteVirtualService" },
  DeleteVirtualServiceOutput: { AppMesh: "DeleteVirtualService" },
  DescribeGatewayRouteInput: { AppMesh: "DescribeGatewayRoute" },
  DescribeGatewayRouteOutput: { AppMesh: "DescribeGatewayRoute" },
  DescribeMeshInput: { AppMesh: "DescribeMesh" },
  DescribeMeshOutput: { AppMesh: "DescribeMesh" },
  DescribeRouteInput: { AppMesh: "DescribeRoute" },
  DescribeRouteOutput: { AppMesh: "DescribeRoute" },
  DescribeVirtualGatewayInput: { AppMesh: "DescribeVirtualGateway" },
  DescribeVirtualGatewayOutput: { AppMesh: "DescribeVirtualGateway" },
  DescribeVirtualNodeInput: { AppMesh: "DescribeVirtualNode" },
  DescribeVirtualNodeOutput: { AppMesh: "DescribeVirtualNode" },
  DescribeVirtualRouterInput: { AppMesh: "DescribeVirtualRouter" },
  DescribeVirtualRouterOutput: { AppMesh: "DescribeVirtualRouter" },
  DescribeVirtualServiceInput: { AppMesh: "DescribeVirtualService" },
  DescribeVirtualServiceOutput: { AppMesh: "DescribeVirtualService" },
  ListGatewayRoutesInput: { AppMesh: "ListGatewayRoutes" },
  ListGatewayRoutesOutput: { AppMesh: "ListGatewayRoutes" },
  ListMeshesInput: { AppMesh: "ListMeshes" },
  ListMeshesOutput: { AppMesh: "ListMeshes" },
  ListRoutesInput: { AppMesh: "ListRoutes" },
  ListRoutesOutput: { AppMesh: "ListRoutes" },
  ListTagsForResourceInput: {
    AppMesh: "ListTagsForResource",
    Athena: "ListTagsForResource",
    BackupGateway: "ListTagsForResource",
    CleanRooms: "ListTagsForResource",
    CloudWatch: "ListTagsForResource",
    CodeCommit: "ListTagsForResource",
    CodeDeploy: "ListTagsForResource",
    CodePipeline: "ListTagsForResource",
    CodeStarconnections: "ListTagsForResource",
    CognitoIdentity: "ListTagsForResource",
    InternetMonitor: "ListTagsForResource",
    KinesisVideo: "ListTagsForResource",
    MWAA: "ListTagsForResource",
    MediaStore: "ListTagsForResource",
    OAM: "ListTagsForResource",
    PaymentCryptography: "ListTagsForResource",
    Proton: "ListTagsForResource",
    ResourceExplorer2: "ListTagsForResource",
    SWF: "ListTagsForResource",
    Scheduler: "ListTagsForResource",
    SimSpaceWeaver: "ListTagsForResource",
    SnowDeviceManagement: "ListTagsForResource",
    StepFunctions: "ListTagsForResource",
    StorageGateway: "ListTagsForResource",
    Tnb: "ListTagsForResource",
    WellArchitected: "ListTagsForResource",
  },
  ListTagsForResourceOutput: {
    AppMesh: "ListTagsForResource",
    Athena: "ListTagsForResource",
    BackupGateway: "ListTagsForResource",
    CleanRooms: "ListTagsForResource",
    CloudWatch: "ListTagsForResource",
    CodeCommit: "ListTagsForResource",
    CodeDeploy: "ListTagsForResource",
    CodePipeline: "ListTagsForResource",
    CodeStarconnections: "ListTagsForResource",
    InternetMonitor: "ListTagsForResource",
    KinesisVideo: "ListTagsForResource",
    MWAA: "ListTagsForResource",
    MediaStore: "ListTagsForResource",
    OAM: "ListTagsForResource",
    PaymentCryptography: "ListTagsForResource",
    Proton: "ListTagsForResource",
    ResourceExplorer2: "ListTagsForResource",
    SWF: "ListTagsForResource",
    Scheduler: "ListTagsForResource",
    SimSpaceWeaver: "ListTagsForResource",
    SnowDeviceManagement: "ListTagsForResource",
    StepFunctions: "ListTagsForResource",
    StorageGateway: "ListTagsForResource",
    Tnb: "ListTagsForResource",
    WellArchitected: "ListTagsForResource",
  },
  ListVirtualGatewaysInput: { AppMesh: "ListVirtualGateways" },
  ListVirtualGatewaysOutput: { AppMesh: "ListVirtualGateways" },
  ListVirtualNodesInput: { AppMesh: "ListVirtualNodes" },
  ListVirtualNodesOutput: { AppMesh: "ListVirtualNodes" },
  ListVirtualRoutersInput: { AppMesh: "ListVirtualRouters" },
  ListVirtualRoutersOutput: { AppMesh: "ListVirtualRouters" },
  ListVirtualServicesInput: { AppMesh: "ListVirtualServices" },
  ListVirtualServicesOutput: { AppMesh: "ListVirtualServices" },
  TagResourceInput: {
    AppMesh: "TagResource",
    Athena: "TagResource",
    Backup: "TagResource",
    BackupGateway: "TagResource",
    CleanRooms: "TagResource",
    CloudWatch: "TagResource",
    CodeCommit: "TagResource",
    CodeDeploy: "TagResource",
    CodePipeline: "TagResource",
    CodeStarconnections: "TagResource",
    CognitoIdentity: "TagResource",
    DynamoDB: "TagResource",
    InternetMonitor: "TagResource",
    KinesisVideo: "TagResource",
    MWAA: "TagResource",
    MediaStore: "TagResource",
    OAM: "TagResource",
    PaymentCryptography: "TagResource",
    Proton: "TagResource",
    ResourceExplorer2: "TagResource",
    SWF: "TagResource",
    Scheduler: "TagResource",
    SimSpaceWeaver: "TagResource",
    SnowDeviceManagement: "TagResource",
    StepFunctions: "TagResource",
    Tnb: "TagResource",
    WellArchitected: "TagResource",
  },
  TagResourceOutput: {
    AppMesh: "TagResource",
    Athena: "TagResource",
    BackupGateway: "TagResource",
    CleanRooms: "TagResource",
    CloudWatch: "TagResource",
    CodeDeploy: "TagResource",
    CodePipeline: "TagResource",
    CodeStarconnections: "TagResource",
    InternetMonitor: "TagResource",
    KinesisVideo: "TagResource",
    MWAA: "TagResource",
    MediaStore: "TagResource",
    OAM: "TagResource",
    PaymentCryptography: "TagResource",
    Proton: "TagResource",
    ResourceExplorer2: "TagResource",
    Scheduler: "TagResource",
    SimSpaceWeaver: "TagResource",
    StepFunctions: "TagResource",
    Tnb: "TagResource",
    WellArchitected: "TagResource",
  },
  UntagResourceInput: {
    AppMesh: "UntagResource",
    Athena: "UntagResource",
    Backup: "UntagResource",
    BackupGateway: "UntagResource",
    CleanRooms: "UntagResource",
    CloudWatch: "UntagResource",
    CodeCommit: "UntagResource",
    CodeDeploy: "UntagResource",
    CodePipeline: "UntagResource",
    CodeStarconnections: "UntagResource",
    CognitoIdentity: "UntagResource",
    DynamoDB: "UntagResource",
    InternetMonitor: "UntagResource",
    KinesisVideo: "UntagResource",
    MWAA: "UntagResource",
    MediaStore: "UntagResource",
    OAM: "UntagResource",
    PaymentCryptography: "UntagResource",
    Proton: "UntagResource",
    ResourceExplorer2: "UntagResource",
    SWF: "UntagResource",
    Scheduler: "UntagResource",
    SimSpaceWeaver: "UntagResource",
    SnowDeviceManagement: "UntagResource",
    StepFunctions: "UntagResource",
    Tnb: "UntagResource",
    WellArchitected: "UntagResource",
  },
  UntagResourceOutput: {
    AppMesh: "UntagResource",
    Athena: "UntagResource",
    BackupGateway: "UntagResource",
    CleanRooms: "UntagResource",
    CloudWatch: "UntagResource",
    CodeDeploy: "UntagResource",
    CodePipeline: "UntagResource",
    CodeStarconnections: "UntagResource",
    InternetMonitor: "UntagResource",
    KinesisVideo: "UntagResource",
    MWAA: "UntagResource",
    MediaStore: "UntagResource",
    OAM: "UntagResource",
    PaymentCryptography: "UntagResource",
    Proton: "UntagResource",
    ResourceExplorer2: "UntagResource",
    Scheduler: "UntagResource",
    SimSpaceWeaver: "UntagResource",
    StepFunctions: "UntagResource",
    Tnb: "UntagResource",
    WellArchitected: "UntagResource",
  },
  UpdateGatewayRouteInput: { AppMesh: "UpdateGatewayRoute" },
  UpdateGatewayRouteOutput: { AppMesh: "UpdateGatewayRoute" },
  UpdateMeshInput: { AppMesh: "UpdateMesh" },
  UpdateMeshOutput: { AppMesh: "UpdateMesh" },
  UpdateRouteInput: { AppMesh: "UpdateRoute" },
  UpdateRouteOutput: { AppMesh: "UpdateRoute" },
  UpdateVirtualGatewayInput: { AppMesh: "UpdateVirtualGateway" },
  UpdateVirtualGatewayOutput: { AppMesh: "UpdateVirtualGateway" },
  UpdateVirtualNodeInput: { AppMesh: "UpdateVirtualNode" },
  UpdateVirtualNodeOutput: { AppMesh: "UpdateVirtualNode" },
  UpdateVirtualRouterInput: { AppMesh: "UpdateVirtualRouter" },
  UpdateVirtualRouterOutput: { AppMesh: "UpdateVirtualRouter" },
  UpdateVirtualServiceInput: { AppMesh: "UpdateVirtualService" },
  UpdateVirtualServiceOutput: { AppMesh: "UpdateVirtualService" },
  AssociateAppBlockBuilderAppBlockResult: { AppStream: "AssociateAppBlockBuilderAppBlock" },
  AssociateApplicationFleetResult: { AppStream: "AssociateApplicationFleet" },
  AssociateApplicationToEntitlementResult: { AppStream: "AssociateApplicationToEntitlement" },
  AssociateFleetResult: { AppStream: "AssociateFleet" },
  BatchAssociateUserStackResult: { AppStream: "BatchAssociateUserStack" },
  BatchDisassociateUserStackResult: { AppStream: "BatchDisassociateUserStack" },
  CreateAppBlockResult: { AppStream: "CreateAppBlock" },
  CreateAppBlockBuilderResult: { AppStream: "CreateAppBlockBuilder" },
  CreateAppBlockBuilderStreamingURLResult: { AppStream: "CreateAppBlockBuilderStreamingURL" },
  CreateApplicationResult: { AppStream: "CreateApplication" },
  CreateDirectoryConfigResult: { AppStream: "CreateDirectoryConfig" },
  CreateEntitlementResult: { AppStream: "CreateEntitlement" },
  CreateFleetResult: { AppStream: "CreateFleet", EC2: "CreateFleet" },
  CreateImageBuilderResult: { AppStream: "CreateImageBuilder" },
  CreateImageBuilderStreamingURLResult: { AppStream: "CreateImageBuilderStreamingURL" },
  CreateStackResult: { AppStream: "CreateStack", OpsWorks: "CreateStack" },
  CreateStreamingURLResult: { AppStream: "CreateStreamingURL" },
  CreateUpdatedImageResult: { AppStream: "CreateUpdatedImage" },
  CreateUsageReportSubscriptionResult: { AppStream: "CreateUsageReportSubscription" },
  CreateUserResult: { AppStream: "CreateUser" },
  DeleteAppBlockResult: { AppStream: "DeleteAppBlock" },
  DeleteAppBlockBuilderResult: { AppStream: "DeleteAppBlockBuilder" },
  DeleteApplicationResult: { AppStream: "DeleteApplication" },
  DeleteDirectoryConfigResult: { AppStream: "DeleteDirectoryConfig" },
  DeleteEntitlementResult: { AppStream: "DeleteEntitlement" },
  DeleteFleetResult: { AppStream: "DeleteFleet" },
  DeleteImageResult: { AppStream: "DeleteImage" },
  DeleteImageBuilderResult: { AppStream: "DeleteImageBuilder" },
  DeleteImagePermissionsResult: { AppStream: "DeleteImagePermissions" },
  DeleteStackResult: { AppStream: "DeleteStack" },
  DeleteUsageReportSubscriptionResult: { AppStream: "DeleteUsageReportSubscription" },
  DeleteUserResult: { AppStream: "DeleteUser" },
  DescribeAppBlockBuilderAppBlockAssociationsResult: {
    AppStream: "DescribeAppBlockBuilderAppBlockAssociations",
  },
  DescribeAppBlockBuildersResult: { AppStream: "DescribeAppBlockBuilders" },
  DescribeAppBlocksResult: { AppStream: "DescribeAppBlocks" },
  DescribeApplicationFleetAssociationsResult: { AppStream: "DescribeApplicationFleetAssociations" },
  DescribeApplicationsResult: { AppStream: "DescribeApplications" },
  DescribeDirectoryConfigsResult: { AppStream: "DescribeDirectoryConfigs" },
  DescribeEntitlementsResult: { AppStream: "DescribeEntitlements" },
  DescribeFleetsResult: { AppStream: "DescribeFleets", EC2: "DescribeFleets" },
  DescribeImageBuildersResult: { AppStream: "DescribeImageBuilders" },
  DescribeImagePermissionsResult: { AppStream: "DescribeImagePermissions" },
  DescribeImagesResult: { AppStream: "DescribeImages", EC2: "DescribeImages" },
  DescribeSessionsResult: { AppStream: "DescribeSessions" },
  DescribeStacksResult: { AppStream: "DescribeStacks", OpsWorks: "DescribeStacks" },
  DescribeUsageReportSubscriptionsResult: { AppStream: "DescribeUsageReportSubscriptions" },
  DescribeUserStackAssociationsResult: { AppStream: "DescribeUserStackAssociations" },
  DescribeUsersResult: { AppStream: "DescribeUsers", ElastiCache: "DescribeUsers" },
  DisableUserResult: { AppStream: "DisableUser" },
  DisassociateAppBlockBuilderAppBlockResult: { AppStream: "DisassociateAppBlockBuilderAppBlock" },
  DisassociateApplicationFleetResult: { AppStream: "DisassociateApplicationFleet" },
  DisassociateApplicationFromEntitlementResult: {
    AppStream: "DisassociateApplicationFromEntitlement",
  },
  DisassociateFleetResult: { AppStream: "DisassociateFleet" },
  EnableUserResult: { AppStream: "EnableUser" },
  ExpireSessionResult: { AppStream: "ExpireSession" },
  ListAssociatedFleetsResult: { AppStream: "ListAssociatedFleets" },
  ListAssociatedStacksResult: { AppStream: "ListAssociatedStacks" },
  ListEntitledApplicationsResult: { AppStream: "ListEntitledApplications" },
  StartAppBlockBuilderResult: { AppStream: "StartAppBlockBuilder" },
  StartFleetResult: { AppStream: "StartFleet" },
  StartImageBuilderResult: { AppStream: "StartImageBuilder" },
  StopAppBlockBuilderResult: { AppStream: "StopAppBlockBuilder" },
  StopFleetResult: { AppStream: "StopFleet" },
  StopImageBuilderResult: { AppStream: "StopImageBuilder" },
  UpdateAppBlockBuilderResult: { AppStream: "UpdateAppBlockBuilder" },
  UpdateApplicationResult: { AppStream: "UpdateApplication" },
  UpdateDirectoryConfigResult: { AppStream: "UpdateDirectoryConfig" },
  UpdateEntitlementResult: { AppStream: "UpdateEntitlement" },
  UpdateFleetResult: { AppStream: "UpdateFleet" },
  UpdateImagePermissionsResult: { AppStream: "UpdateImagePermissions" },
  UpdateStackResult: { AppStream: "UpdateStack" },
  DeleteReportDefinitionResult: { ApplicationCostProfiler: "DeleteReportDefinition" },
  GetReportDefinitionResult: { ApplicationCostProfiler: "GetReportDefinition" },
  ImportApplicationUsageResult: { ApplicationCostProfiler: "ImportApplicationUsage" },
  ListReportDefinitionsResult: { ApplicationCostProfiler: "ListReportDefinitions" },
  PutReportDefinitionResult: { ApplicationCostProfiler: "PutReportDefinition" },
  UpdateReportDefinitionResult: { ApplicationCostProfiler: "UpdateReportDefinition" },
  BatchGetNamedQueryInput: { Athena: "BatchGetNamedQuery" },
  BatchGetNamedQueryOutput: { Athena: "BatchGetNamedQuery" },
  BatchGetPreparedStatementInput: { Athena: "BatchGetPreparedStatement" },
  BatchGetPreparedStatementOutput: { Athena: "BatchGetPreparedStatement" },
  BatchGetQueryExecutionInput: { Athena: "BatchGetQueryExecution" },
  BatchGetQueryExecutionOutput: { Athena: "BatchGetQueryExecution" },
  CancelCapacityReservationInput: { Athena: "CancelCapacityReservation" },
  CancelCapacityReservationOutput: { Athena: "CancelCapacityReservation" },
  CreateCapacityReservationInput: { Athena: "CreateCapacityReservation" },
  CreateCapacityReservationOutput: { Athena: "CreateCapacityReservation" },
  CreateDataCatalogInput: { Athena: "CreateDataCatalog" },
  CreateDataCatalogOutput: { Athena: "CreateDataCatalog" },
  CreateNamedQueryInput: { Athena: "CreateNamedQuery" },
  CreateNamedQueryOutput: { Athena: "CreateNamedQuery" },
  CreateNotebookInput: { Athena: "CreateNotebook" },
  CreateNotebookOutput: { Athena: "CreateNotebook" },
  CreatePreparedStatementInput: { Athena: "CreatePreparedStatement" },
  CreatePreparedStatementOutput: { Athena: "CreatePreparedStatement" },
  CreateWorkGroupInput: { Athena: "CreateWorkGroup" },
  CreateWorkGroupOutput: { Athena: "CreateWorkGroup" },
  DeleteCapacityReservationInput: { Athena: "DeleteCapacityReservation" },
  DeleteCapacityReservationOutput: { Athena: "DeleteCapacityReservation" },
  DeleteDataCatalogInput: { Athena: "DeleteDataCatalog" },
  DeleteDataCatalogOutput: { Athena: "DeleteDataCatalog" },
  DeleteNamedQueryInput: { Athena: "DeleteNamedQuery" },
  DeleteNamedQueryOutput: { Athena: "DeleteNamedQuery" },
  DeleteNotebookInput: { Athena: "DeleteNotebook" },
  DeleteNotebookOutput: { Athena: "DeleteNotebook" },
  DeletePreparedStatementInput: { Athena: "DeletePreparedStatement" },
  DeletePreparedStatementOutput: { Athena: "DeletePreparedStatement" },
  DeleteWorkGroupInput: { Athena: "DeleteWorkGroup" },
  DeleteWorkGroupOutput: { Athena: "DeleteWorkGroup" },
  ExportNotebookInput: { Athena: "ExportNotebook" },
  ExportNotebookOutput: { Athena: "ExportNotebook" },
  GetCapacityAssignmentConfigurationInput: { Athena: "GetCapacityAssignmentConfiguration" },
  GetCapacityAssignmentConfigurationOutput: { Athena: "GetCapacityAssignmentConfiguration" },
  GetCapacityReservationInput: { Athena: "GetCapacityReservation" },
  GetCapacityReservationOutput: { Athena: "GetCapacityReservation" },
  GetDataCatalogInput: { Athena: "GetDataCatalog" },
  GetDataCatalogOutput: { Athena: "GetDataCatalog" },
  GetDatabaseInput: { Athena: "GetDatabase", SsmSap: "GetDatabase" },
  GetDatabaseOutput: { Athena: "GetDatabase", SsmSap: "GetDatabase" },
  GetNamedQueryInput: { Athena: "GetNamedQuery" },
  GetNamedQueryOutput: { Athena: "GetNamedQuery" },
  GetNotebookMetadataInput: { Athena: "GetNotebookMetadata" },
  GetNotebookMetadataOutput: { Athena: "GetNotebookMetadata" },
  GetPreparedStatementInput: { Athena: "GetPreparedStatement" },
  GetPreparedStatementOutput: { Athena: "GetPreparedStatement" },
  GetQueryExecutionInput: { Athena: "GetQueryExecution" },
  GetQueryExecutionOutput: { Athena: "GetQueryExecution" },
  GetQueryResultsInput: { Athena: "GetQueryResults" },
  GetQueryResultsOutput: { Athena: "GetQueryResults" },
  GetQueryRuntimeStatisticsInput: { Athena: "GetQueryRuntimeStatistics" },
  GetQueryRuntimeStatisticsOutput: { Athena: "GetQueryRuntimeStatistics" },
  GetTableMetadataInput: { Athena: "GetTableMetadata" },
  GetTableMetadataOutput: { Athena: "GetTableMetadata" },
  GetWorkGroupInput: { Athena: "GetWorkGroup" },
  GetWorkGroupOutput: { Athena: "GetWorkGroup" },
  ImportNotebookInput: { Athena: "ImportNotebook" },
  ImportNotebookOutput: { Athena: "ImportNotebook" },
  ListApplicationDPUSizesInput: { Athena: "ListApplicationDPUSizes" },
  ListApplicationDPUSizesOutput: { Athena: "ListApplicationDPUSizes" },
  ListCapacityReservationsInput: { Athena: "ListCapacityReservations" },
  ListCapacityReservationsOutput: { Athena: "ListCapacityReservations" },
  ListDataCatalogsInput: { Athena: "ListDataCatalogs" },
  ListDataCatalogsOutput: { Athena: "ListDataCatalogs" },
  ListDatabasesInput: { Athena: "ListDatabases", SsmSap: "ListDatabases" },
  ListDatabasesOutput: { Athena: "ListDatabases", SsmSap: "ListDatabases" },
  ListEngineVersionsInput: { Athena: "ListEngineVersions" },
  ListEngineVersionsOutput: { Athena: "ListEngineVersions" },
  ListNamedQueriesInput: { Athena: "ListNamedQueries" },
  ListNamedQueriesOutput: { Athena: "ListNamedQueries" },
  ListNotebookMetadataInput: { Athena: "ListNotebookMetadata" },
  ListNotebookMetadataOutput: { Athena: "ListNotebookMetadata" },
  ListPreparedStatementsInput: { Athena: "ListPreparedStatements" },
  ListPreparedStatementsOutput: { Athena: "ListPreparedStatements" },
  ListQueryExecutionsInput: { Athena: "ListQueryExecutions" },
  ListQueryExecutionsOutput: { Athena: "ListQueryExecutions" },
  ListTableMetadataInput: { Athena: "ListTableMetadata" },
  ListTableMetadataOutput: { Athena: "ListTableMetadata" },
  ListWorkGroupsInput: { Athena: "ListWorkGroups" },
  ListWorkGroupsOutput: { Athena: "ListWorkGroups" },
  PutCapacityAssignmentConfigurationInput: { Athena: "PutCapacityAssignmentConfiguration" },
  PutCapacityAssignmentConfigurationOutput: { Athena: "PutCapacityAssignmentConfiguration" },
  StartQueryExecutionInput: { Athena: "StartQueryExecution" },
  StartQueryExecutionOutput: { Athena: "StartQueryExecution" },
  StopQueryExecutionInput: { Athena: "StopQueryExecution" },
  StopQueryExecutionOutput: { Athena: "StopQueryExecution" },
  UpdateCapacityReservationInput: { Athena: "UpdateCapacityReservation" },
  UpdateCapacityReservationOutput: { Athena: "UpdateCapacityReservation" },
  UpdateDataCatalogInput: { Athena: "UpdateDataCatalog" },
  UpdateDataCatalogOutput: { Athena: "UpdateDataCatalog" },
  UpdateNamedQueryInput: { Athena: "UpdateNamedQuery" },
  UpdateNamedQueryOutput: { Athena: "UpdateNamedQuery" },
  UpdateNotebookInput: { Athena: "UpdateNotebook" },
  UpdateNotebookOutput: { Athena: "UpdateNotebook" },
  UpdateNotebookMetadataInput: { Athena: "UpdateNotebookMetadata" },
  UpdateNotebookMetadataOutput: { Athena: "UpdateNotebookMetadata" },
  UpdatePreparedStatementInput: { Athena: "UpdatePreparedStatement" },
  UpdatePreparedStatementOutput: { Athena: "UpdatePreparedStatement" },
  UpdateWorkGroupInput: { Athena: "UpdateWorkGroup" },
  UpdateWorkGroupOutput: { Athena: "UpdateWorkGroup" },
  AttachInstancesQuery: { AutoScaling: "AttachInstances" },
  AttachLoadBalancerTargetGroupsType: { AutoScaling: "AttachLoadBalancerTargetGroups" },
  AttachLoadBalancerTargetGroupsResultType: { AutoScaling: "AttachLoadBalancerTargetGroups" },
  AttachLoadBalancersType: { AutoScaling: "AttachLoadBalancers" },
  AttachLoadBalancersResultType: { AutoScaling: "AttachLoadBalancers" },
  AttachTrafficSourcesType: { AutoScaling: "AttachTrafficSources" },
  AttachTrafficSourcesResultType: { AutoScaling: "AttachTrafficSources" },
  BatchDeleteScheduledActionType: { AutoScaling: "BatchDeleteScheduledAction" },
  BatchDeleteScheduledActionAnswer: { AutoScaling: "BatchDeleteScheduledAction" },
  BatchPutScheduledUpdateGroupActionType: { AutoScaling: "BatchPutScheduledUpdateGroupAction" },
  BatchPutScheduledUpdateGroupActionAnswer: { AutoScaling: "BatchPutScheduledUpdateGroupAction" },
  CancelInstanceRefreshType: { AutoScaling: "CancelInstanceRefresh" },
  CancelInstanceRefreshAnswer: { AutoScaling: "CancelInstanceRefresh" },
  CompleteLifecycleActionType: { AutoScaling: "CompleteLifecycleAction" },
  CompleteLifecycleActionAnswer: { AutoScaling: "CompleteLifecycleAction" },
  CreateAutoScalingGroupType: { AutoScaling: "CreateAutoScalingGroup" },
  CreateLaunchConfigurationType: { AutoScaling: "CreateLaunchConfiguration" },
  CreateOrUpdateTagsType: { AutoScaling: "CreateOrUpdateTags" },
  DeleteAutoScalingGroupType: { AutoScaling: "DeleteAutoScalingGroup" },
  LaunchConfigurationNameType: { AutoScaling: "DeleteLaunchConfiguration" },
  DeleteLifecycleHookType: { AutoScaling: "DeleteLifecycleHook" },
  DeleteLifecycleHookAnswer: { AutoScaling: "DeleteLifecycleHook" },
  DeleteNotificationConfigurationType: { AutoScaling: "DeleteNotificationConfiguration" },
  DeletePolicyType: { AutoScaling: "DeletePolicy" },
  DeleteScheduledActionType: { AutoScaling: "DeleteScheduledAction" },
  DeleteTagsType: { AutoScaling: "DeleteTags" },
  DeleteWarmPoolType: { AutoScaling: "DeleteWarmPool" },
  DeleteWarmPoolAnswer: { AutoScaling: "DeleteWarmPool" },
  AutoScalingGroupNamesType: { AutoScaling: "DescribeAutoScalingGroups" },
  AutoScalingGroupsType: { AutoScaling: "DescribeAutoScalingGroups" },
  DescribeAutoScalingInstancesType: { AutoScaling: "DescribeAutoScalingInstances" },
  AutoScalingInstancesType: { AutoScaling: "DescribeAutoScalingInstances" },
  DescribeInstanceRefreshesType: { AutoScaling: "DescribeInstanceRefreshes" },
  DescribeInstanceRefreshesAnswer: { AutoScaling: "DescribeInstanceRefreshes" },
  LaunchConfigurationNamesType: { AutoScaling: "DescribeLaunchConfigurations" },
  LaunchConfigurationsType: { AutoScaling: "DescribeLaunchConfigurations" },
  DescribeLifecycleHooksType: { AutoScaling: "DescribeLifecycleHooks" },
  DescribeLifecycleHooksAnswer: { AutoScaling: "DescribeLifecycleHooks" },
  DescribeNotificationConfigurationsType: { AutoScaling: "DescribeNotificationConfigurations" },
  DescribeNotificationConfigurationsAnswer: { AutoScaling: "DescribeNotificationConfigurations" },
  DescribePoliciesType: { AutoScaling: "DescribePolicies" },
  PoliciesType: { AutoScaling: "DescribePolicies" },
  DescribeScalingActivitiesType: { AutoScaling: "DescribeScalingActivities" },
  ActivitiesType: { AutoScaling: "DescribeScalingActivities" },
  DescribeScheduledActionsType: { AutoScaling: "DescribeScheduledActions" },
  ScheduledActionsType: { AutoScaling: "DescribeScheduledActions" },
  DescribeTagsType: { AutoScaling: "DescribeTags" },
  TagsType: { AutoScaling: "DescribeTags" },
  DescribeWarmPoolType: { AutoScaling: "DescribeWarmPool" },
  DescribeWarmPoolAnswer: { AutoScaling: "DescribeWarmPool" },
  DetachInstancesQuery: { AutoScaling: "DetachInstances" },
  DetachInstancesAnswer: { AutoScaling: "DetachInstances" },
  DetachLoadBalancerTargetGroupsType: { AutoScaling: "DetachLoadBalancerTargetGroups" },
  DetachLoadBalancerTargetGroupsResultType: { AutoScaling: "DetachLoadBalancerTargetGroups" },
  DetachLoadBalancersType: { AutoScaling: "DetachLoadBalancers" },
  DetachLoadBalancersResultType: { AutoScaling: "DetachLoadBalancers" },
  DetachTrafficSourcesType: { AutoScaling: "DetachTrafficSources" },
  DetachTrafficSourcesResultType: { AutoScaling: "DetachTrafficSources" },
  DisableMetricsCollectionQuery: { AutoScaling: "DisableMetricsCollection" },
  EnableMetricsCollectionQuery: { AutoScaling: "EnableMetricsCollection" },
  EnterStandbyQuery: { AutoScaling: "EnterStandby" },
  EnterStandbyAnswer: { AutoScaling: "EnterStandby" },
  ExecutePolicyType: { AutoScaling: "ExecutePolicy" },
  ExitStandbyQuery: { AutoScaling: "ExitStandby" },
  ExitStandbyAnswer: { AutoScaling: "ExitStandby" },
  GetPredictiveScalingForecastType: { AutoScaling: "GetPredictiveScalingForecast" },
  GetPredictiveScalingForecastAnswer: { AutoScaling: "GetPredictiveScalingForecast" },
  PutLifecycleHookType: { AutoScaling: "PutLifecycleHook" },
  PutLifecycleHookAnswer: { AutoScaling: "PutLifecycleHook" },
  PutNotificationConfigurationType: { AutoScaling: "PutNotificationConfiguration" },
  PutScalingPolicyType: { AutoScaling: "PutScalingPolicy" },
  PolicyARNType: { AutoScaling: "PutScalingPolicy" },
  PutScheduledUpdateGroupActionType: { AutoScaling: "PutScheduledUpdateGroupAction" },
  PutWarmPoolType: { AutoScaling: "PutWarmPool" },
  PutWarmPoolAnswer: { AutoScaling: "PutWarmPool" },
  RecordLifecycleActionHeartbeatType: { AutoScaling: "RecordLifecycleActionHeartbeat" },
  RecordLifecycleActionHeartbeatAnswer: { AutoScaling: "RecordLifecycleActionHeartbeat" },
  ScalingProcessQuery: { AutoScaling: "SuspendProcesses" },
  RollbackInstanceRefreshType: { AutoScaling: "RollbackInstanceRefresh" },
  RollbackInstanceRefreshAnswer: { AutoScaling: "RollbackInstanceRefresh" },
  SetDesiredCapacityType: { AutoScaling: "SetDesiredCapacity" },
  SetInstanceHealthQuery: { AutoScaling: "SetInstanceHealth" },
  SetInstanceProtectionQuery: { AutoScaling: "SetInstanceProtection" },
  SetInstanceProtectionAnswer: { AutoScaling: "SetInstanceProtection" },
  StartInstanceRefreshType: { AutoScaling: "StartInstanceRefresh" },
  StartInstanceRefreshAnswer: { AutoScaling: "StartInstanceRefresh" },
  TerminateInstanceInAutoScalingGroupType: { AutoScaling: "TerminateInstanceInAutoScalingGroup" },
  ActivityType: { AutoScaling: "TerminateInstanceInAutoScalingGroup" },
  UpdateAutoScalingGroupType: { AutoScaling: "UpdateAutoScalingGroup" },
  CancelLegalHoldInput: { Backup: "CancelLegalHold" },
  CancelLegalHoldOutput: { Backup: "CancelLegalHold" },
  CreateBackupPlanInput: { Backup: "CreateBackupPlan" },
  CreateBackupPlanOutput: { Backup: "CreateBackupPlan" },
  CreateBackupSelectionInput: { Backup: "CreateBackupSelection" },
  CreateBackupSelectionOutput: { Backup: "CreateBackupSelection" },
  CreateBackupVaultInput: { Backup: "CreateBackupVault" },
  CreateBackupVaultOutput: { Backup: "CreateBackupVault" },
  CreateFrameworkInput: { Backup: "CreateFramework" },
  CreateFrameworkOutput: { Backup: "CreateFramework" },
  CreateLegalHoldInput: { Backup: "CreateLegalHold" },
  CreateLegalHoldOutput: { Backup: "CreateLegalHold" },
  CreateReportPlanInput: { Backup: "CreateReportPlan" },
  CreateReportPlanOutput: { Backup: "CreateReportPlan" },
  DeleteBackupPlanInput: { Backup: "DeleteBackupPlan" },
  DeleteBackupPlanOutput: { Backup: "DeleteBackupPlan" },
  DeleteBackupSelectionInput: { Backup: "DeleteBackupSelection" },
  DeleteBackupVaultInput: { Backup: "DeleteBackupVault" },
  DeleteBackupVaultAccessPolicyInput: { Backup: "DeleteBackupVaultAccessPolicy" },
  DeleteBackupVaultLockConfigurationInput: { Backup: "DeleteBackupVaultLockConfiguration" },
  DeleteBackupVaultNotificationsInput: { Backup: "DeleteBackupVaultNotifications" },
  DeleteFrameworkInput: { Backup: "DeleteFramework" },
  DeleteRecoveryPointInput: { Backup: "DeleteRecoveryPoint" },
  DeleteReportPlanInput: { Backup: "DeleteReportPlan" },
  DescribeBackupJobInput: { Backup: "DescribeBackupJob" },
  DescribeBackupJobOutput: { Backup: "DescribeBackupJob" },
  DescribeBackupVaultInput: { Backup: "DescribeBackupVault" },
  DescribeBackupVaultOutput: { Backup: "DescribeBackupVault" },
  DescribeCopyJobInput: { Backup: "DescribeCopyJob" },
  DescribeCopyJobOutput: { Backup: "DescribeCopyJob" },
  DescribeFrameworkInput: { Backup: "DescribeFramework" },
  DescribeFrameworkOutput: { Backup: "DescribeFramework" },
  DescribeGlobalSettingsInput: { Backup: "DescribeGlobalSettings" },
  DescribeGlobalSettingsOutput: { Backup: "DescribeGlobalSettings" },
  DescribeProtectedResourceInput: { Backup: "DescribeProtectedResource" },
  DescribeProtectedResourceOutput: { Backup: "DescribeProtectedResource" },
  DescribeRecoveryPointInput: { Backup: "DescribeRecoveryPoint" },
  DescribeRecoveryPointOutput: { Backup: "DescribeRecoveryPoint" },
  DescribeRegionSettingsInput: { Backup: "DescribeRegionSettings" },
  DescribeRegionSettingsOutput: { Backup: "DescribeRegionSettings" },
  DescribeReportJobInput: { Backup: "DescribeReportJob" },
  DescribeReportJobOutput: { Backup: "DescribeReportJob" },
  DescribeReportPlanInput: { Backup: "DescribeReportPlan" },
  DescribeReportPlanOutput: { Backup: "DescribeReportPlan" },
  DescribeRestoreJobInput: { Backup: "DescribeRestoreJob" },
  DescribeRestoreJobOutput: { Backup: "DescribeRestoreJob" },
  DisassociateRecoveryPointInput: { Backup: "DisassociateRecoveryPoint" },
  DisassociateRecoveryPointFromParentInput: { Backup: "DisassociateRecoveryPointFromParent" },
  ExportBackupPlanTemplateInput: { Backup: "ExportBackupPlanTemplate" },
  ExportBackupPlanTemplateOutput: { Backup: "ExportBackupPlanTemplate" },
  GetBackupPlanInput: { Backup: "GetBackupPlan" },
  GetBackupPlanOutput: { Backup: "GetBackupPlan" },
  GetBackupPlanFromJSONInput: { Backup: "GetBackupPlanFromJSON" },
  GetBackupPlanFromJSONOutput: { Backup: "GetBackupPlanFromJSON" },
  GetBackupPlanFromTemplateInput: { Backup: "GetBackupPlanFromTemplate" },
  GetBackupPlanFromTemplateOutput: { Backup: "GetBackupPlanFromTemplate" },
  GetBackupSelectionInput: { Backup: "GetBackupSelection" },
  GetBackupSelectionOutput: { Backup: "GetBackupSelection" },
  GetBackupVaultAccessPolicyInput: { Backup: "GetBackupVaultAccessPolicy" },
  GetBackupVaultAccessPolicyOutput: { Backup: "GetBackupVaultAccessPolicy" },
  GetBackupVaultNotificationsInput: { Backup: "GetBackupVaultNotifications" },
  GetBackupVaultNotificationsOutput: { Backup: "GetBackupVaultNotifications" },
  GetLegalHoldInput: { Backup: "GetLegalHold" },
  GetLegalHoldOutput: { Backup: "GetLegalHold" },
  GetRecoveryPointRestoreMetadataInput: { Backup: "GetRecoveryPointRestoreMetadata" },
  GetRecoveryPointRestoreMetadataOutput: { Backup: "GetRecoveryPointRestoreMetadata" },
  ListBackupJobsInput: { Backup: "ListBackupJobs" },
  ListBackupJobsOutput: { Backup: "ListBackupJobs" },
  ListBackupPlanTemplatesInput: { Backup: "ListBackupPlanTemplates" },
  ListBackupPlanTemplatesOutput: { Backup: "ListBackupPlanTemplates" },
  ListBackupPlanVersionsInput: { Backup: "ListBackupPlanVersions" },
  ListBackupPlanVersionsOutput: { Backup: "ListBackupPlanVersions" },
  ListBackupPlansInput: { Backup: "ListBackupPlans" },
  ListBackupPlansOutput: { Backup: "ListBackupPlans" },
  ListBackupSelectionsInput: { Backup: "ListBackupSelections" },
  ListBackupSelectionsOutput: { Backup: "ListBackupSelections" },
  ListBackupVaultsInput: { Backup: "ListBackupVaults" },
  ListBackupVaultsOutput: { Backup: "ListBackupVaults" },
  ListCopyJobsInput: { Backup: "ListCopyJobs" },
  ListCopyJobsOutput: { Backup: "ListCopyJobs" },
  ListFrameworksInput: { Backup: "ListFrameworks" },
  ListFrameworksOutput: { Backup: "ListFrameworks" },
  ListLegalHoldsInput: { Backup: "ListLegalHolds" },
  ListLegalHoldsOutput: { Backup: "ListLegalHolds" },
  ListProtectedResourcesInput: { Backup: "ListProtectedResources" },
  ListProtectedResourcesOutput: { Backup: "ListProtectedResources" },
  ListRecoveryPointsByBackupVaultInput: { Backup: "ListRecoveryPointsByBackupVault" },
  ListRecoveryPointsByBackupVaultOutput: { Backup: "ListRecoveryPointsByBackupVault" },
  ListRecoveryPointsByLegalHoldInput: { Backup: "ListRecoveryPointsByLegalHold" },
  ListRecoveryPointsByLegalHoldOutput: { Backup: "ListRecoveryPointsByLegalHold" },
  ListRecoveryPointsByResourceInput: { Backup: "ListRecoveryPointsByResource" },
  ListRecoveryPointsByResourceOutput: { Backup: "ListRecoveryPointsByResource" },
  ListReportJobsInput: { Backup: "ListReportJobs" },
  ListReportJobsOutput: { Backup: "ListReportJobs" },
  ListReportPlansInput: { Backup: "ListReportPlans" },
  ListReportPlansOutput: { Backup: "ListReportPlans" },
  ListRestoreJobsInput: { Backup: "ListRestoreJobs" },
  ListRestoreJobsOutput: { Backup: "ListRestoreJobs" },
  ListTagsInput: { Backup: "ListTags", SageMaker: "ListTags" },
  ListTagsOutput: { Backup: "ListTags", SageMaker: "ListTags" },
  PutBackupVaultAccessPolicyInput: { Backup: "PutBackupVaultAccessPolicy" },
  PutBackupVaultLockConfigurationInput: { Backup: "PutBackupVaultLockConfiguration" },
  PutBackupVaultNotificationsInput: { Backup: "PutBackupVaultNotifications" },
  StartBackupJobInput: { Backup: "StartBackupJob" },
  StartBackupJobOutput: { Backup: "StartBackupJob" },
  StartCopyJobInput: { Backup: "StartCopyJob" },
  StartCopyJobOutput: { Backup: "StartCopyJob" },
  StartReportJobInput: { Backup: "StartReportJob" },
  StartReportJobOutput: { Backup: "StartReportJob" },
  StartRestoreJobInput: { Backup: "StartRestoreJob" },
  StartRestoreJobOutput: { Backup: "StartRestoreJob" },
  StopBackupJobInput: { Backup: "StopBackupJob" },
  UpdateBackupPlanInput: { Backup: "UpdateBackupPlan" },
  UpdateBackupPlanOutput: { Backup: "UpdateBackupPlan" },
  UpdateFrameworkInput: { Backup: "UpdateFramework" },
  UpdateFrameworkOutput: { Backup: "UpdateFramework" },
  UpdateGlobalSettingsInput: {
    Backup: "UpdateGlobalSettings",
    WellArchitected: "UpdateGlobalSettings",
  },
  UpdateRecoveryPointLifecycleInput: { Backup: "UpdateRecoveryPointLifecycle" },
  UpdateRecoveryPointLifecycleOutput: { Backup: "UpdateRecoveryPointLifecycle" },
  UpdateRegionSettingsInput: { Backup: "UpdateRegionSettings" },
  UpdateReportPlanInput: { Backup: "UpdateReportPlan" },
  UpdateReportPlanOutput: { Backup: "UpdateReportPlan" },
  AssociateGatewayToServerInput: { BackupGateway: "AssociateGatewayToServer" },
  AssociateGatewayToServerOutput: { BackupGateway: "AssociateGatewayToServer" },
  CreateGatewayInput: { BackupGateway: "CreateGateway" },
  CreateGatewayOutput: { BackupGateway: "CreateGateway" },
  DeleteGatewayInput: { BackupGateway: "DeleteGateway", StorageGateway: "DeleteGateway" },
  DeleteGatewayOutput: { BackupGateway: "DeleteGateway", StorageGateway: "DeleteGateway" },
  DeleteHypervisorInput: { BackupGateway: "DeleteHypervisor" },
  DeleteHypervisorOutput: { BackupGateway: "DeleteHypervisor" },
  DisassociateGatewayFromServerInput: { BackupGateway: "DisassociateGatewayFromServer" },
  DisassociateGatewayFromServerOutput: { BackupGateway: "DisassociateGatewayFromServer" },
  GetBandwidthRateLimitScheduleInput: { BackupGateway: "GetBandwidthRateLimitSchedule" },
  GetBandwidthRateLimitScheduleOutput: { BackupGateway: "GetBandwidthRateLimitSchedule" },
  GetGatewayInput: { BackupGateway: "GetGateway" },
  GetGatewayOutput: { BackupGateway: "GetGateway" },
  GetHypervisorInput: { BackupGateway: "GetHypervisor" },
  GetHypervisorOutput: { BackupGateway: "GetHypervisor" },
  GetHypervisorPropertyMappingsInput: { BackupGateway: "GetHypervisorPropertyMappings" },
  GetHypervisorPropertyMappingsOutput: { BackupGateway: "GetHypervisorPropertyMappings" },
  GetVirtualMachineInput: { BackupGateway: "GetVirtualMachine" },
  GetVirtualMachineOutput: { BackupGateway: "GetVirtualMachine" },
  ImportHypervisorConfigurationInput: { BackupGateway: "ImportHypervisorConfiguration" },
  ImportHypervisorConfigurationOutput: { BackupGateway: "ImportHypervisorConfiguration" },
  ListGatewaysInput: { BackupGateway: "ListGateways", StorageGateway: "ListGateways" },
  ListGatewaysOutput: { BackupGateway: "ListGateways", StorageGateway: "ListGateways" },
  ListHypervisorsInput: { BackupGateway: "ListHypervisors" },
  ListHypervisorsOutput: { BackupGateway: "ListHypervisors" },
  ListVirtualMachinesInput: { BackupGateway: "ListVirtualMachines" },
  ListVirtualMachinesOutput: { BackupGateway: "ListVirtualMachines" },
  PutBandwidthRateLimitScheduleInput: { BackupGateway: "PutBandwidthRateLimitSchedule" },
  PutBandwidthRateLimitScheduleOutput: { BackupGateway: "PutBandwidthRateLimitSchedule" },
  PutHypervisorPropertyMappingsInput: { BackupGateway: "PutHypervisorPropertyMappings" },
  PutHypervisorPropertyMappingsOutput: { BackupGateway: "PutHypervisorPropertyMappings" },
  PutMaintenanceStartTimeInput: { BackupGateway: "PutMaintenanceStartTime" },
  PutMaintenanceStartTimeOutput: { BackupGateway: "PutMaintenanceStartTime" },
  StartVirtualMachinesMetadataSyncInput: { BackupGateway: "StartVirtualMachinesMetadataSync" },
  StartVirtualMachinesMetadataSyncOutput: { BackupGateway: "StartVirtualMachinesMetadataSync" },
  TestHypervisorConfigurationInput: { BackupGateway: "TestHypervisorConfiguration" },
  TestHypervisorConfigurationOutput: { BackupGateway: "TestHypervisorConfiguration" },
  UpdateGatewayInformationInput: {
    BackupGateway: "UpdateGatewayInformation",
    StorageGateway: "UpdateGatewayInformation",
  },
  UpdateGatewayInformationOutput: {
    BackupGateway: "UpdateGatewayInformation",
    StorageGateway: "UpdateGatewayInformation",
  },
  UpdateGatewaySoftwareNowInput: {
    BackupGateway: "UpdateGatewaySoftwareNow",
    StorageGateway: "UpdateGatewaySoftwareNow",
  },
  UpdateGatewaySoftwareNowOutput: {
    BackupGateway: "UpdateGatewaySoftwareNow",
    StorageGateway: "UpdateGatewaySoftwareNow",
  },
  UpdateHypervisorInput: { BackupGateway: "UpdateHypervisor" },
  UpdateHypervisorOutput: { BackupGateway: "UpdateHypervisor" },
  DeleteObjectInput: { BackupStorage: "DeleteObject" },
  GetChunkInput: { BackupStorage: "GetChunk" },
  GetChunkOutput: { BackupStorage: "GetChunk" },
  GetObjectMetadataInput: { BackupStorage: "GetObjectMetadata" },
  GetObjectMetadataOutput: { BackupStorage: "GetObjectMetadata" },
  ListChunksInput: { BackupStorage: "ListChunks" },
  ListChunksOutput: { BackupStorage: "ListChunks" },
  ListObjectsInput: { BackupStorage: "ListObjects" },
  ListObjectsOutput: { BackupStorage: "ListObjects", S3: "ListObjects" },
  NotifyObjectCompleteInput: { BackupStorage: "NotifyObjectComplete" },
  NotifyObjectCompleteOutput: { BackupStorage: "NotifyObjectComplete" },
  PutChunkInput: { BackupStorage: "PutChunk" },
  PutChunkOutput: { BackupStorage: "PutChunk" },
  PutObjectInput: { BackupStorage: "PutObject" },
  PutObjectOutput: { BackupStorage: "PutObject", S3: "PutObject" },
  StartObjectInput: { BackupStorage: "StartObject" },
  StartObjectOutput: { BackupStorage: "StartObject" },
  AssociateAccountsInput: { Billingconductor: "AssociateAccounts" },
  AssociateAccountsOutput: { Billingconductor: "AssociateAccounts" },
  AssociatePricingRulesInput: { Billingconductor: "AssociatePricingRules" },
  AssociatePricingRulesOutput: { Billingconductor: "AssociatePricingRules" },
  BatchAssociateResourcesToCustomLineItemInput: {
    Billingconductor: "BatchAssociateResourcesToCustomLineItem",
  },
  BatchAssociateResourcesToCustomLineItemOutput: {
    Billingconductor: "BatchAssociateResourcesToCustomLineItem",
  },
  BatchDisassociateResourcesFromCustomLineItemInput: {
    Billingconductor: "BatchDisassociateResourcesFromCustomLineItem",
  },
  BatchDisassociateResourcesFromCustomLineItemOutput: {
    Billingconductor: "BatchDisassociateResourcesFromCustomLineItem",
  },
  CreateBillingGroupInput: { Billingconductor: "CreateBillingGroup" },
  CreateBillingGroupOutput: { Billingconductor: "CreateBillingGroup" },
  CreateCustomLineItemInput: { Billingconductor: "CreateCustomLineItem" },
  CreateCustomLineItemOutput: { Billingconductor: "CreateCustomLineItem" },
  CreatePricingPlanInput: { Billingconductor: "CreatePricingPlan" },
  CreatePricingPlanOutput: { Billingconductor: "CreatePricingPlan" },
  CreatePricingRuleInput: { Billingconductor: "CreatePricingRule" },
  CreatePricingRuleOutput: { Billingconductor: "CreatePricingRule" },
  DeleteBillingGroupInput: { Billingconductor: "DeleteBillingGroup" },
  DeleteBillingGroupOutput: { Billingconductor: "DeleteBillingGroup" },
  DeleteCustomLineItemInput: { Billingconductor: "DeleteCustomLineItem" },
  DeleteCustomLineItemOutput: { Billingconductor: "DeleteCustomLineItem" },
  DeletePricingPlanInput: { Billingconductor: "DeletePricingPlan" },
  DeletePricingPlanOutput: { Billingconductor: "DeletePricingPlan" },
  DeletePricingRuleInput: { Billingconductor: "DeletePricingRule" },
  DeletePricingRuleOutput: { Billingconductor: "DeletePricingRule" },
  DisassociateAccountsInput: { Billingconductor: "DisassociateAccounts" },
  DisassociateAccountsOutput: { Billingconductor: "DisassociateAccounts" },
  DisassociatePricingRulesInput: { Billingconductor: "DisassociatePricingRules" },
  DisassociatePricingRulesOutput: { Billingconductor: "DisassociatePricingRules" },
  ListAccountAssociationsInput: { Billingconductor: "ListAccountAssociations" },
  ListAccountAssociationsOutput: { Billingconductor: "ListAccountAssociations" },
  ListBillingGroupCostReportsInput: { Billingconductor: "ListBillingGroupCostReports" },
  ListBillingGroupCostReportsOutput: { Billingconductor: "ListBillingGroupCostReports" },
  ListBillingGroupsInput: { Billingconductor: "ListBillingGroups" },
  ListBillingGroupsOutput: { Billingconductor: "ListBillingGroups" },
  ListCustomLineItemVersionsInput: { Billingconductor: "ListCustomLineItemVersions" },
  ListCustomLineItemVersionsOutput: { Billingconductor: "ListCustomLineItemVersions" },
  ListCustomLineItemsInput: { Billingconductor: "ListCustomLineItems" },
  ListCustomLineItemsOutput: { Billingconductor: "ListCustomLineItems" },
  ListPricingPlansInput: { Billingconductor: "ListPricingPlans" },
  ListPricingPlansOutput: { Billingconductor: "ListPricingPlans" },
  ListPricingPlansAssociatedWithPricingRuleInput: {
    Billingconductor: "ListPricingPlansAssociatedWithPricingRule",
  },
  ListPricingPlansAssociatedWithPricingRuleOutput: {
    Billingconductor: "ListPricingPlansAssociatedWithPricingRule",
  },
  ListPricingRulesInput: { Billingconductor: "ListPricingRules" },
  ListPricingRulesOutput: { Billingconductor: "ListPricingRules" },
  ListPricingRulesAssociatedToPricingPlanInput: {
    Billingconductor: "ListPricingRulesAssociatedToPricingPlan",
  },
  ListPricingRulesAssociatedToPricingPlanOutput: {
    Billingconductor: "ListPricingRulesAssociatedToPricingPlan",
  },
  ListResourcesAssociatedToCustomLineItemInput: {
    Billingconductor: "ListResourcesAssociatedToCustomLineItem",
  },
  ListResourcesAssociatedToCustomLineItemOutput: {
    Billingconductor: "ListResourcesAssociatedToCustomLineItem",
  },
  UpdateBillingGroupInput: { Billingconductor: "UpdateBillingGroup" },
  UpdateBillingGroupOutput: { Billingconductor: "UpdateBillingGroup" },
  UpdateCustomLineItemInput: { Billingconductor: "UpdateCustomLineItem" },
  UpdateCustomLineItemOutput: { Billingconductor: "UpdateCustomLineItem" },
  UpdatePricingPlanInput: { Billingconductor: "UpdatePricingPlan" },
  UpdatePricingPlanOutput: { Billingconductor: "UpdatePricingPlan" },
  UpdatePricingRuleInput: { Billingconductor: "UpdatePricingRule" },
  UpdatePricingRuleOutput: { Billingconductor: "UpdatePricingRule" },
  BatchGetSchemaInput: { CleanRooms: "BatchGetSchema" },
  BatchGetSchemaOutput: { CleanRooms: "BatchGetSchema" },
  CreateCollaborationInput: { CleanRooms: "CreateCollaboration" },
  CreateCollaborationOutput: { CleanRooms: "CreateCollaboration" },
  CreateConfiguredTableInput: { CleanRooms: "CreateConfiguredTable" },
  CreateConfiguredTableOutput: { CleanRooms: "CreateConfiguredTable" },
  CreateConfiguredTableAnalysisRuleInput: { CleanRooms: "CreateConfiguredTableAnalysisRule" },
  CreateConfiguredTableAnalysisRuleOutput: { CleanRooms: "CreateConfiguredTableAnalysisRule" },
  CreateConfiguredTableAssociationInput: { CleanRooms: "CreateConfiguredTableAssociation" },
  CreateConfiguredTableAssociationOutput: { CleanRooms: "CreateConfiguredTableAssociation" },
  CreateMembershipInput: { CleanRooms: "CreateMembership" },
  CreateMembershipOutput: { CleanRooms: "CreateMembership" },
  DeleteCollaborationInput: { CleanRooms: "DeleteCollaboration" },
  DeleteCollaborationOutput: { CleanRooms: "DeleteCollaboration" },
  DeleteConfiguredTableInput: { CleanRooms: "DeleteConfiguredTable" },
  DeleteConfiguredTableOutput: { CleanRooms: "DeleteConfiguredTable" },
  DeleteConfiguredTableAnalysisRuleInput: { CleanRooms: "DeleteConfiguredTableAnalysisRule" },
  DeleteConfiguredTableAnalysisRuleOutput: { CleanRooms: "DeleteConfiguredTableAnalysisRule" },
  DeleteConfiguredTableAssociationInput: { CleanRooms: "DeleteConfiguredTableAssociation" },
  DeleteConfiguredTableAssociationOutput: { CleanRooms: "DeleteConfiguredTableAssociation" },
  DeleteMemberInput: { CleanRooms: "DeleteMember", ManagedBlockchain: "DeleteMember" },
  DeleteMemberOutput: { CleanRooms: "DeleteMember", ManagedBlockchain: "DeleteMember" },
  DeleteMembershipInput: { CleanRooms: "DeleteMembership" },
  DeleteMembershipOutput: { CleanRooms: "DeleteMembership" },
  GetCollaborationInput: { CleanRooms: "GetCollaboration" },
  GetCollaborationOutput: { CleanRooms: "GetCollaboration" },
  GetConfiguredTableInput: { CleanRooms: "GetConfiguredTable" },
  GetConfiguredTableOutput: { CleanRooms: "GetConfiguredTable" },
  GetConfiguredTableAnalysisRuleInput: { CleanRooms: "GetConfiguredTableAnalysisRule" },
  GetConfiguredTableAnalysisRuleOutput: { CleanRooms: "GetConfiguredTableAnalysisRule" },
  GetConfiguredTableAssociationInput: { CleanRooms: "GetConfiguredTableAssociation" },
  GetConfiguredTableAssociationOutput: { CleanRooms: "GetConfiguredTableAssociation" },
  GetMembershipInput: { CleanRooms: "GetMembership" },
  GetMembershipOutput: { CleanRooms: "GetMembership" },
  GetProtectedQueryInput: { CleanRooms: "GetProtectedQuery" },
  GetProtectedQueryOutput: { CleanRooms: "GetProtectedQuery" },
  GetSchemaInput: { CleanRooms: "GetSchema", Glue: "GetSchema", VerifiedPermissions: "GetSchema" },
  GetSchemaOutput: { CleanRooms: "GetSchema", VerifiedPermissions: "GetSchema" },
  GetSchemaAnalysisRuleInput: { CleanRooms: "GetSchemaAnalysisRule" },
  GetSchemaAnalysisRuleOutput: { CleanRooms: "GetSchemaAnalysisRule" },
  ListCollaborationsInput: { CleanRooms: "ListCollaborations" },
  ListCollaborationsOutput: { CleanRooms: "ListCollaborations" },
  ListConfiguredTableAssociationsInput: { CleanRooms: "ListConfiguredTableAssociations" },
  ListConfiguredTableAssociationsOutput: { CleanRooms: "ListConfiguredTableAssociations" },
  ListConfiguredTablesInput: { CleanRooms: "ListConfiguredTables" },
  ListConfiguredTablesOutput: { CleanRooms: "ListConfiguredTables" },
  ListMembersInput: { CleanRooms: "ListMembers", ManagedBlockchain: "ListMembers" },
  ListMembersOutput: { CleanRooms: "ListMembers", ManagedBlockchain: "ListMembers" },
  ListMembershipsInput: { CleanRooms: "ListMemberships" },
  ListMembershipsOutput: { CleanRooms: "ListMemberships" },
  ListProtectedQueriesInput: { CleanRooms: "ListProtectedQueries" },
  ListProtectedQueriesOutput: { CleanRooms: "ListProtectedQueries" },
  ListSchemasInput: { CleanRooms: "ListSchemas", Glue: "ListSchemas" },
  ListSchemasOutput: { CleanRooms: "ListSchemas" },
  StartProtectedQueryInput: { CleanRooms: "StartProtectedQuery" },
  StartProtectedQueryOutput: { CleanRooms: "StartProtectedQuery" },
  UpdateCollaborationInput: { CleanRooms: "UpdateCollaboration" },
  UpdateCollaborationOutput: { CleanRooms: "UpdateCollaboration" },
  UpdateConfiguredTableInput: { CleanRooms: "UpdateConfiguredTable" },
  UpdateConfiguredTableOutput: { CleanRooms: "UpdateConfiguredTable" },
  UpdateConfiguredTableAnalysisRuleInput: { CleanRooms: "UpdateConfiguredTableAnalysisRule" },
  UpdateConfiguredTableAnalysisRuleOutput: { CleanRooms: "UpdateConfiguredTableAnalysisRule" },
  UpdateConfiguredTableAssociationInput: { CleanRooms: "UpdateConfiguredTableAssociation" },
  UpdateConfiguredTableAssociationOutput: { CleanRooms: "UpdateConfiguredTableAssociation" },
  UpdateMembershipInput: { CleanRooms: "UpdateMembership" },
  UpdateMembershipOutput: { CleanRooms: "UpdateMembership" },
  UpdateProtectedQueryInput: { CleanRooms: "UpdateProtectedQuery" },
  UpdateProtectedQueryOutput: { CleanRooms: "UpdateProtectedQuery" },
  CreateEnvironmentEC2Result: { Cloud9: "CreateEnvironmentEC2" },
  CreateEnvironmentMembershipResult: { Cloud9: "CreateEnvironmentMembership" },
  DeleteEnvironmentResult: { Cloud9: "DeleteEnvironment" },
  DeleteEnvironmentMembershipResult: { Cloud9: "DeleteEnvironmentMembership" },
  DescribeEnvironmentMembershipsResult: { Cloud9: "DescribeEnvironmentMemberships" },
  DescribeEnvironmentStatusResult: { Cloud9: "DescribeEnvironmentStatus" },
  DescribeEnvironmentsResult: { Cloud9: "DescribeEnvironments" },
  ListEnvironmentsResult: { Cloud9: "ListEnvironments" },
  UpdateEnvironmentResult: { Cloud9: "UpdateEnvironment" },
  UpdateEnvironmentMembershipResult: { Cloud9: "UpdateEnvironmentMembership" },
  CancelResourceRequestInput: { CloudControl: "CancelResourceRequest" },
  CancelResourceRequestOutput: { CloudControl: "CancelResourceRequest" },
  CreateResourceInput: { CloudControl: "CreateResource" },
  CreateResourceOutput: { CloudControl: "CreateResource" },
  DeleteResourceInput: { CloudControl: "DeleteResource" },
  DeleteResourceOutput: { CloudControl: "DeleteResource" },
  GetResourceInput: { CloudControl: "GetResource" },
  GetResourceOutput: { CloudControl: "GetResource" },
  GetResourceRequestStatusInput: { CloudControl: "GetResourceRequestStatus" },
  GetResourceRequestStatusOutput: { CloudControl: "GetResourceRequestStatus" },
  ListResourceRequestsInput: { CloudControl: "ListResourceRequests" },
  ListResourceRequestsOutput: { CloudControl: "ListResourceRequests" },
  ListResourcesInput: { CloudControl: "ListResources" },
  ListResourcesOutput: { CloudControl: "ListResources" },
  UpdateResourceInput: { CloudControl: "UpdateResource" },
  UpdateResourceOutput: { CloudControl: "UpdateResource" },
  ActivateOrganizationsAccessInput: { CloudFormation: "ActivateOrganizationsAccess" },
  ActivateOrganizationsAccessOutput: { CloudFormation: "ActivateOrganizationsAccess" },
  ActivateTypeInput: { CloudFormation: "ActivateType" },
  ActivateTypeOutput: { CloudFormation: "ActivateType" },
  BatchDescribeTypeConfigurationsInput: { CloudFormation: "BatchDescribeTypeConfigurations" },
  BatchDescribeTypeConfigurationsOutput: { CloudFormation: "BatchDescribeTypeConfigurations" },
  CancelUpdateStackInput: { CloudFormation: "CancelUpdateStack" },
  ContinueUpdateRollbackInput: { CloudFormation: "ContinueUpdateRollback" },
  ContinueUpdateRollbackOutput: { CloudFormation: "ContinueUpdateRollback" },
  CreateChangeSetInput: { CloudFormation: "CreateChangeSet" },
  CreateChangeSetOutput: { CloudFormation: "CreateChangeSet" },
  CreateStackInput: { CloudFormation: "CreateStack" },
  CreateStackOutput: { CloudFormation: "CreateStack" },
  CreateStackInstancesInput: { CloudFormation: "CreateStackInstances" },
  CreateStackInstancesOutput: { CloudFormation: "CreateStackInstances" },
  CreateStackSetInput: { CloudFormation: "CreateStackSet" },
  CreateStackSetOutput: { CloudFormation: "CreateStackSet" },
  DeactivateOrganizationsAccessInput: { CloudFormation: "DeactivateOrganizationsAccess" },
  DeactivateOrganizationsAccessOutput: { CloudFormation: "DeactivateOrganizationsAccess" },
  DeactivateTypeInput: { CloudFormation: "DeactivateType" },
  DeactivateTypeOutput: { CloudFormation: "DeactivateType" },
  DeleteChangeSetInput: { CloudFormation: "DeleteChangeSet" },
  DeleteChangeSetOutput: { CloudFormation: "DeleteChangeSet" },
  DeleteStackInput: { CloudFormation: "DeleteStack" },
  DeleteStackInstancesInput: { CloudFormation: "DeleteStackInstances" },
  DeleteStackInstancesOutput: { CloudFormation: "DeleteStackInstances" },
  DeleteStackSetInput: { CloudFormation: "DeleteStackSet" },
  DeleteStackSetOutput: { CloudFormation: "DeleteStackSet" },
  DeregisterTypeInput: { CloudFormation: "DeregisterType" },
  DeregisterTypeOutput: { CloudFormation: "DeregisterType" },
  DescribeAccountLimitsInput: {
    CloudFormation: "DescribeAccountLimits",
    ELB: "DescribeAccountLimits",
    ELBv2: "DescribeAccountLimits",
  },
  DescribeAccountLimitsOutput: {
    CloudFormation: "DescribeAccountLimits",
    ELB: "DescribeAccountLimits",
    ELBv2: "DescribeAccountLimits",
  },
  DescribeChangeSetInput: { CloudFormation: "DescribeChangeSet" },
  DescribeChangeSetOutput: { CloudFormation: "DescribeChangeSet" },
  DescribeChangeSetHooksInput: { CloudFormation: "DescribeChangeSetHooks" },
  DescribeChangeSetHooksOutput: { CloudFormation: "DescribeChangeSetHooks" },
  DescribeOrganizationsAccessInput: { CloudFormation: "DescribeOrganizationsAccess" },
  DescribeOrganizationsAccessOutput: { CloudFormation: "DescribeOrganizationsAccess" },
  DescribePublisherInput: { CloudFormation: "DescribePublisher" },
  DescribePublisherOutput: { CloudFormation: "DescribePublisher" },
  DescribeStackDriftDetectionStatusInput: { CloudFormation: "DescribeStackDriftDetectionStatus" },
  DescribeStackDriftDetectionStatusOutput: { CloudFormation: "DescribeStackDriftDetectionStatus" },
  DescribeStackEventsInput: { CloudFormation: "DescribeStackEvents" },
  DescribeStackEventsOutput: { CloudFormation: "DescribeStackEvents" },
  DescribeStackInstanceInput: { CloudFormation: "DescribeStackInstance" },
  DescribeStackInstanceOutput: { CloudFormation: "DescribeStackInstance" },
  DescribeStackResourceInput: { CloudFormation: "DescribeStackResource" },
  DescribeStackResourceOutput: { CloudFormation: "DescribeStackResource" },
  DescribeStackResourceDriftsInput: { CloudFormation: "DescribeStackResourceDrifts" },
  DescribeStackResourceDriftsOutput: { CloudFormation: "DescribeStackResourceDrifts" },
  DescribeStackResourcesInput: { CloudFormation: "DescribeStackResources" },
  DescribeStackResourcesOutput: { CloudFormation: "DescribeStackResources" },
  DescribeStackSetInput: { CloudFormation: "DescribeStackSet" },
  DescribeStackSetOutput: { CloudFormation: "DescribeStackSet" },
  DescribeStackSetOperationInput: { CloudFormation: "DescribeStackSetOperation" },
  DescribeStackSetOperationOutput: { CloudFormation: "DescribeStackSetOperation" },
  DescribeStacksInput: { CloudFormation: "DescribeStacks" },
  DescribeStacksOutput: { CloudFormation: "DescribeStacks" },
  DescribeTypeInput: { CloudFormation: "DescribeType" },
  DescribeTypeOutput: { CloudFormation: "DescribeType" },
  DescribeTypeRegistrationInput: { CloudFormation: "DescribeTypeRegistration" },
  DescribeTypeRegistrationOutput: { CloudFormation: "DescribeTypeRegistration" },
  DetectStackDriftInput: { CloudFormation: "DetectStackDrift" },
  DetectStackDriftOutput: { CloudFormation: "DetectStackDrift" },
  DetectStackResourceDriftInput: { CloudFormation: "DetectStackResourceDrift" },
  DetectStackResourceDriftOutput: { CloudFormation: "DetectStackResourceDrift" },
  DetectStackSetDriftInput: { CloudFormation: "DetectStackSetDrift" },
  DetectStackSetDriftOutput: { CloudFormation: "DetectStackSetDrift" },
  EstimateTemplateCostInput: { CloudFormation: "EstimateTemplateCost" },
  EstimateTemplateCostOutput: { CloudFormation: "EstimateTemplateCost" },
  ExecuteChangeSetInput: { CloudFormation: "ExecuteChangeSet" },
  ExecuteChangeSetOutput: { CloudFormation: "ExecuteChangeSet" },
  GetStackPolicyInput: { CloudFormation: "GetStackPolicy" },
  GetStackPolicyOutput: { CloudFormation: "GetStackPolicy" },
  GetTemplateInput: { CloudFormation: "GetTemplate" },
  GetTemplateOutput: { CloudFormation: "GetTemplate" },
  GetTemplateSummaryInput: { CloudFormation: "GetTemplateSummary" },
  GetTemplateSummaryOutput: { CloudFormation: "GetTemplateSummary" },
  ImportStacksToStackSetInput: { CloudFormation: "ImportStacksToStackSet" },
  ImportStacksToStackSetOutput: { CloudFormation: "ImportStacksToStackSet" },
  ListChangeSetsInput: { CloudFormation: "ListChangeSets" },
  ListChangeSetsOutput: { CloudFormation: "ListChangeSets" },
  ListExportsInput: { CloudFormation: "ListExports", DynamoDB: "ListExports" },
  ListExportsOutput: { CloudFormation: "ListExports", DynamoDB: "ListExports" },
  ListImportsInput: { CloudFormation: "ListImports", DynamoDB: "ListImports" },
  ListImportsOutput: { CloudFormation: "ListImports", DynamoDB: "ListImports" },
  ListStackInstanceResourceDriftsInput: { CloudFormation: "ListStackInstanceResourceDrifts" },
  ListStackInstanceResourceDriftsOutput: { CloudFormation: "ListStackInstanceResourceDrifts" },
  ListStackInstancesInput: { CloudFormation: "ListStackInstances" },
  ListStackInstancesOutput: { CloudFormation: "ListStackInstances" },
  ListStackResourcesInput: { CloudFormation: "ListStackResources" },
  ListStackResourcesOutput: { CloudFormation: "ListStackResources" },
  ListStackSetOperationResultsInput: { CloudFormation: "ListStackSetOperationResults" },
  ListStackSetOperationResultsOutput: { CloudFormation: "ListStackSetOperationResults" },
  ListStackSetOperationsInput: { CloudFormation: "ListStackSetOperations" },
  ListStackSetOperationsOutput: { CloudFormation: "ListStackSetOperations" },
  ListStackSetsInput: { CloudFormation: "ListStackSets" },
  ListStackSetsOutput: { CloudFormation: "ListStackSets" },
  ListStacksInput: { CloudFormation: "ListStacks" },
  ListStacksOutput: { CloudFormation: "ListStacks" },
  ListTypeRegistrationsInput: { CloudFormation: "ListTypeRegistrations" },
  ListTypeRegistrationsOutput: { CloudFormation: "ListTypeRegistrations" },
  ListTypeVersionsInput: { CloudFormation: "ListTypeVersions" },
  ListTypeVersionsOutput: { CloudFormation: "ListTypeVersions" },
  ListTypesInput: { CloudFormation: "ListTypes" },
  ListTypesOutput: { CloudFormation: "ListTypes" },
  PublishTypeInput: { CloudFormation: "PublishType" },
  PublishTypeOutput: { CloudFormation: "PublishType" },
  RecordHandlerProgressInput: { CloudFormation: "RecordHandlerProgress" },
  RecordHandlerProgressOutput: { CloudFormation: "RecordHandlerProgress" },
  RegisterPublisherInput: { CloudFormation: "RegisterPublisher" },
  RegisterPublisherOutput: { CloudFormation: "RegisterPublisher" },
  RegisterTypeInput: { CloudFormation: "RegisterType" },
  RegisterTypeOutput: { CloudFormation: "RegisterType" },
  RollbackStackInput: { CloudFormation: "RollbackStack" },
  RollbackStackOutput: { CloudFormation: "RollbackStack" },
  SetStackPolicyInput: { CloudFormation: "SetStackPolicy" },
  SetTypeConfigurationInput: { CloudFormation: "SetTypeConfiguration" },
  SetTypeConfigurationOutput: { CloudFormation: "SetTypeConfiguration" },
  SetTypeDefaultVersionInput: { CloudFormation: "SetTypeDefaultVersion" },
  SetTypeDefaultVersionOutput: { CloudFormation: "SetTypeDefaultVersion" },
  SignalResourceInput: { CloudFormation: "SignalResource" },
  StopStackSetOperationInput: { CloudFormation: "StopStackSetOperation" },
  StopStackSetOperationOutput: { CloudFormation: "StopStackSetOperation" },
  TestTypeInput: { CloudFormation: "TestType" },
  TestTypeOutput: { CloudFormation: "TestType" },
  UpdateStackInput: { CloudFormation: "UpdateStack" },
  UpdateStackOutput: { CloudFormation: "UpdateStack" },
  UpdateStackInstancesInput: { CloudFormation: "UpdateStackInstances" },
  UpdateStackInstancesOutput: { CloudFormation: "UpdateStackInstances" },
  UpdateStackSetInput: { CloudFormation: "UpdateStackSet" },
  UpdateStackSetOutput: { CloudFormation: "UpdateStackSet" },
  UpdateTerminationProtectionInput: { CloudFormation: "UpdateTerminationProtection" },
  UpdateTerminationProtectionOutput: { CloudFormation: "UpdateTerminationProtection" },
  ValidateTemplateInput: { CloudFormation: "ValidateTemplate" },
  ValidateTemplateOutput: { CloudFormation: "ValidateTemplate" },
  CopyDistributionResult: { CloudFront: "CopyDistribution" },
  CreateCachePolicyResult: { CloudFront: "CreateCachePolicy" },
  CreateCloudFrontOriginAccessIdentityResult: {
    CloudFront: "CreateCloudFrontOriginAccessIdentity",
  },
  CreateContinuousDeploymentPolicyResult: { CloudFront: "CreateContinuousDeploymentPolicy" },
  CreateDistributionResult: { CloudFront: "CreateDistribution", Lightsail: "CreateDistribution" },
  CreateDistributionWithTagsResult: { CloudFront: "CreateDistributionWithTags" },
  CreateFieldLevelEncryptionConfigResult: { CloudFront: "CreateFieldLevelEncryptionConfig" },
  CreateFieldLevelEncryptionProfileResult: { CloudFront: "CreateFieldLevelEncryptionProfile" },
  CreateFunctionResult: { CloudFront: "CreateFunction" },
  CreateInvalidationResult: { CloudFront: "CreateInvalidation" },
  CreateKeyGroupResult: { CloudFront: "CreateKeyGroup" },
  CreateMonitoringSubscriptionResult: { CloudFront: "CreateMonitoringSubscription" },
  CreateOriginAccessControlResult: { CloudFront: "CreateOriginAccessControl" },
  CreateOriginRequestPolicyResult: { CloudFront: "CreateOriginRequestPolicy" },
  CreatePublicKeyResult: { CloudFront: "CreatePublicKey" },
  CreateRealtimeLogConfigResult: { CloudFront: "CreateRealtimeLogConfig" },
  CreateResponseHeadersPolicyResult: { CloudFront: "CreateResponseHeadersPolicy" },
  CreateStreamingDistributionResult: { CloudFront: "CreateStreamingDistribution" },
  CreateStreamingDistributionWithTagsResult: { CloudFront: "CreateStreamingDistributionWithTags" },
  DeleteMonitoringSubscriptionResult: { CloudFront: "DeleteMonitoringSubscription" },
  DescribeFunctionResult: { CloudFront: "DescribeFunction" },
  GetCachePolicyResult: { CloudFront: "GetCachePolicy" },
  GetCachePolicyConfigResult: { CloudFront: "GetCachePolicyConfig" },
  GetCloudFrontOriginAccessIdentityResult: { CloudFront: "GetCloudFrontOriginAccessIdentity" },
  GetCloudFrontOriginAccessIdentityConfigResult: {
    CloudFront: "GetCloudFrontOriginAccessIdentityConfig",
  },
  GetContinuousDeploymentPolicyResult: { CloudFront: "GetContinuousDeploymentPolicy" },
  GetContinuousDeploymentPolicyConfigResult: { CloudFront: "GetContinuousDeploymentPolicyConfig" },
  GetDistributionResult: { CloudFront: "GetDistribution" },
  GetDistributionConfigResult: { CloudFront: "GetDistributionConfig" },
  GetFieldLevelEncryptionResult: { CloudFront: "GetFieldLevelEncryption" },
  GetFieldLevelEncryptionConfigResult: { CloudFront: "GetFieldLevelEncryptionConfig" },
  GetFieldLevelEncryptionProfileResult: { CloudFront: "GetFieldLevelEncryptionProfile" },
  GetFieldLevelEncryptionProfileConfigResult: {
    CloudFront: "GetFieldLevelEncryptionProfileConfig",
  },
  GetFunctionResult: { CloudFront: "GetFunction" },
  GetInvalidationResult: { CloudFront: "GetInvalidation" },
  GetKeyGroupResult: { CloudFront: "GetKeyGroup" },
  GetKeyGroupConfigResult: { CloudFront: "GetKeyGroupConfig" },
  GetMonitoringSubscriptionResult: { CloudFront: "GetMonitoringSubscription" },
  GetOriginAccessControlResult: { CloudFront: "GetOriginAccessControl" },
  GetOriginAccessControlConfigResult: { CloudFront: "GetOriginAccessControlConfig" },
  GetOriginRequestPolicyResult: { CloudFront: "GetOriginRequestPolicy" },
  GetOriginRequestPolicyConfigResult: { CloudFront: "GetOriginRequestPolicyConfig" },
  GetPublicKeyResult: { CloudFront: "GetPublicKey" },
  GetPublicKeyConfigResult: { CloudFront: "GetPublicKeyConfig" },
  GetRealtimeLogConfigResult: { CloudFront: "GetRealtimeLogConfig" },
  GetResponseHeadersPolicyResult: { CloudFront: "GetResponseHeadersPolicy" },
  GetResponseHeadersPolicyConfigResult: { CloudFront: "GetResponseHeadersPolicyConfig" },
  GetStreamingDistributionResult: { CloudFront: "GetStreamingDistribution" },
  GetStreamingDistributionConfigResult: { CloudFront: "GetStreamingDistributionConfig" },
  ListCachePoliciesResult: { CloudFront: "ListCachePolicies" },
  ListCloudFrontOriginAccessIdentitiesResult: {
    CloudFront: "ListCloudFrontOriginAccessIdentities",
  },
  ListConflictingAliasesResult: { CloudFront: "ListConflictingAliases" },
  ListContinuousDeploymentPoliciesResult: { CloudFront: "ListContinuousDeploymentPolicies" },
  ListDistributionsResult: { CloudFront: "ListDistributions" },
  ListDistributionsByCachePolicyIdResult: { CloudFront: "ListDistributionsByCachePolicyId" },
  ListDistributionsByKeyGroupResult: { CloudFront: "ListDistributionsByKeyGroup" },
  ListDistributionsByOriginRequestPolicyIdResult: {
    CloudFront: "ListDistributionsByOriginRequestPolicyId",
  },
  ListDistributionsByRealtimeLogConfigResult: {
    CloudFront: "ListDistributionsByRealtimeLogConfig",
  },
  ListDistributionsByResponseHeadersPolicyIdResult: {
    CloudFront: "ListDistributionsByResponseHeadersPolicyId",
  },
  ListDistributionsByWebACLIdResult: { CloudFront: "ListDistributionsByWebACLId" },
  ListFieldLevelEncryptionConfigsResult: { CloudFront: "ListFieldLevelEncryptionConfigs" },
  ListFieldLevelEncryptionProfilesResult: { CloudFront: "ListFieldLevelEncryptionProfiles" },
  ListFunctionsResult: { CloudFront: "ListFunctions" },
  ListInvalidationsResult: { CloudFront: "ListInvalidations" },
  ListKeyGroupsResult: { CloudFront: "ListKeyGroups" },
  ListOriginAccessControlsResult: { CloudFront: "ListOriginAccessControls" },
  ListOriginRequestPoliciesResult: { CloudFront: "ListOriginRequestPolicies" },
  ListPublicKeysResult: { CloudFront: "ListPublicKeys" },
  ListRealtimeLogConfigsResult: { CloudFront: "ListRealtimeLogConfigs" },
  ListResponseHeadersPoliciesResult: { CloudFront: "ListResponseHeadersPolicies" },
  ListStreamingDistributionsResult: { CloudFront: "ListStreamingDistributions" },
  ListTagsForResourceResult: {
    CloudFront: "ListTagsForResource",
    CodeArtifact: "ListTagsForResource",
    CodeStarNotifications: "ListTagsForResource",
    DirectoryService: "ListTagsForResource",
    ElasticInference: "ListTagsForResource",
    FraudDetector: "ListTagsForResource",
    GameSparks: "ListTagsForResource",
    Honeycode: "ListTagsForResource",
    PinpointSMSVoiceV2: "ListTagsForResource",
    SSM: "ListTagsForResource",
    SSMContacts: "ListTagsForResource",
  },
  PublishFunctionResult: { CloudFront: "PublishFunction" },
  TestFunctionResult: { CloudFront: "TestFunction" },
  UpdateCachePolicyResult: { CloudFront: "UpdateCachePolicy" },
  UpdateCloudFrontOriginAccessIdentityResult: {
    CloudFront: "UpdateCloudFrontOriginAccessIdentity",
  },
  UpdateContinuousDeploymentPolicyResult: { CloudFront: "UpdateContinuousDeploymentPolicy" },
  UpdateDistributionResult: { CloudFront: "UpdateDistribution", Lightsail: "UpdateDistribution" },
  UpdateDistributionWithStagingConfigResult: { CloudFront: "UpdateDistributionWithStagingConfig" },
  UpdateFieldLevelEncryptionConfigResult: { CloudFront: "UpdateFieldLevelEncryptionConfig" },
  UpdateFieldLevelEncryptionProfileResult: { CloudFront: "UpdateFieldLevelEncryptionProfile" },
  UpdateFunctionResult: { CloudFront: "UpdateFunction" },
  UpdateKeyGroupResult: { CloudFront: "UpdateKeyGroup" },
  UpdateOriginAccessControlResult: { CloudFront: "UpdateOriginAccessControl" },
  UpdateOriginRequestPolicyResult: { CloudFront: "UpdateOriginRequestPolicy" },
  UpdatePublicKeyResult: { CloudFront: "UpdatePublicKey" },
  UpdateRealtimeLogConfigResult: { CloudFront: "UpdateRealtimeLogConfig" },
  UpdateResponseHeadersPolicyResult: { CloudFront: "UpdateResponseHeadersPolicy" },
  UpdateStreamingDistributionResult: { CloudFront: "UpdateStreamingDistribution" },
  DeleteAlarmsInput: { CloudWatch: "DeleteAlarms" },
  DeleteAnomalyDetectorInput: { CloudWatch: "DeleteAnomalyDetector" },
  DeleteAnomalyDetectorOutput: { CloudWatch: "DeleteAnomalyDetector" },
  DeleteDashboardsInput: { CloudWatch: "DeleteDashboards" },
  DeleteDashboardsOutput: { CloudWatch: "DeleteDashboards" },
  DeleteInsightRulesInput: { CloudWatch: "DeleteInsightRules" },
  DeleteInsightRulesOutput: { CloudWatch: "DeleteInsightRules" },
  DeleteMetricStreamInput: { CloudWatch: "DeleteMetricStream" },
  DeleteMetricStreamOutput: { CloudWatch: "DeleteMetricStream" },
  DescribeAlarmHistoryInput: { CloudWatch: "DescribeAlarmHistory" },
  DescribeAlarmHistoryOutput: { CloudWatch: "DescribeAlarmHistory" },
  DescribeAlarmsInput: { CloudWatch: "DescribeAlarms" },
  DescribeAlarmsOutput: { CloudWatch: "DescribeAlarms" },
  DescribeAlarmsForMetricInput: { CloudWatch: "DescribeAlarmsForMetric" },
  DescribeAlarmsForMetricOutput: { CloudWatch: "DescribeAlarmsForMetric" },
  DescribeAnomalyDetectorsInput: { CloudWatch: "DescribeAnomalyDetectors" },
  DescribeAnomalyDetectorsOutput: { CloudWatch: "DescribeAnomalyDetectors" },
  DescribeInsightRulesInput: { CloudWatch: "DescribeInsightRules" },
  DescribeInsightRulesOutput: { CloudWatch: "DescribeInsightRules" },
  DisableAlarmActionsInput: { CloudWatch: "DisableAlarmActions" },
  DisableInsightRulesInput: { CloudWatch: "DisableInsightRules" },
  DisableInsightRulesOutput: { CloudWatch: "DisableInsightRules" },
  EnableAlarmActionsInput: { CloudWatch: "EnableAlarmActions" },
  EnableInsightRulesInput: { CloudWatch: "EnableInsightRules" },
  EnableInsightRulesOutput: { CloudWatch: "EnableInsightRules" },
  GetDashboardInput: { CloudWatch: "GetDashboard" },
  GetDashboardOutput: { CloudWatch: "GetDashboard" },
  GetInsightRuleReportInput: { CloudWatch: "GetInsightRuleReport" },
  GetInsightRuleReportOutput: { CloudWatch: "GetInsightRuleReport" },
  GetMetricDataInput: { CloudWatch: "GetMetricData" },
  GetMetricDataOutput: { CloudWatch: "GetMetricData" },
  GetMetricStatisticsInput: { CloudWatch: "GetMetricStatistics" },
  GetMetricStatisticsOutput: { CloudWatch: "GetMetricStatistics" },
  GetMetricStreamInput: { CloudWatch: "GetMetricStream" },
  GetMetricStreamOutput: { CloudWatch: "GetMetricStream" },
  GetMetricWidgetImageInput: { CloudWatch: "GetMetricWidgetImage" },
  GetMetricWidgetImageOutput: { CloudWatch: "GetMetricWidgetImage" },
  ListDashboardsInput: { CloudWatch: "ListDashboards" },
  ListDashboardsOutput: { CloudWatch: "ListDashboards" },
  ListManagedInsightRulesInput: { CloudWatch: "ListManagedInsightRules" },
  ListManagedInsightRulesOutput: { CloudWatch: "ListManagedInsightRules" },
  ListMetricStreamsInput: { CloudWatch: "ListMetricStreams" },
  ListMetricStreamsOutput: { CloudWatch: "ListMetricStreams" },
  ListMetricsInput: { CloudWatch: "ListMetrics" },
  ListMetricsOutput: { CloudWatch: "ListMetrics" },
  PutAnomalyDetectorInput: { CloudWatch: "PutAnomalyDetector" },
  PutAnomalyDetectorOutput: { CloudWatch: "PutAnomalyDetector" },
  PutCompositeAlarmInput: { CloudWatch: "PutCompositeAlarm" },
  PutDashboardInput: { CloudWatch: "PutDashboard" },
  PutDashboardOutput: { CloudWatch: "PutDashboard" },
  PutInsightRuleInput: { CloudWatch: "PutInsightRule" },
  PutInsightRuleOutput: { CloudWatch: "PutInsightRule" },
  PutManagedInsightRulesInput: { CloudWatch: "PutManagedInsightRules" },
  PutManagedInsightRulesOutput: { CloudWatch: "PutManagedInsightRules" },
  PutMetricAlarmInput: { CloudWatch: "PutMetricAlarm" },
  PutMetricDataInput: { CloudWatch: "PutMetricData" },
  PutMetricStreamInput: { CloudWatch: "PutMetricStream" },
  PutMetricStreamOutput: { CloudWatch: "PutMetricStream" },
  SetAlarmStateInput: { CloudWatch: "SetAlarmState" },
  StartMetricStreamsInput: { CloudWatch: "StartMetricStreams" },
  StartMetricStreamsOutput: { CloudWatch: "StartMetricStreams" },
  StopMetricStreamsInput: { CloudWatch: "StopMetricStreams" },
  StopMetricStreamsOutput: { CloudWatch: "StopMetricStreams" },
  AssociateExternalConnectionResult: { CodeArtifact: "AssociateExternalConnection" },
  CopyPackageVersionsResult: { CodeArtifact: "CopyPackageVersions" },
  CreateDomainResult: { CodeArtifact: "CreateDomain", Lightsail: "CreateDomain" },
  CreateRepositoryResult: { CodeArtifact: "CreateRepository" },
  DeleteDomainResult: { CodeArtifact: "DeleteDomain", Lightsail: "DeleteDomain" },
  DeleteDomainPermissionsPolicyResult: { CodeArtifact: "DeleteDomainPermissionsPolicy" },
  DeletePackageResult: { CodeArtifact: "DeletePackage" },
  DeletePackageVersionsResult: { CodeArtifact: "DeletePackageVersions" },
  DeleteRepositoryResult: { CodeArtifact: "DeleteRepository" },
  DeleteRepositoryPermissionsPolicyResult: { CodeArtifact: "DeleteRepositoryPermissionsPolicy" },
  DescribeDomainResult: { CodeArtifact: "DescribeDomain" },
  DescribePackageResult: { CodeArtifact: "DescribePackage" },
  DescribePackageVersionResult: { CodeArtifact: "DescribePackageVersion" },
  DescribeRepositoryResult: { CodeArtifact: "DescribeRepository" },
  DisassociateExternalConnectionResult: { CodeArtifact: "DisassociateExternalConnection" },
  DisposePackageVersionsResult: { CodeArtifact: "DisposePackageVersions" },
  GetAuthorizationTokenResult: { CodeArtifact: "GetAuthorizationToken" },
  GetDomainPermissionsPolicyResult: { CodeArtifact: "GetDomainPermissionsPolicy" },
  GetPackageVersionAssetResult: { CodeArtifact: "GetPackageVersionAsset" },
  GetPackageVersionReadmeResult: { CodeArtifact: "GetPackageVersionReadme" },
  GetRepositoryEndpointResult: { CodeArtifact: "GetRepositoryEndpoint" },
  GetRepositoryPermissionsPolicyResult: { CodeArtifact: "GetRepositoryPermissionsPolicy" },
  ListDomainsResult: { CodeArtifact: "ListDomains" },
  ListPackageVersionAssetsResult: { CodeArtifact: "ListPackageVersionAssets" },
  ListPackageVersionDependenciesResult: { CodeArtifact: "ListPackageVersionDependencies" },
  ListPackageVersionsResult: { CodeArtifact: "ListPackageVersions" },
  ListPackagesResult: { CodeArtifact: "ListPackages" },
  ListRepositoriesResult: { CodeArtifact: "ListRepositories" },
  ListRepositoriesInDomainResult: { CodeArtifact: "ListRepositoriesInDomain" },
  PublishPackageVersionResult: { CodeArtifact: "PublishPackageVersion" },
  PutDomainPermissionsPolicyResult: { CodeArtifact: "PutDomainPermissionsPolicy" },
  PutPackageOriginConfigurationResult: { CodeArtifact: "PutPackageOriginConfiguration" },
  PutRepositoryPermissionsPolicyResult: { CodeArtifact: "PutRepositoryPermissionsPolicy" },
  TagResourceResult: {
    CodeArtifact: "TagResource",
    CodeStarNotifications: "TagResource",
    ElasticInference: "TagResource",
    FraudDetector: "TagResource",
    GameSparks: "TagResource",
    Honeycode: "TagResource",
    Lightsail: "TagResource",
    PinpointSMSVoiceV2: "TagResource",
    SSMContacts: "TagResource",
  },
  UntagResourceResult: {
    CodeArtifact: "UntagResource",
    CodeStarNotifications: "UntagResource",
    ElasticInference: "UntagResource",
    FraudDetector: "UntagResource",
    GameSparks: "UntagResource",
    Honeycode: "UntagResource",
    Lightsail: "UntagResource",
    PinpointSMSVoiceV2: "UntagResource",
    SSMContacts: "UntagResource",
  },
  UpdatePackageVersionsStatusResult: { CodeArtifact: "UpdatePackageVersionsStatus" },
  UpdateRepositoryResult: { CodeArtifact: "UpdateRepository" },
  BatchDeleteBuildsInput: { CodeBuild: "BatchDeleteBuilds" },
  BatchDeleteBuildsOutput: { CodeBuild: "BatchDeleteBuilds" },
  BatchGetBuildBatchesInput: { CodeBuild: "BatchGetBuildBatches" },
  BatchGetBuildBatchesOutput: { CodeBuild: "BatchGetBuildBatches" },
  BatchGetBuildsInput: { CodeBuild: "BatchGetBuilds" },
  BatchGetBuildsOutput: { CodeBuild: "BatchGetBuilds" },
  BatchGetProjectsInput: { CodeBuild: "BatchGetProjects" },
  BatchGetProjectsOutput: { CodeBuild: "BatchGetProjects" },
  BatchGetReportGroupsInput: { CodeBuild: "BatchGetReportGroups" },
  BatchGetReportGroupsOutput: { CodeBuild: "BatchGetReportGroups" },
  BatchGetReportsInput: { CodeBuild: "BatchGetReports" },
  BatchGetReportsOutput: { CodeBuild: "BatchGetReports" },
  CreateProjectInput: { CodeBuild: "CreateProject", SageMaker: "CreateProject" },
  CreateProjectOutput: { CodeBuild: "CreateProject", SageMaker: "CreateProject" },
  CreateReportGroupInput: { CodeBuild: "CreateReportGroup" },
  CreateReportGroupOutput: { CodeBuild: "CreateReportGroup" },
  CreateWebhookInput: { CodeBuild: "CreateWebhook" },
  CreateWebhookOutput: { CodeBuild: "CreateWebhook" },
  DeleteBuildBatchInput: { CodeBuild: "DeleteBuildBatch" },
  DeleteBuildBatchOutput: { CodeBuild: "DeleteBuildBatch" },
  DeleteProjectInput: { CodeBuild: "DeleteProject", SageMaker: "DeleteProject" },
  DeleteProjectOutput: { CodeBuild: "DeleteProject" },
  DeleteReportInput: { CodeBuild: "DeleteReport" },
  DeleteReportOutput: { CodeBuild: "DeleteReport" },
  DeleteReportGroupInput: { CodeBuild: "DeleteReportGroup" },
  DeleteReportGroupOutput: { CodeBuild: "DeleteReportGroup" },
  DeleteResourcePolicyInput: {
    CodeBuild: "DeleteResourcePolicy",
    SSMIncidents: "DeleteResourcePolicy",
  },
  DeleteResourcePolicyOutput: {
    CodeBuild: "DeleteResourcePolicy",
    SSMIncidents: "DeleteResourcePolicy",
  },
  DeleteSourceCredentialsInput: { CodeBuild: "DeleteSourceCredentials" },
  DeleteSourceCredentialsOutput: { CodeBuild: "DeleteSourceCredentials" },
  DeleteWebhookInput: { CodeBuild: "DeleteWebhook", CodePipeline: "DeleteWebhook" },
  DeleteWebhookOutput: { CodeBuild: "DeleteWebhook", CodePipeline: "DeleteWebhook" },
  DescribeCodeCoveragesInput: { CodeBuild: "DescribeCodeCoverages" },
  DescribeCodeCoveragesOutput: { CodeBuild: "DescribeCodeCoverages" },
  DescribeTestCasesInput: { CodeBuild: "DescribeTestCases" },
  DescribeTestCasesOutput: { CodeBuild: "DescribeTestCases" },
  GetReportGroupTrendInput: { CodeBuild: "GetReportGroupTrend" },
  GetReportGroupTrendOutput: { CodeBuild: "GetReportGroupTrend" },
  GetResourcePolicyInput: { CodeBuild: "GetResourcePolicy" },
  GetResourcePolicyOutput: { CodeBuild: "GetResourcePolicy" },
  ImportSourceCredentialsInput: { CodeBuild: "ImportSourceCredentials" },
  ImportSourceCredentialsOutput: { CodeBuild: "ImportSourceCredentials" },
  InvalidateProjectCacheInput: { CodeBuild: "InvalidateProjectCache" },
  InvalidateProjectCacheOutput: { CodeBuild: "InvalidateProjectCache" },
  ListBuildBatchesInput: { CodeBuild: "ListBuildBatches" },
  ListBuildBatchesOutput: { CodeBuild: "ListBuildBatches" },
  ListBuildBatchesForProjectInput: { CodeBuild: "ListBuildBatchesForProject" },
  ListBuildBatchesForProjectOutput: { CodeBuild: "ListBuildBatchesForProject" },
  ListBuildsInput: { CodeBuild: "ListBuilds", GameLift: "ListBuilds" },
  ListBuildsOutput: { CodeBuild: "ListBuilds", GameLift: "ListBuilds" },
  ListBuildsForProjectInput: { CodeBuild: "ListBuildsForProject" },
  ListBuildsForProjectOutput: { CodeBuild: "ListBuildsForProject" },
  ListCuratedEnvironmentImagesInput: { CodeBuild: "ListCuratedEnvironmentImages" },
  ListCuratedEnvironmentImagesOutput: { CodeBuild: "ListCuratedEnvironmentImages" },
  ListProjectsInput: { CodeBuild: "ListProjects", SageMaker: "ListProjects" },
  ListProjectsOutput: { CodeBuild: "ListProjects", SageMaker: "ListProjects" },
  ListReportGroupsInput: { CodeBuild: "ListReportGroups" },
  ListReportGroupsOutput: { CodeBuild: "ListReportGroups" },
  ListReportsInput: { CodeBuild: "ListReports" },
  ListReportsOutput: { CodeBuild: "ListReports" },
  ListReportsForReportGroupInput: { CodeBuild: "ListReportsForReportGroup" },
  ListReportsForReportGroupOutput: { CodeBuild: "ListReportsForReportGroup" },
  ListSharedProjectsInput: { CodeBuild: "ListSharedProjects" },
  ListSharedProjectsOutput: { CodeBuild: "ListSharedProjects" },
  ListSharedReportGroupsInput: { CodeBuild: "ListSharedReportGroups" },
  ListSharedReportGroupsOutput: { CodeBuild: "ListSharedReportGroups" },
  ListSourceCredentialsInput: { CodeBuild: "ListSourceCredentials" },
  ListSourceCredentialsOutput: { CodeBuild: "ListSourceCredentials" },
  PutResourcePolicyInput: { CodeBuild: "PutResourcePolicy", SSMIncidents: "PutResourcePolicy" },
  PutResourcePolicyOutput: { CodeBuild: "PutResourcePolicy", SSMIncidents: "PutResourcePolicy" },
  RetryBuildInput: { CodeBuild: "RetryBuild" },
  RetryBuildOutput: { CodeBuild: "RetryBuild" },
  RetryBuildBatchInput: { CodeBuild: "RetryBuildBatch" },
  RetryBuildBatchOutput: { CodeBuild: "RetryBuildBatch" },
  StartBuildInput: { CodeBuild: "StartBuild" },
  StartBuildOutput: { CodeBuild: "StartBuild" },
  StartBuildBatchInput: { CodeBuild: "StartBuildBatch" },
  StartBuildBatchOutput: { CodeBuild: "StartBuildBatch" },
  StopBuildInput: { CodeBuild: "StopBuild" },
  StopBuildOutput: { CodeBuild: "StopBuild" },
  StopBuildBatchInput: { CodeBuild: "StopBuildBatch" },
  StopBuildBatchOutput: { CodeBuild: "StopBuildBatch" },
  UpdateProjectInput: { CodeBuild: "UpdateProject", SageMaker: "UpdateProject" },
  UpdateProjectOutput: { CodeBuild: "UpdateProject", SageMaker: "UpdateProject" },
  UpdateProjectVisibilityInput: { CodeBuild: "UpdateProjectVisibility" },
  UpdateProjectVisibilityOutput: { CodeBuild: "UpdateProjectVisibility" },
  UpdateReportGroupInput: { CodeBuild: "UpdateReportGroup" },
  UpdateReportGroupOutput: { CodeBuild: "UpdateReportGroup" },
  UpdateWebhookInput: { CodeBuild: "UpdateWebhook" },
  UpdateWebhookOutput: { CodeBuild: "UpdateWebhook" },
  AssociateApprovalRuleTemplateWithRepositoryInput: {
    CodeCommit: "AssociateApprovalRuleTemplateWithRepository",
  },
  BatchAssociateApprovalRuleTemplateWithRepositoriesInput: {
    CodeCommit: "BatchAssociateApprovalRuleTemplateWithRepositories",
  },
  BatchAssociateApprovalRuleTemplateWithRepositoriesOutput: {
    CodeCommit: "BatchAssociateApprovalRuleTemplateWithRepositories",
  },
  BatchDescribeMergeConflictsInput: { CodeCommit: "BatchDescribeMergeConflicts" },
  BatchDescribeMergeConflictsOutput: { CodeCommit: "BatchDescribeMergeConflicts" },
  BatchDisassociateApprovalRuleTemplateFromRepositoriesInput: {
    CodeCommit: "BatchDisassociateApprovalRuleTemplateFromRepositories",
  },
  BatchDisassociateApprovalRuleTemplateFromRepositoriesOutput: {
    CodeCommit: "BatchDisassociateApprovalRuleTemplateFromRepositories",
  },
  BatchGetCommitsInput: { CodeCommit: "BatchGetCommits" },
  BatchGetCommitsOutput: { CodeCommit: "BatchGetCommits" },
  BatchGetRepositoriesInput: { CodeCommit: "BatchGetRepositories" },
  BatchGetRepositoriesOutput: { CodeCommit: "BatchGetRepositories" },
  CreateApprovalRuleTemplateInput: { CodeCommit: "CreateApprovalRuleTemplate" },
  CreateApprovalRuleTemplateOutput: { CodeCommit: "CreateApprovalRuleTemplate" },
  CreateBranchInput: { CodeCommit: "CreateBranch" },
  CreateCommitInput: { CodeCommit: "CreateCommit" },
  CreateCommitOutput: { CodeCommit: "CreateCommit" },
  CreatePullRequestInput: { CodeCommit: "CreatePullRequest" },
  CreatePullRequestOutput: { CodeCommit: "CreatePullRequest" },
  CreatePullRequestApprovalRuleInput: { CodeCommit: "CreatePullRequestApprovalRule" },
  CreatePullRequestApprovalRuleOutput: { CodeCommit: "CreatePullRequestApprovalRule" },
  CreateRepositoryInput: { CodeCommit: "CreateRepository", Proton: "CreateRepository" },
  CreateRepositoryOutput: { CodeCommit: "CreateRepository", Proton: "CreateRepository" },
  CreateUnreferencedMergeCommitInput: { CodeCommit: "CreateUnreferencedMergeCommit" },
  CreateUnreferencedMergeCommitOutput: { CodeCommit: "CreateUnreferencedMergeCommit" },
  DeleteApprovalRuleTemplateInput: { CodeCommit: "DeleteApprovalRuleTemplate" },
  DeleteApprovalRuleTemplateOutput: { CodeCommit: "DeleteApprovalRuleTemplate" },
  DeleteBranchInput: { CodeCommit: "DeleteBranch" },
  DeleteBranchOutput: { CodeCommit: "DeleteBranch" },
  DeleteCommentContentInput: { CodeCommit: "DeleteCommentContent" },
  DeleteCommentContentOutput: { CodeCommit: "DeleteCommentContent" },
  DeleteFileInput: { CodeCommit: "DeleteFile" },
  DeleteFileOutput: { CodeCommit: "DeleteFile" },
  DeletePullRequestApprovalRuleInput: { CodeCommit: "DeletePullRequestApprovalRule" },
  DeletePullRequestApprovalRuleOutput: { CodeCommit: "DeletePullRequestApprovalRule" },
  DeleteRepositoryInput: { CodeCommit: "DeleteRepository", Proton: "DeleteRepository" },
  DeleteRepositoryOutput: { CodeCommit: "DeleteRepository", Proton: "DeleteRepository" },
  DescribeMergeConflictsInput: { CodeCommit: "DescribeMergeConflicts" },
  DescribeMergeConflictsOutput: { CodeCommit: "DescribeMergeConflicts" },
  DescribePullRequestEventsInput: { CodeCommit: "DescribePullRequestEvents" },
  DescribePullRequestEventsOutput: { CodeCommit: "DescribePullRequestEvents" },
  DisassociateApprovalRuleTemplateFromRepositoryInput: {
    CodeCommit: "DisassociateApprovalRuleTemplateFromRepository",
  },
  EvaluatePullRequestApprovalRulesInput: { CodeCommit: "EvaluatePullRequestApprovalRules" },
  EvaluatePullRequestApprovalRulesOutput: { CodeCommit: "EvaluatePullRequestApprovalRules" },
  GetApprovalRuleTemplateInput: { CodeCommit: "GetApprovalRuleTemplate" },
  GetApprovalRuleTemplateOutput: { CodeCommit: "GetApprovalRuleTemplate" },
  GetBlobInput: { CodeCommit: "GetBlob" },
  GetBlobOutput: { CodeCommit: "GetBlob" },
  GetBranchInput: { CodeCommit: "GetBranch" },
  GetBranchOutput: { CodeCommit: "GetBranch" },
  GetCommentInput: { CodeCommit: "GetComment" },
  GetCommentOutput: { CodeCommit: "GetComment" },
  GetCommentReactionsInput: { CodeCommit: "GetCommentReactions" },
  GetCommentReactionsOutput: { CodeCommit: "GetCommentReactions" },
  GetCommentsForComparedCommitInput: { CodeCommit: "GetCommentsForComparedCommit" },
  GetCommentsForComparedCommitOutput: { CodeCommit: "GetCommentsForComparedCommit" },
  GetCommentsForPullRequestInput: { CodeCommit: "GetCommentsForPullRequest" },
  GetCommentsForPullRequestOutput: { CodeCommit: "GetCommentsForPullRequest" },
  GetCommitInput: { CodeCommit: "GetCommit" },
  GetCommitOutput: { CodeCommit: "GetCommit" },
  GetDifferencesInput: { CodeCommit: "GetDifferences" },
  GetDifferencesOutput: { CodeCommit: "GetDifferences" },
  GetFileInput: { CodeCommit: "GetFile" },
  GetFileOutput: { CodeCommit: "GetFile" },
  GetFolderInput: { CodeCommit: "GetFolder" },
  GetFolderOutput: { CodeCommit: "GetFolder" },
  GetMergeCommitInput: { CodeCommit: "GetMergeCommit" },
  GetMergeCommitOutput: { CodeCommit: "GetMergeCommit" },
  GetMergeConflictsInput: { CodeCommit: "GetMergeConflicts" },
  GetMergeConflictsOutput: { CodeCommit: "GetMergeConflicts" },
  GetMergeOptionsInput: { CodeCommit: "GetMergeOptions" },
  GetMergeOptionsOutput: { CodeCommit: "GetMergeOptions" },
  GetPullRequestInput: { CodeCommit: "GetPullRequest" },
  GetPullRequestOutput: { CodeCommit: "GetPullRequest" },
  GetPullRequestApprovalStatesInput: { CodeCommit: "GetPullRequestApprovalStates" },
  GetPullRequestApprovalStatesOutput: { CodeCommit: "GetPullRequestApprovalStates" },
  GetPullRequestOverrideStateInput: { CodeCommit: "GetPullRequestOverrideState" },
  GetPullRequestOverrideStateOutput: { CodeCommit: "GetPullRequestOverrideState" },
  GetRepositoryInput: { CodeCommit: "GetRepository", Proton: "GetRepository" },
  GetRepositoryOutput: { CodeCommit: "GetRepository", Proton: "GetRepository" },
  GetRepositoryTriggersInput: { CodeCommit: "GetRepositoryTriggers" },
  GetRepositoryTriggersOutput: { CodeCommit: "GetRepositoryTriggers" },
  ListApprovalRuleTemplatesInput: { CodeCommit: "ListApprovalRuleTemplates" },
  ListApprovalRuleTemplatesOutput: { CodeCommit: "ListApprovalRuleTemplates" },
  ListAssociatedApprovalRuleTemplatesForRepositoryInput: {
    CodeCommit: "ListAssociatedApprovalRuleTemplatesForRepository",
  },
  ListAssociatedApprovalRuleTemplatesForRepositoryOutput: {
    CodeCommit: "ListAssociatedApprovalRuleTemplatesForRepository",
  },
  ListBranchesInput: { CodeCommit: "ListBranches" },
  ListBranchesOutput: { CodeCommit: "ListBranches" },
  ListPullRequestsInput: { CodeCommit: "ListPullRequests" },
  ListPullRequestsOutput: { CodeCommit: "ListPullRequests" },
  ListRepositoriesInput: { CodeCommit: "ListRepositories", Proton: "ListRepositories" },
  ListRepositoriesOutput: { CodeCommit: "ListRepositories", Proton: "ListRepositories" },
  ListRepositoriesForApprovalRuleTemplateInput: {
    CodeCommit: "ListRepositoriesForApprovalRuleTemplate",
  },
  ListRepositoriesForApprovalRuleTemplateOutput: {
    CodeCommit: "ListRepositoriesForApprovalRuleTemplate",
  },
  MergeBranchesByFastForwardInput: { CodeCommit: "MergeBranchesByFastForward" },
  MergeBranchesByFastForwardOutput: { CodeCommit: "MergeBranchesByFastForward" },
  MergeBranchesBySquashInput: { CodeCommit: "MergeBranchesBySquash" },
  MergeBranchesBySquashOutput: { CodeCommit: "MergeBranchesBySquash" },
  MergeBranchesByThreeWayInput: { CodeCommit: "MergeBranchesByThreeWay" },
  MergeBranchesByThreeWayOutput: { CodeCommit: "MergeBranchesByThreeWay" },
  MergePullRequestByFastForwardInput: { CodeCommit: "MergePullRequestByFastForward" },
  MergePullRequestByFastForwardOutput: { CodeCommit: "MergePullRequestByFastForward" },
  MergePullRequestBySquashInput: { CodeCommit: "MergePullRequestBySquash" },
  MergePullRequestBySquashOutput: { CodeCommit: "MergePullRequestBySquash" },
  MergePullRequestByThreeWayInput: { CodeCommit: "MergePullRequestByThreeWay" },
  MergePullRequestByThreeWayOutput: { CodeCommit: "MergePullRequestByThreeWay" },
  OverridePullRequestApprovalRulesInput: { CodeCommit: "OverridePullRequestApprovalRules" },
  PostCommentForComparedCommitInput: { CodeCommit: "PostCommentForComparedCommit" },
  PostCommentForComparedCommitOutput: { CodeCommit: "PostCommentForComparedCommit" },
  PostCommentForPullRequestInput: { CodeCommit: "PostCommentForPullRequest" },
  PostCommentForPullRequestOutput: { CodeCommit: "PostCommentForPullRequest" },
  PostCommentReplyInput: { CodeCommit: "PostCommentReply" },
  PostCommentReplyOutput: { CodeCommit: "PostCommentReply" },
  PutCommentReactionInput: { CodeCommit: "PutCommentReaction" },
  PutFileInput: { CodeCommit: "PutFile" },
  PutFileOutput: { CodeCommit: "PutFile" },
  PutRepositoryTriggersInput: { CodeCommit: "PutRepositoryTriggers" },
  PutRepositoryTriggersOutput: { CodeCommit: "PutRepositoryTriggers" },
  TestRepositoryTriggersInput: { CodeCommit: "TestRepositoryTriggers" },
  TestRepositoryTriggersOutput: { CodeCommit: "TestRepositoryTriggers" },
  UpdateApprovalRuleTemplateContentInput: { CodeCommit: "UpdateApprovalRuleTemplateContent" },
  UpdateApprovalRuleTemplateContentOutput: { CodeCommit: "UpdateApprovalRuleTemplateContent" },
  UpdateApprovalRuleTemplateDescriptionInput: {
    CodeCommit: "UpdateApprovalRuleTemplateDescription",
  },
  UpdateApprovalRuleTemplateDescriptionOutput: {
    CodeCommit: "UpdateApprovalRuleTemplateDescription",
  },
  UpdateApprovalRuleTemplateNameInput: { CodeCommit: "UpdateApprovalRuleTemplateName" },
  UpdateApprovalRuleTemplateNameOutput: { CodeCommit: "UpdateApprovalRuleTemplateName" },
  UpdateCommentInput: { CodeCommit: "UpdateComment" },
  UpdateCommentOutput: { CodeCommit: "UpdateComment" },
  UpdateDefaultBranchInput: { CodeCommit: "UpdateDefaultBranch" },
  UpdatePullRequestApprovalRuleContentInput: { CodeCommit: "UpdatePullRequestApprovalRuleContent" },
  UpdatePullRequestApprovalRuleContentOutput: {
    CodeCommit: "UpdatePullRequestApprovalRuleContent",
  },
  UpdatePullRequestApprovalStateInput: { CodeCommit: "UpdatePullRequestApprovalState" },
  UpdatePullRequestDescriptionInput: { CodeCommit: "UpdatePullRequestDescription" },
  UpdatePullRequestDescriptionOutput: { CodeCommit: "UpdatePullRequestDescription" },
  UpdatePullRequestStatusInput: { CodeCommit: "UpdatePullRequestStatus" },
  UpdatePullRequestStatusOutput: { CodeCommit: "UpdatePullRequestStatus" },
  UpdatePullRequestTitleInput: { CodeCommit: "UpdatePullRequestTitle" },
  UpdatePullRequestTitleOutput: { CodeCommit: "UpdatePullRequestTitle" },
  UpdateRepositoryDescriptionInput: { CodeCommit: "UpdateRepositoryDescription" },
  UpdateRepositoryNameInput: { CodeCommit: "UpdateRepositoryName" },
  AddTagsToOnPremisesInstancesInput: { CodeDeploy: "AddTagsToOnPremisesInstances" },
  BatchGetApplicationRevisionsInput: { CodeDeploy: "BatchGetApplicationRevisions" },
  BatchGetApplicationRevisionsOutput: { CodeDeploy: "BatchGetApplicationRevisions" },
  BatchGetApplicationsInput: { CodeDeploy: "BatchGetApplications" },
  BatchGetApplicationsOutput: { CodeDeploy: "BatchGetApplications" },
  BatchGetDeploymentGroupsInput: { CodeDeploy: "BatchGetDeploymentGroups" },
  BatchGetDeploymentGroupsOutput: { CodeDeploy: "BatchGetDeploymentGroups" },
  BatchGetDeploymentInstancesInput: { CodeDeploy: "BatchGetDeploymentInstances" },
  BatchGetDeploymentInstancesOutput: { CodeDeploy: "BatchGetDeploymentInstances" },
  BatchGetDeploymentTargetsInput: { CodeDeploy: "BatchGetDeploymentTargets" },
  BatchGetDeploymentTargetsOutput: { CodeDeploy: "BatchGetDeploymentTargets" },
  BatchGetDeploymentsInput: { CodeDeploy: "BatchGetDeployments" },
  BatchGetDeploymentsOutput: { CodeDeploy: "BatchGetDeployments" },
  BatchGetOnPremisesInstancesInput: { CodeDeploy: "BatchGetOnPremisesInstances" },
  BatchGetOnPremisesInstancesOutput: { CodeDeploy: "BatchGetOnPremisesInstances" },
  ContinueDeploymentInput: { CodeDeploy: "ContinueDeployment" },
  CreateApplicationInput: { CodeDeploy: "CreateApplication" },
  CreateApplicationOutput: { CodeDeploy: "CreateApplication" },
  CreateDeploymentInput: { CodeDeploy: "CreateDeployment" },
  CreateDeploymentOutput: { CodeDeploy: "CreateDeployment" },
  CreateDeploymentConfigInput: { CodeDeploy: "CreateDeploymentConfig" },
  CreateDeploymentConfigOutput: { CodeDeploy: "CreateDeploymentConfig" },
  CreateDeploymentGroupInput: { CodeDeploy: "CreateDeploymentGroup" },
  CreateDeploymentGroupOutput: { CodeDeploy: "CreateDeploymentGroup" },
  DeleteApplicationInput: { CodeDeploy: "DeleteApplication" },
  DeleteDeploymentConfigInput: { CodeDeploy: "DeleteDeploymentConfig" },
  DeleteDeploymentGroupInput: { CodeDeploy: "DeleteDeploymentGroup" },
  DeleteDeploymentGroupOutput: { CodeDeploy: "DeleteDeploymentGroup" },
  DeleteGitHubAccountTokenInput: { CodeDeploy: "DeleteGitHubAccountToken" },
  DeleteGitHubAccountTokenOutput: { CodeDeploy: "DeleteGitHubAccountToken" },
  DeleteResourcesByExternalIdInput: { CodeDeploy: "DeleteResourcesByExternalId" },
  DeleteResourcesByExternalIdOutput: { CodeDeploy: "DeleteResourcesByExternalId" },
  DeregisterOnPremisesInstanceInput: { CodeDeploy: "DeregisterOnPremisesInstance" },
  GetApplicationInput: { CodeDeploy: "GetApplication", SsmSap: "GetApplication" },
  GetApplicationOutput: { CodeDeploy: "GetApplication", SsmSap: "GetApplication" },
  GetApplicationRevisionInput: { CodeDeploy: "GetApplicationRevision" },
  GetApplicationRevisionOutput: { CodeDeploy: "GetApplicationRevision" },
  GetDeploymentInput: { CodeDeploy: "GetDeployment", Proton: "GetDeployment" },
  GetDeploymentOutput: { CodeDeploy: "GetDeployment", Proton: "GetDeployment" },
  GetDeploymentConfigInput: { CodeDeploy: "GetDeploymentConfig" },
  GetDeploymentConfigOutput: { CodeDeploy: "GetDeploymentConfig" },
  GetDeploymentGroupInput: { CodeDeploy: "GetDeploymentGroup" },
  GetDeploymentGroupOutput: { CodeDeploy: "GetDeploymentGroup" },
  GetDeploymentInstanceInput: { CodeDeploy: "GetDeploymentInstance" },
  GetDeploymentInstanceOutput: { CodeDeploy: "GetDeploymentInstance" },
  GetDeploymentTargetInput: { CodeDeploy: "GetDeploymentTarget" },
  GetDeploymentTargetOutput: { CodeDeploy: "GetDeploymentTarget" },
  GetOnPremisesInstanceInput: { CodeDeploy: "GetOnPremisesInstance" },
  GetOnPremisesInstanceOutput: { CodeDeploy: "GetOnPremisesInstance" },
  ListApplicationRevisionsInput: { CodeDeploy: "ListApplicationRevisions" },
  ListApplicationRevisionsOutput: { CodeDeploy: "ListApplicationRevisions" },
  ListApplicationsInput: { CodeDeploy: "ListApplications", SsmSap: "ListApplications" },
  ListApplicationsOutput: { CodeDeploy: "ListApplications", SsmSap: "ListApplications" },
  ListDeploymentConfigsInput: { CodeDeploy: "ListDeploymentConfigs" },
  ListDeploymentConfigsOutput: { CodeDeploy: "ListDeploymentConfigs" },
  ListDeploymentGroupsInput: { CodeDeploy: "ListDeploymentGroups" },
  ListDeploymentGroupsOutput: { CodeDeploy: "ListDeploymentGroups" },
  ListDeploymentInstancesInput: { CodeDeploy: "ListDeploymentInstances" },
  ListDeploymentInstancesOutput: { CodeDeploy: "ListDeploymentInstances" },
  ListDeploymentTargetsInput: { CodeDeploy: "ListDeploymentTargets" },
  ListDeploymentTargetsOutput: { CodeDeploy: "ListDeploymentTargets" },
  ListDeploymentsInput: { CodeDeploy: "ListDeployments", Proton: "ListDeployments" },
  ListDeploymentsOutput: { CodeDeploy: "ListDeployments", Proton: "ListDeployments" },
  ListGitHubAccountTokenNamesInput: { CodeDeploy: "ListGitHubAccountTokenNames" },
  ListGitHubAccountTokenNamesOutput: { CodeDeploy: "ListGitHubAccountTokenNames" },
  ListOnPremisesInstancesInput: { CodeDeploy: "ListOnPremisesInstances" },
  ListOnPremisesInstancesOutput: { CodeDeploy: "ListOnPremisesInstances" },
  PutLifecycleEventHookExecutionStatusInput: { CodeDeploy: "PutLifecycleEventHookExecutionStatus" },
  PutLifecycleEventHookExecutionStatusOutput: {
    CodeDeploy: "PutLifecycleEventHookExecutionStatus",
  },
  RegisterApplicationRevisionInput: { CodeDeploy: "RegisterApplicationRevision" },
  RegisterOnPremisesInstanceInput: { CodeDeploy: "RegisterOnPremisesInstance" },
  RemoveTagsFromOnPremisesInstancesInput: { CodeDeploy: "RemoveTagsFromOnPremisesInstances" },
  SkipWaitTimeForInstanceTerminationInput: { CodeDeploy: "SkipWaitTimeForInstanceTermination" },
  StopDeploymentInput: { CodeDeploy: "StopDeployment" },
  StopDeploymentOutput: { CodeDeploy: "StopDeployment" },
  UpdateApplicationInput: { CodeDeploy: "UpdateApplication" },
  UpdateDeploymentGroupInput: { CodeDeploy: "UpdateDeploymentGroup" },
  UpdateDeploymentGroupOutput: { CodeDeploy: "UpdateDeploymentGroup" },
  AcknowledgeJobInput: { CodePipeline: "AcknowledgeJob" },
  AcknowledgeJobOutput: { CodePipeline: "AcknowledgeJob" },
  AcknowledgeThirdPartyJobInput: { CodePipeline: "AcknowledgeThirdPartyJob" },
  AcknowledgeThirdPartyJobOutput: { CodePipeline: "AcknowledgeThirdPartyJob" },
  CreateCustomActionTypeInput: { CodePipeline: "CreateCustomActionType" },
  CreateCustomActionTypeOutput: { CodePipeline: "CreateCustomActionType" },
  CreatePipelineInput: { CodePipeline: "CreatePipeline", DataPipeline: "CreatePipeline" },
  CreatePipelineOutput: { CodePipeline: "CreatePipeline", DataPipeline: "CreatePipeline" },
  DeleteCustomActionTypeInput: { CodePipeline: "DeleteCustomActionType" },
  DeletePipelineInput: { CodePipeline: "DeletePipeline", DataPipeline: "DeletePipeline" },
  DeregisterWebhookWithThirdPartyInput: { CodePipeline: "DeregisterWebhookWithThirdParty" },
  DeregisterWebhookWithThirdPartyOutput: { CodePipeline: "DeregisterWebhookWithThirdParty" },
  DisableStageTransitionInput: { CodePipeline: "DisableStageTransition" },
  EnableStageTransitionInput: { CodePipeline: "EnableStageTransition" },
  GetActionTypeInput: { CodePipeline: "GetActionType" },
  GetActionTypeOutput: { CodePipeline: "GetActionType" },
  GetJobDetailsInput: { CodePipeline: "GetJobDetails" },
  GetJobDetailsOutput: { CodePipeline: "GetJobDetails" },
  GetPipelineInput: { CodePipeline: "GetPipeline" },
  GetPipelineOutput: { CodePipeline: "GetPipeline" },
  GetPipelineExecutionInput: { CodePipeline: "GetPipelineExecution" },
  GetPipelineExecutionOutput: { CodePipeline: "GetPipelineExecution" },
  GetPipelineStateInput: { CodePipeline: "GetPipelineState" },
  GetPipelineStateOutput: { CodePipeline: "GetPipelineState" },
  GetThirdPartyJobDetailsInput: { CodePipeline: "GetThirdPartyJobDetails" },
  GetThirdPartyJobDetailsOutput: { CodePipeline: "GetThirdPartyJobDetails" },
  ListActionExecutionsInput: { CodePipeline: "ListActionExecutions" },
  ListActionExecutionsOutput: { CodePipeline: "ListActionExecutions" },
  ListActionTypesInput: { CodePipeline: "ListActionTypes" },
  ListActionTypesOutput: { CodePipeline: "ListActionTypes" },
  ListPipelineExecutionsInput: { CodePipeline: "ListPipelineExecutions" },
  ListPipelineExecutionsOutput: { CodePipeline: "ListPipelineExecutions" },
  ListPipelinesInput: { CodePipeline: "ListPipelines", DataPipeline: "ListPipelines" },
  ListPipelinesOutput: { CodePipeline: "ListPipelines", DataPipeline: "ListPipelines" },
  ListWebhooksInput: { CodePipeline: "ListWebhooks" },
  ListWebhooksOutput: { CodePipeline: "ListWebhooks" },
  PollForJobsInput: { CodePipeline: "PollForJobs" },
  PollForJobsOutput: { CodePipeline: "PollForJobs" },
  PollForThirdPartyJobsInput: { CodePipeline: "PollForThirdPartyJobs" },
  PollForThirdPartyJobsOutput: { CodePipeline: "PollForThirdPartyJobs" },
  PutActionRevisionInput: { CodePipeline: "PutActionRevision" },
  PutActionRevisionOutput: { CodePipeline: "PutActionRevision" },
  PutApprovalResultInput: { CodePipeline: "PutApprovalResult" },
  PutApprovalResultOutput: { CodePipeline: "PutApprovalResult" },
  PutJobFailureResultInput: { CodePipeline: "PutJobFailureResult" },
  PutJobSuccessResultInput: { CodePipeline: "PutJobSuccessResult" },
  PutThirdPartyJobFailureResultInput: { CodePipeline: "PutThirdPartyJobFailureResult" },
  PutThirdPartyJobSuccessResultInput: { CodePipeline: "PutThirdPartyJobSuccessResult" },
  PutWebhookInput: { CodePipeline: "PutWebhook" },
  PutWebhookOutput: { CodePipeline: "PutWebhook" },
  RegisterWebhookWithThirdPartyInput: { CodePipeline: "RegisterWebhookWithThirdParty" },
  RegisterWebhookWithThirdPartyOutput: { CodePipeline: "RegisterWebhookWithThirdParty" },
  RetryStageExecutionInput: { CodePipeline: "RetryStageExecution" },
  RetryStageExecutionOutput: { CodePipeline: "RetryStageExecution" },
  StartPipelineExecutionInput: { CodePipeline: "StartPipelineExecution" },
  StartPipelineExecutionOutput: { CodePipeline: "StartPipelineExecution" },
  StopPipelineExecutionInput: { CodePipeline: "StopPipelineExecution" },
  StopPipelineExecutionOutput: { CodePipeline: "StopPipelineExecution" },
  UpdateActionTypeInput: { CodePipeline: "UpdateActionType" },
  UpdatePipelineInput: { CodePipeline: "UpdatePipeline" },
  UpdatePipelineOutput: { CodePipeline: "UpdatePipeline" },
  AssociateTeamMemberResult: { CodeStar: "AssociateTeamMember" },
  CreateProjectResult: {
    CodeStar: "CreateProject",
    DeviceFarm: "CreateProject",
    Mobile: "CreateProject",
  },
  CreateUserProfileResult: { CodeStar: "CreateUserProfile", OpsWorks: "CreateUserProfile" },
  DeleteProjectResult: {
    CodeStar: "DeleteProject",
    DeviceFarm: "DeleteProject",
    Mobile: "DeleteProject",
  },
  DeleteUserProfileResult: { CodeStar: "DeleteUserProfile" },
  DescribeProjectResult: { CodeStar: "DescribeProject", Mobile: "DescribeProject" },
  DescribeUserProfileResult: { CodeStar: "DescribeUserProfile" },
  DisassociateTeamMemberResult: { CodeStar: "DisassociateTeamMember" },
  ListProjectsResult: {
    CodeStar: "ListProjects",
    DeviceFarm: "ListProjects",
    Mobile: "ListProjects",
  },
  ListResourcesResult: { CodeStar: "ListResources" },
  ListTagsForProjectResult: { CodeStar: "ListTagsForProject" },
  ListTeamMembersResult: { CodeStar: "ListTeamMembers" },
  ListUserProfilesResult: { CodeStar: "ListUserProfiles" },
  TagProjectResult: { CodeStar: "TagProject" },
  UntagProjectResult: { CodeStar: "UntagProject" },
  UpdateProjectResult: {
    CodeStar: "UpdateProject",
    DeviceFarm: "UpdateProject",
    Mobile: "UpdateProject",
  },
  UpdateTeamMemberResult: { CodeStar: "UpdateTeamMember" },
  UpdateUserProfileResult: { CodeStar: "UpdateUserProfile" },
  CreateNotificationRuleResult: { CodeStarNotifications: "CreateNotificationRule" },
  DeleteNotificationRuleResult: { CodeStarNotifications: "DeleteNotificationRule" },
  DeleteTargetResult: { CodeStarNotifications: "DeleteTarget" },
  DescribeNotificationRuleResult: { CodeStarNotifications: "DescribeNotificationRule" },
  ListEventTypesResult: { CodeStarNotifications: "ListEventTypes" },
  ListNotificationRulesResult: { CodeStarNotifications: "ListNotificationRules" },
  ListTargetsResult: { CodeStarNotifications: "ListTargets" },
  SubscribeResult: { CodeStarNotifications: "Subscribe" },
  UnsubscribeResult: { CodeStarNotifications: "Unsubscribe" },
  UpdateNotificationRuleResult: { CodeStarNotifications: "UpdateNotificationRule" },
  CreateConnectionInput: { CodeStarconnections: "CreateConnection" },
  CreateConnectionOutput: { CodeStarconnections: "CreateConnection" },
  CreateHostInput: { CodeStarconnections: "CreateHost" },
  CreateHostOutput: { CodeStarconnections: "CreateHost" },
  DeleteConnectionInput: { CodeStarconnections: "DeleteConnection" },
  DeleteConnectionOutput: { CodeStarconnections: "DeleteConnection" },
  DeleteHostInput: { CodeStarconnections: "DeleteHost" },
  DeleteHostOutput: { CodeStarconnections: "DeleteHost" },
  GetConnectionInput: { CodeStarconnections: "GetConnection" },
  GetConnectionOutput: { CodeStarconnections: "GetConnection" },
  GetHostInput: { CodeStarconnections: "GetHost" },
  GetHostOutput: { CodeStarconnections: "GetHost" },
  ListConnectionsInput: { CodeStarconnections: "ListConnections" },
  ListConnectionsOutput: { CodeStarconnections: "ListConnections" },
  ListHostsInput: { CodeStarconnections: "ListHosts" },
  ListHostsOutput: { CodeStarconnections: "ListHosts" },
  UpdateHostInput: { CodeStarconnections: "UpdateHost" },
  UpdateHostOutput: { CodeStarconnections: "UpdateHost" },
  CreateIdentityPoolInput: { CognitoIdentity: "CreateIdentityPool" },
  IdentityPool: { CognitoIdentity: "UpdateIdentityPool" },
  DeleteIdentitiesInput: { CognitoIdentity: "DeleteIdentities" },
  DeleteIdentityPoolInput: { CognitoIdentity: "DeleteIdentityPool" },
  DescribeIdentityInput: { CognitoIdentity: "DescribeIdentity" },
  IdentityDescription: { CognitoIdentity: "DescribeIdentity" },
  DescribeIdentityPoolInput: { CognitoIdentity: "DescribeIdentityPool" },
  GetCredentialsForIdentityInput: { CognitoIdentity: "GetCredentialsForIdentity" },
  GetIdInput: { CognitoIdentity: "GetId" },
  GetIdentityPoolRolesInput: { CognitoIdentity: "GetIdentityPoolRoles" },
  GetOpenIdTokenInput: { CognitoIdentity: "GetOpenIdToken" },
  GetOpenIdTokenForDeveloperIdentityInput: {
    CognitoIdentity: "GetOpenIdTokenForDeveloperIdentity",
  },
  GetPrincipalTagAttributeMapInput: { CognitoIdentity: "GetPrincipalTagAttributeMap" },
  ListIdentitiesInput: { CognitoIdentity: "ListIdentities" },
  ListIdentityPoolsInput: { CognitoIdentity: "ListIdentityPools" },
  LookupDeveloperIdentityInput: { CognitoIdentity: "LookupDeveloperIdentity" },
  MergeDeveloperIdentitiesInput: { CognitoIdentity: "MergeDeveloperIdentities" },
  SetIdentityPoolRolesInput: { CognitoIdentity: "SetIdentityPoolRoles" },
  SetPrincipalTagAttributeMapInput: { CognitoIdentity: "SetPrincipalTagAttributeMap" },
  UnlinkDeveloperIdentityInput: { CognitoIdentity: "UnlinkDeveloperIdentity" },
  UnlinkIdentityInput: { CognitoIdentity: "UnlinkIdentity" },
  ListAgentStatusRequest: { Connect: "ListAgentStatuses" },
  ListAgentStatusResponse: { Connect: "ListAgentStatuses" },
  DisableControlInput: { ControlTower: "DisableControl" },
  DisableControlOutput: { ControlTower: "DisableControl" },
  EnableControlInput: { ControlTower: "EnableControl" },
  EnableControlOutput: { ControlTower: "EnableControl" },
  GetControlOperationInput: { ControlTower: "GetControlOperation" },
  GetControlOperationOutput: { ControlTower: "GetControlOperation" },
  ListEnabledControlsInput: { ControlTower: "ListEnabledControls" },
  ListEnabledControlsOutput: { ControlTower: "ListEnabledControls" },
  AddTagsToResourceMessage: {
    DMS: "AddTagsToResource",
    DocDB: "AddTagsToResource",
    ElastiCache: "AddTagsToResource",
    Neptune: "AddTagsToResource",
    RDS: "AddTagsToResource",
  },
  ApplyPendingMaintenanceActionMessage: {
    DMS: "ApplyPendingMaintenanceAction",
    DocDB: "ApplyPendingMaintenanceAction",
    Neptune: "ApplyPendingMaintenanceAction",
    RDS: "ApplyPendingMaintenanceAction",
  },
  CancelReplicationTaskAssessmentRunMessage: { DMS: "CancelReplicationTaskAssessmentRun" },
  CreateEndpointMessage: { DMS: "CreateEndpoint" },
  CreateEventSubscriptionMessage: {
    DMS: "CreateEventSubscription",
    DocDB: "CreateEventSubscription",
    Neptune: "CreateEventSubscription",
    RDS: "CreateEventSubscription",
    Redshift: "CreateEventSubscription",
  },
  CreateReplicationConfigMessage: { DMS: "CreateReplicationConfig" },
  CreateReplicationInstanceMessage: { DMS: "CreateReplicationInstance" },
  CreateReplicationSubnetGroupMessage: { DMS: "CreateReplicationSubnetGroup" },
  CreateReplicationTaskMessage: { DMS: "CreateReplicationTask" },
  DeleteCertificateMessage: { DMS: "DeleteCertificate" },
  DeleteConnectionMessage: { DMS: "DeleteConnection" },
  DeleteEndpointMessage: { DMS: "DeleteEndpoint" },
  DeleteEventSubscriptionMessage: {
    DMS: "DeleteEventSubscription",
    DocDB: "DeleteEventSubscription",
    Neptune: "DeleteEventSubscription",
    RDS: "DeleteEventSubscription",
    Redshift: "DeleteEventSubscription",
  },
  DeleteCollectorRequest: { DMS: "DeleteFleetAdvisorCollector" },
  DeleteReplicationConfigMessage: { DMS: "DeleteReplicationConfig" },
  DeleteReplicationInstanceMessage: { DMS: "DeleteReplicationInstance" },
  DeleteReplicationSubnetGroupMessage: { DMS: "DeleteReplicationSubnetGroup" },
  DeleteReplicationTaskMessage: { DMS: "DeleteReplicationTask" },
  DeleteReplicationTaskAssessmentRunMessage: { DMS: "DeleteReplicationTaskAssessmentRun" },
  DescribeAccountAttributesMessage: {
    DMS: "DescribeAccountAttributes",
    RDS: "DescribeAccountAttributes",
    Redshift: "DescribeAccountAttributes",
  },
  DescribeApplicableIndividualAssessmentsMessage: {
    DMS: "DescribeApplicableIndividualAssessments",
  },
  DescribeCertificatesMessage: {
    DMS: "DescribeCertificates",
    DocDB: "DescribeCertificates",
    RDS: "DescribeCertificates",
  },
  DescribeConnectionsMessage: { DMS: "DescribeConnections" },
  DescribeEndpointSettingsMessage: { DMS: "DescribeEndpointSettings" },
  DescribeEndpointTypesMessage: { DMS: "DescribeEndpointTypes" },
  DescribeEndpointsMessage: { DMS: "DescribeEndpoints" },
  DescribeEventCategoriesMessage: {
    DMS: "DescribeEventCategories",
    DocDB: "DescribeEventCategories",
    Neptune: "DescribeEventCategories",
    RDS: "DescribeEventCategories",
    Redshift: "DescribeEventCategories",
  },
  DescribeEventSubscriptionsMessage: {
    DMS: "DescribeEventSubscriptions",
    DocDB: "DescribeEventSubscriptions",
    Neptune: "DescribeEventSubscriptions",
    RDS: "DescribeEventSubscriptions",
    Redshift: "DescribeEventSubscriptions",
  },
  DescribeEventsMessage: {
    DMS: "DescribeEvents",
    DocDB: "DescribeEvents",
    ElastiCache: "DescribeEvents",
    ElasticBeanstalk: "DescribeEvents",
    Neptune: "DescribeEvents",
    RDS: "DescribeEvents",
    Redshift: "DescribeEvents",
  },
  DescribeOrderableReplicationInstancesMessage: { DMS: "DescribeOrderableReplicationInstances" },
  DescribePendingMaintenanceActionsMessage: {
    DMS: "DescribePendingMaintenanceActions",
    DocDB: "DescribePendingMaintenanceActions",
    Neptune: "DescribePendingMaintenanceActions",
    RDS: "DescribePendingMaintenanceActions",
  },
  DescribeRefreshSchemasStatusMessage: { DMS: "DescribeRefreshSchemasStatus" },
  DescribeReplicationConfigsMessage: { DMS: "DescribeReplicationConfigs" },
  DescribeReplicationInstanceTaskLogsMessage: { DMS: "DescribeReplicationInstanceTaskLogs" },
  DescribeReplicationInstancesMessage: { DMS: "DescribeReplicationInstances" },
  DescribeReplicationSubnetGroupsMessage: { DMS: "DescribeReplicationSubnetGroups" },
  DescribeReplicationTableStatisticsMessage: { DMS: "DescribeReplicationTableStatistics" },
  DescribeReplicationTaskAssessmentResultsMessage: {
    DMS: "DescribeReplicationTaskAssessmentResults",
  },
  DescribeReplicationTaskAssessmentRunsMessage: { DMS: "DescribeReplicationTaskAssessmentRuns" },
  DescribeReplicationTaskIndividualAssessmentsMessage: {
    DMS: "DescribeReplicationTaskIndividualAssessments",
  },
  DescribeReplicationTasksMessage: { DMS: "DescribeReplicationTasks" },
  DescribeReplicationsMessage: { DMS: "DescribeReplications" },
  DescribeSchemasMessage: { DMS: "DescribeSchemas" },
  DescribeTableStatisticsMessage: { DMS: "DescribeTableStatistics" },
  ImportCertificateMessage: { DMS: "ImportCertificate" },
  ListTagsForResourceMessage: {
    DMS: "ListTagsForResource",
    DocDB: "ListTagsForResource",
    ElastiCache: "ListTagsForResource",
    ElasticBeanstalk: "ListTagsForResource",
    Neptune: "ListTagsForResource",
    RDS: "ListTagsForResource",
  },
  ModifyEndpointMessage: { DMS: "ModifyEndpoint" },
  ModifyEventSubscriptionMessage: {
    DMS: "ModifyEventSubscription",
    DocDB: "ModifyEventSubscription",
    Neptune: "ModifyEventSubscription",
    RDS: "ModifyEventSubscription",
    Redshift: "ModifyEventSubscription",
  },
  ModifyReplicationConfigMessage: { DMS: "ModifyReplicationConfig" },
  ModifyReplicationInstanceMessage: { DMS: "ModifyReplicationInstance" },
  ModifyReplicationSubnetGroupMessage: { DMS: "ModifyReplicationSubnetGroup" },
  ModifyReplicationTaskMessage: { DMS: "ModifyReplicationTask" },
  MoveReplicationTaskMessage: { DMS: "MoveReplicationTask" },
  RebootReplicationInstanceMessage: { DMS: "RebootReplicationInstance" },
  RefreshSchemasMessage: { DMS: "RefreshSchemas" },
  ReloadReplicationTablesMessage: { DMS: "ReloadReplicationTables" },
  ReloadTablesMessage: { DMS: "ReloadTables" },
  RemoveTagsFromResourceMessage: {
    DMS: "RemoveTagsFromResource",
    DocDB: "RemoveTagsFromResource",
    ElastiCache: "RemoveTagsFromResource",
    Neptune: "RemoveTagsFromResource",
    RDS: "RemoveTagsFromResource",
  },
  StartReplicationMessage: { DMS: "StartReplication" },
  StartReplicationTaskMessage: { DMS: "StartReplicationTask" },
  StartReplicationTaskAssessmentMessage: { DMS: "StartReplicationTaskAssessment" },
  StartReplicationTaskAssessmentRunMessage: { DMS: "StartReplicationTaskAssessmentRun" },
  StopReplicationMessage: { DMS: "StopReplication" },
  StopReplicationTaskMessage: { DMS: "StopReplicationTask" },
  TestConnectionMessage: { DMS: "TestConnection" },
  UpdateSubscriptionsToEventBridgeMessage: { DMS: "UpdateSubscriptionsToEventBridge" },
  ActivatePipelineInput: { DataPipeline: "ActivatePipeline" },
  ActivatePipelineOutput: { DataPipeline: "ActivatePipeline" },
  AddTagsInput: {
    DataPipeline: "AddTags",
    ELB: "AddTags",
    ELBv2: "AddTags",
    EMR: "AddTags",
    MachineLearning: "AddTags",
    SageMaker: "AddTags",
  },
  AddTagsOutput: {
    DataPipeline: "AddTags",
    ELB: "AddTags",
    ELBv2: "AddTags",
    EMR: "AddTags",
    MachineLearning: "AddTags",
    SageMaker: "AddTags",
  },
  DeactivatePipelineInput: { DataPipeline: "DeactivatePipeline" },
  DeactivatePipelineOutput: { DataPipeline: "DeactivatePipeline" },
  DescribeObjectsInput: { DataPipeline: "DescribeObjects" },
  DescribeObjectsOutput: { DataPipeline: "DescribeObjects" },
  DescribePipelinesInput: { DataPipeline: "DescribePipelines" },
  DescribePipelinesOutput: { DataPipeline: "DescribePipelines" },
  EvaluateExpressionInput: { DataPipeline: "EvaluateExpression" },
  EvaluateExpressionOutput: { DataPipeline: "EvaluateExpression" },
  GetPipelineDefinitionInput: { DataPipeline: "GetPipelineDefinition" },
  GetPipelineDefinitionOutput: { DataPipeline: "GetPipelineDefinition" },
  PollForTaskInput: { DataPipeline: "PollForTask" },
  PollForTaskOutput: { DataPipeline: "PollForTask" },
  PutPipelineDefinitionInput: { DataPipeline: "PutPipelineDefinition" },
  PutPipelineDefinitionOutput: { DataPipeline: "PutPipelineDefinition" },
  QueryObjectsInput: { DataPipeline: "QueryObjects" },
  QueryObjectsOutput: { DataPipeline: "QueryObjects" },
  RemoveTagsInput: {
    DataPipeline: "RemoveTags",
    ELB: "RemoveTags",
    ELBv2: "RemoveTags",
    EMR: "RemoveTags",
  },
  RemoveTagsOutput: {
    DataPipeline: "RemoveTags",
    ELB: "RemoveTags",
    ELBv2: "RemoveTags",
    EMR: "RemoveTags",
  },
  ReportTaskProgressInput: { DataPipeline: "ReportTaskProgress" },
  ReportTaskProgressOutput: { DataPipeline: "ReportTaskProgress" },
  ReportTaskRunnerHeartbeatInput: { DataPipeline: "ReportTaskRunnerHeartbeat" },
  ReportTaskRunnerHeartbeatOutput: { DataPipeline: "ReportTaskRunnerHeartbeat" },
  SetStatusInput: { DataPipeline: "SetStatus" },
  SetTaskStatusInput: { DataPipeline: "SetTaskStatus" },
  SetTaskStatusOutput: { DataPipeline: "SetTaskStatus" },
  ValidatePipelineDefinitionInput: { DataPipeline: "ValidatePipelineDefinition" },
  ValidatePipelineDefinitionOutput: { DataPipeline: "ValidatePipelineDefinition" },
  CreateDevicePoolResult: { DeviceFarm: "CreateDevicePool" },
  CreateInstanceProfileResult: { DeviceFarm: "CreateInstanceProfile" },
  CreateNetworkProfileResult: { DeviceFarm: "CreateNetworkProfile" },
  CreateRemoteAccessSessionResult: { DeviceFarm: "CreateRemoteAccessSession" },
  CreateTestGridProjectResult: { DeviceFarm: "CreateTestGridProject" },
  CreateTestGridUrlResult: { DeviceFarm: "CreateTestGridUrl" },
  CreateUploadResult: { DeviceFarm: "CreateUpload" },
  CreateVPCEConfigurationResult: { DeviceFarm: "CreateVPCEConfiguration" },
  DeleteDevicePoolResult: { DeviceFarm: "DeleteDevicePool" },
  DeleteInstanceProfileResult: { DeviceFarm: "DeleteInstanceProfile" },
  DeleteNetworkProfileResult: { DeviceFarm: "DeleteNetworkProfile" },
  DeleteRemoteAccessSessionResult: { DeviceFarm: "DeleteRemoteAccessSession" },
  DeleteRunResult: { DeviceFarm: "DeleteRun" },
  DeleteTestGridProjectResult: { DeviceFarm: "DeleteTestGridProject" },
  DeleteUploadResult: { DeviceFarm: "DeleteUpload" },
  DeleteVPCEConfigurationResult: { DeviceFarm: "DeleteVPCEConfiguration" },
  GetAccountSettingsResult: { DeviceFarm: "GetAccountSettings" },
  GetDeviceResult: { DeviceFarm: "GetDevice" },
  GetDeviceInstanceResult: { DeviceFarm: "GetDeviceInstance" },
  GetDevicePoolResult: { DeviceFarm: "GetDevicePool" },
  GetDevicePoolCompatibilityResult: { DeviceFarm: "GetDevicePoolCompatibility" },
  GetInstanceProfileResult: { DeviceFarm: "GetInstanceProfile" },
  GetNetworkProfileResult: { DeviceFarm: "GetNetworkProfile" },
  GetOfferingStatusResult: { DeviceFarm: "GetOfferingStatus" },
  GetProjectResult: { DeviceFarm: "GetProject" },
  GetRemoteAccessSessionResult: { DeviceFarm: "GetRemoteAccessSession" },
  GetRunResult: { DeviceFarm: "GetRun" },
  GetSuiteResult: { DeviceFarm: "GetSuite" },
  GetTestResult: { DeviceFarm: "GetTest" },
  GetTestGridProjectResult: { DeviceFarm: "GetTestGridProject" },
  GetTestGridSessionResult: { DeviceFarm: "GetTestGridSession" },
  GetUploadResult: { DeviceFarm: "GetUpload" },
  GetVPCEConfigurationResult: { DeviceFarm: "GetVPCEConfiguration" },
  InstallToRemoteAccessSessionResult: { DeviceFarm: "InstallToRemoteAccessSession" },
  ListDeviceInstancesResult: { DeviceFarm: "ListDeviceInstances" },
  ListDevicePoolsResult: { DeviceFarm: "ListDevicePools" },
  ListDevicesResult: { DeviceFarm: "ListDevices" },
  ListInstanceProfilesResult: { DeviceFarm: "ListInstanceProfiles" },
  ListNetworkProfilesResult: { DeviceFarm: "ListNetworkProfiles" },
  ListOfferingPromotionsResult: { DeviceFarm: "ListOfferingPromotions" },
  ListOfferingTransactionsResult: { DeviceFarm: "ListOfferingTransactions" },
  ListOfferingsResult: { DeviceFarm: "ListOfferings" },
  ListRemoteAccessSessionsResult: { DeviceFarm: "ListRemoteAccessSessions" },
  ListRunsResult: { DeviceFarm: "ListRuns" },
  ListSamplesResult: { DeviceFarm: "ListSamples" },
  ListSuitesResult: { DeviceFarm: "ListSuites" },
  ListTestGridProjectsResult: { DeviceFarm: "ListTestGridProjects" },
  ListTestGridSessionActionsResult: { DeviceFarm: "ListTestGridSessionActions" },
  ListTestGridSessionArtifactsResult: { DeviceFarm: "ListTestGridSessionArtifacts" },
  ListTestGridSessionsResult: { DeviceFarm: "ListTestGridSessions" },
  ListTestsResult: { DeviceFarm: "ListTests" },
  ListUniqueProblemsResult: { DeviceFarm: "ListUniqueProblems" },
  ListUploadsResult: { DeviceFarm: "ListUploads" },
  ListVPCEConfigurationsResult: { DeviceFarm: "ListVPCEConfigurations" },
  PurchaseOfferingResult: { DeviceFarm: "PurchaseOffering" },
  RenewOfferingResult: { DeviceFarm: "RenewOffering" },
  ScheduleRunResult: { DeviceFarm: "ScheduleRun" },
  StopRemoteAccessSessionResult: { DeviceFarm: "StopRemoteAccessSession" },
  StopRunResult: { DeviceFarm: "StopRun" },
  UpdateDeviceInstanceResult: { DeviceFarm: "UpdateDeviceInstance" },
  UpdateDevicePoolResult: { DeviceFarm: "UpdateDevicePool" },
  UpdateInstanceProfileResult: { DeviceFarm: "UpdateInstanceProfile" },
  UpdateNetworkProfileResult: { DeviceFarm: "UpdateNetworkProfile" },
  UpdateTestGridProjectResult: { DeviceFarm: "UpdateTestGridProject" },
  UpdateUploadResult: { DeviceFarm: "UpdateUpload" },
  UpdateVPCEConfigurationResult: { DeviceFarm: "UpdateVPCEConfiguration" },
  AcceptDirectConnectGatewayAssociationProposalResult: {
    DirectConnect: "AcceptDirectConnectGatewayAssociationProposal",
  },
  Connection: { DirectConnect: "UpdateConnection" },
  VirtualInterface: { DirectConnect: "UpdateVirtualInterfaceAttributes" },
  AllocateTransitVirtualInterfaceResult: { DirectConnect: "AllocateTransitVirtualInterface" },
  CreateDirectConnectGatewayResult: { DirectConnect: "CreateDirectConnectGateway" },
  CreateDirectConnectGatewayAssociationResult: {
    DirectConnect: "CreateDirectConnectGatewayAssociation",
  },
  CreateDirectConnectGatewayAssociationProposalResult: {
    DirectConnect: "CreateDirectConnectGatewayAssociationProposal",
  },
  Interconnect: { DirectConnect: "CreateInterconnect" },
  Lag: { DirectConnect: "UpdateLag" },
  CreateTransitVirtualInterfaceResult: { DirectConnect: "CreateTransitVirtualInterface" },
  DeleteDirectConnectGatewayResult: { DirectConnect: "DeleteDirectConnectGateway" },
  DeleteDirectConnectGatewayAssociationResult: {
    DirectConnect: "DeleteDirectConnectGatewayAssociation",
  },
  DeleteDirectConnectGatewayAssociationProposalResult: {
    DirectConnect: "DeleteDirectConnectGatewayAssociationProposal",
  },
  Connections: { DirectConnect: "DescribeHostedConnections" },
  DescribeDirectConnectGatewayAssociationProposalsResult: {
    DirectConnect: "DescribeDirectConnectGatewayAssociationProposals",
  },
  DescribeDirectConnectGatewayAssociationsResult: {
    DirectConnect: "DescribeDirectConnectGatewayAssociations",
  },
  DescribeDirectConnectGatewayAttachmentsResult: {
    DirectConnect: "DescribeDirectConnectGatewayAttachments",
  },
  DescribeDirectConnectGatewaysResult: { DirectConnect: "DescribeDirectConnectGateways" },
  Interconnects: { DirectConnect: "DescribeInterconnects" },
  Lags: { DirectConnect: "DescribeLags" },
  Loa: { DirectConnect: "DescribeLoa" },
  VirtualInterfaces: { DirectConnect: "DescribeVirtualInterfaces" },
  UpdateDirectConnectGatewayAssociationResult: {
    DirectConnect: "UpdateDirectConnectGatewayAssociation",
  },
  AcceptSharedDirectoryResult: { DirectoryService: "AcceptSharedDirectory" },
  AddIpRoutesResult: { DirectoryService: "AddIpRoutes" },
  AddRegionResult: { DirectoryService: "AddRegion" },
  AddTagsToResourceResult: { DirectoryService: "AddTagsToResource", SSM: "AddTagsToResource" },
  CancelSchemaExtensionResult: { DirectoryService: "CancelSchemaExtension" },
  ConnectDirectoryResult: { DirectoryService: "ConnectDirectory" },
  CreateAliasResult: { DirectoryService: "CreateAlias" },
  CreateComputerResult: { DirectoryService: "CreateComputer" },
  CreateConditionalForwarderResult: { DirectoryService: "CreateConditionalForwarder" },
  CreateDirectoryResult: { DirectoryService: "CreateDirectory" },
  CreateLogSubscriptionResult: { DirectoryService: "CreateLogSubscription" },
  CreateMicrosoftADResult: { DirectoryService: "CreateMicrosoftAD" },
  CreateSnapshotResult: {
    DirectoryService: "CreateSnapshot",
    ElastiCache: "CreateSnapshot",
    GameSparks: "CreateSnapshot",
  },
  CreateTrustResult: { DirectoryService: "CreateTrust" },
  DeleteConditionalForwarderResult: { DirectoryService: "DeleteConditionalForwarder" },
  DeleteDirectoryResult: { DirectoryService: "DeleteDirectory" },
  DeleteLogSubscriptionResult: { DirectoryService: "DeleteLogSubscription" },
  DeleteSnapshotResult: { DirectoryService: "DeleteSnapshot", ElastiCache: "DeleteSnapshot" },
  DeleteTrustResult: { DirectoryService: "DeleteTrust" },
  DeregisterCertificateResult: { DirectoryService: "DeregisterCertificate" },
  DeregisterEventTopicResult: { DirectoryService: "DeregisterEventTopic" },
  DescribeCertificateResult: { DirectoryService: "DescribeCertificate" },
  DescribeClientAuthenticationSettingsResult: {
    DirectoryService: "DescribeClientAuthenticationSettings",
  },
  DescribeConditionalForwardersResult: { DirectoryService: "DescribeConditionalForwarders" },
  DescribeDirectoriesResult: { DirectoryService: "DescribeDirectories" },
  DescribeDomainControllersResult: { DirectoryService: "DescribeDomainControllers" },
  DescribeEventTopicsResult: { DirectoryService: "DescribeEventTopics" },
  DescribeLDAPSSettingsResult: { DirectoryService: "DescribeLDAPSSettings" },
  DescribeRegionsResult: { DirectoryService: "DescribeRegions", EC2: "DescribeRegions" },
  DescribeSettingsResult: { DirectoryService: "DescribeSettings" },
  DescribeSharedDirectoriesResult: { DirectoryService: "DescribeSharedDirectories" },
  DescribeSnapshotsResult: { DirectoryService: "DescribeSnapshots", EC2: "DescribeSnapshots" },
  DescribeTrustsResult: { DirectoryService: "DescribeTrusts" },
  DescribeUpdateDirectoryResult: { DirectoryService: "DescribeUpdateDirectory" },
  DisableClientAuthenticationResult: { DirectoryService: "DisableClientAuthentication" },
  DisableLDAPSResult: { DirectoryService: "DisableLDAPS" },
  DisableRadiusResult: { DirectoryService: "DisableRadius" },
  DisableSsoResult: { DirectoryService: "DisableSso" },
  EnableClientAuthenticationResult: { DirectoryService: "EnableClientAuthentication" },
  EnableLDAPSResult: { DirectoryService: "EnableLDAPS" },
  EnableRadiusResult: { DirectoryService: "EnableRadius" },
  EnableSsoResult: { DirectoryService: "EnableSso" },
  GetDirectoryLimitsResult: { DirectoryService: "GetDirectoryLimits" },
  GetSnapshotLimitsResult: { DirectoryService: "GetSnapshotLimits" },
  ListCertificatesResult: { DirectoryService: "ListCertificates" },
  ListIpRoutesResult: { DirectoryService: "ListIpRoutes" },
  ListLogSubscriptionsResult: { DirectoryService: "ListLogSubscriptions" },
  ListSchemaExtensionsResult: { DirectoryService: "ListSchemaExtensions" },
  RegisterCertificateResult: { DirectoryService: "RegisterCertificate" },
  RegisterEventTopicResult: { DirectoryService: "RegisterEventTopic" },
  RejectSharedDirectoryResult: { DirectoryService: "RejectSharedDirectory" },
  RemoveIpRoutesResult: { DirectoryService: "RemoveIpRoutes" },
  RemoveRegionResult: { DirectoryService: "RemoveRegion" },
  RemoveTagsFromResourceResult: {
    DirectoryService: "RemoveTagsFromResource",
    SSM: "RemoveTagsFromResource",
  },
  ResetUserPasswordResult: { DirectoryService: "ResetUserPassword" },
  RestoreFromSnapshotResult: { DirectoryService: "RestoreFromSnapshot" },
  ShareDirectoryResult: { DirectoryService: "ShareDirectory" },
  StartSchemaExtensionResult: { DirectoryService: "StartSchemaExtension" },
  UnshareDirectoryResult: { DirectoryService: "UnshareDirectory" },
  UpdateConditionalForwarderResult: { DirectoryService: "UpdateConditionalForwarder" },
  UpdateDirectorySetupResult: { DirectoryService: "UpdateDirectorySetup" },
  UpdateNumberOfDomainControllersResult: { DirectoryService: "UpdateNumberOfDomainControllers" },
  UpdateRadiusResult: { DirectoryService: "UpdateRadius" },
  UpdateSettingsResult: { DirectoryService: "UpdateSettings" },
  UpdateTrustResult: { DirectoryService: "UpdateTrust" },
  VerifyTrustResult: { DirectoryService: "VerifyTrust" },
  AddSourceIdentifierToSubscriptionMessage: {
    DocDB: "AddSourceIdentifierToSubscription",
    Neptune: "AddSourceIdentifierToSubscription",
    RDS: "AddSourceIdentifierToSubscription",
  },
  AddSourceIdentifierToSubscriptionResult: {
    DocDB: "AddSourceIdentifierToSubscription",
    Neptune: "AddSourceIdentifierToSubscription",
    RDS: "AddSourceIdentifierToSubscription",
  },
  ApplyPendingMaintenanceActionResult: {
    DocDB: "ApplyPendingMaintenanceAction",
    Neptune: "ApplyPendingMaintenanceAction",
    RDS: "ApplyPendingMaintenanceAction",
  },
  CopyDBClusterParameterGroupMessage: {
    DocDB: "CopyDBClusterParameterGroup",
    Neptune: "CopyDBClusterParameterGroup",
    RDS: "CopyDBClusterParameterGroup",
  },
  CopyDBClusterParameterGroupResult: {
    DocDB: "CopyDBClusterParameterGroup",
    Neptune: "CopyDBClusterParameterGroup",
    RDS: "CopyDBClusterParameterGroup",
  },
  CopyDBClusterSnapshotMessage: {
    DocDB: "CopyDBClusterSnapshot",
    Neptune: "CopyDBClusterSnapshot",
    RDS: "CopyDBClusterSnapshot",
  },
  CopyDBClusterSnapshotResult: {
    DocDB: "CopyDBClusterSnapshot",
    Neptune: "CopyDBClusterSnapshot",
    RDS: "CopyDBClusterSnapshot",
  },
  CreateDBClusterMessage: {
    DocDB: "CreateDBCluster",
    Neptune: "CreateDBCluster",
    RDS: "CreateDBCluster",
  },
  CreateDBClusterResult: {
    DocDB: "CreateDBCluster",
    Neptune: "CreateDBCluster",
    RDS: "CreateDBCluster",
  },
  CreateDBClusterParameterGroupMessage: {
    DocDB: "CreateDBClusterParameterGroup",
    Neptune: "CreateDBClusterParameterGroup",
    RDS: "CreateDBClusterParameterGroup",
  },
  CreateDBClusterParameterGroupResult: {
    DocDB: "CreateDBClusterParameterGroup",
    Neptune: "CreateDBClusterParameterGroup",
    RDS: "CreateDBClusterParameterGroup",
  },
  CreateDBClusterSnapshotMessage: {
    DocDB: "CreateDBClusterSnapshot",
    Neptune: "CreateDBClusterSnapshot",
    RDS: "CreateDBClusterSnapshot",
  },
  CreateDBClusterSnapshotResult: {
    DocDB: "CreateDBClusterSnapshot",
    Neptune: "CreateDBClusterSnapshot",
    RDS: "CreateDBClusterSnapshot",
  },
  CreateDBInstanceMessage: {
    DocDB: "CreateDBInstance",
    Neptune: "CreateDBInstance",
    RDS: "CreateDBInstance",
  },
  CreateDBInstanceResult: {
    DocDB: "CreateDBInstance",
    Neptune: "CreateDBInstance",
    RDS: "CreateDBInstance",
  },
  CreateDBSubnetGroupMessage: {
    DocDB: "CreateDBSubnetGroup",
    Neptune: "CreateDBSubnetGroup",
    RDS: "CreateDBSubnetGroup",
  },
  CreateDBSubnetGroupResult: {
    DocDB: "CreateDBSubnetGroup",
    Neptune: "CreateDBSubnetGroup",
    RDS: "CreateDBSubnetGroup",
  },
  CreateEventSubscriptionResult: {
    DocDB: "CreateEventSubscription",
    Neptune: "CreateEventSubscription",
    RDS: "CreateEventSubscription",
    Redshift: "CreateEventSubscription",
  },
  CreateGlobalClusterMessage: {
    DocDB: "CreateGlobalCluster",
    Neptune: "CreateGlobalCluster",
    RDS: "CreateGlobalCluster",
  },
  CreateGlobalClusterResult: {
    DocDB: "CreateGlobalCluster",
    Neptune: "CreateGlobalCluster",
    RDS: "CreateGlobalCluster",
  },
  DeleteDBClusterMessage: {
    DocDB: "DeleteDBCluster",
    Neptune: "DeleteDBCluster",
    RDS: "DeleteDBCluster",
  },
  DeleteDBClusterResult: {
    DocDB: "DeleteDBCluster",
    Neptune: "DeleteDBCluster",
    RDS: "DeleteDBCluster",
  },
  DeleteDBClusterParameterGroupMessage: {
    DocDB: "DeleteDBClusterParameterGroup",
    Neptune: "DeleteDBClusterParameterGroup",
    RDS: "DeleteDBClusterParameterGroup",
  },
  DeleteDBClusterSnapshotMessage: {
    DocDB: "DeleteDBClusterSnapshot",
    Neptune: "DeleteDBClusterSnapshot",
    RDS: "DeleteDBClusterSnapshot",
  },
  DeleteDBClusterSnapshotResult: {
    DocDB: "DeleteDBClusterSnapshot",
    Neptune: "DeleteDBClusterSnapshot",
    RDS: "DeleteDBClusterSnapshot",
  },
  DeleteDBInstanceMessage: {
    DocDB: "DeleteDBInstance",
    Neptune: "DeleteDBInstance",
    RDS: "DeleteDBInstance",
  },
  DeleteDBInstanceResult: {
    DocDB: "DeleteDBInstance",
    Neptune: "DeleteDBInstance",
    RDS: "DeleteDBInstance",
  },
  DeleteDBSubnetGroupMessage: {
    DocDB: "DeleteDBSubnetGroup",
    Neptune: "DeleteDBSubnetGroup",
    RDS: "DeleteDBSubnetGroup",
  },
  DeleteEventSubscriptionResult: {
    DocDB: "DeleteEventSubscription",
    Neptune: "DeleteEventSubscription",
    RDS: "DeleteEventSubscription",
  },
  DeleteGlobalClusterMessage: {
    DocDB: "DeleteGlobalCluster",
    Neptune: "DeleteGlobalCluster",
    RDS: "DeleteGlobalCluster",
  },
  DeleteGlobalClusterResult: {
    DocDB: "DeleteGlobalCluster",
    Neptune: "DeleteGlobalCluster",
    RDS: "DeleteGlobalCluster",
  },
  CertificateMessage: { DocDB: "DescribeCertificates", RDS: "DescribeCertificates" },
  DescribeDBClusterParameterGroupsMessage: {
    DocDB: "DescribeDBClusterParameterGroups",
    Neptune: "DescribeDBClusterParameterGroups",
    RDS: "DescribeDBClusterParameterGroups",
  },
  DBClusterParameterGroupsMessage: {
    DocDB: "DescribeDBClusterParameterGroups",
    Neptune: "DescribeDBClusterParameterGroups",
    RDS: "DescribeDBClusterParameterGroups",
  },
  DescribeDBClusterParametersMessage: {
    DocDB: "DescribeDBClusterParameters",
    Neptune: "DescribeDBClusterParameters",
    RDS: "DescribeDBClusterParameters",
  },
  DBClusterParameterGroupDetails: {
    DocDB: "DescribeDBClusterParameters",
    Neptune: "DescribeDBClusterParameters",
    RDS: "DescribeDBClusterParameters",
  },
  DescribeDBClusterSnapshotAttributesMessage: {
    DocDB: "DescribeDBClusterSnapshotAttributes",
    Neptune: "DescribeDBClusterSnapshotAttributes",
    RDS: "DescribeDBClusterSnapshotAttributes",
  },
  DescribeDBClusterSnapshotAttributesResult: {
    DocDB: "DescribeDBClusterSnapshotAttributes",
    Neptune: "DescribeDBClusterSnapshotAttributes",
    RDS: "DescribeDBClusterSnapshotAttributes",
  },
  DescribeDBClusterSnapshotsMessage: {
    DocDB: "DescribeDBClusterSnapshots",
    Neptune: "DescribeDBClusterSnapshots",
    RDS: "DescribeDBClusterSnapshots",
  },
  DBClusterSnapshotMessage: {
    DocDB: "DescribeDBClusterSnapshots",
    Neptune: "DescribeDBClusterSnapshots",
    RDS: "DescribeDBClusterSnapshots",
  },
  DescribeDBClustersMessage: {
    DocDB: "DescribeDBClusters",
    Neptune: "DescribeDBClusters",
    RDS: "DescribeDBClusters",
  },
  DBClusterMessage: {
    DocDB: "DescribeDBClusters",
    Neptune: "DescribeDBClusters",
    RDS: "DescribeDBClusters",
  },
  DescribeDBEngineVersionsMessage: {
    DocDB: "DescribeDBEngineVersions",
    Neptune: "DescribeDBEngineVersions",
    RDS: "DescribeDBEngineVersions",
  },
  DBEngineVersionMessage: {
    DocDB: "DescribeDBEngineVersions",
    Neptune: "DescribeDBEngineVersions",
    RDS: "DescribeDBEngineVersions",
  },
  DescribeDBInstancesMessage: {
    DocDB: "DescribeDBInstances",
    Neptune: "DescribeDBInstances",
    RDS: "DescribeDBInstances",
  },
  DBInstanceMessage: {
    DocDB: "DescribeDBInstances",
    Neptune: "DescribeDBInstances",
    RDS: "DescribeDBInstances",
  },
  DescribeDBSubnetGroupsMessage: {
    DocDB: "DescribeDBSubnetGroups",
    Neptune: "DescribeDBSubnetGroups",
    RDS: "DescribeDBSubnetGroups",
  },
  DBSubnetGroupMessage: {
    DocDB: "DescribeDBSubnetGroups",
    Neptune: "DescribeDBSubnetGroups",
    RDS: "DescribeDBSubnetGroups",
  },
  DescribeEngineDefaultClusterParametersMessage: {
    DocDB: "DescribeEngineDefaultClusterParameters",
    Neptune: "DescribeEngineDefaultClusterParameters",
    RDS: "DescribeEngineDefaultClusterParameters",
  },
  DescribeEngineDefaultClusterParametersResult: {
    DocDB: "DescribeEngineDefaultClusterParameters",
    Neptune: "DescribeEngineDefaultClusterParameters",
    RDS: "DescribeEngineDefaultClusterParameters",
  },
  EventCategoriesMessage: {
    DocDB: "DescribeEventCategories",
    Neptune: "DescribeEventCategories",
    RDS: "DescribeEventCategories",
    Redshift: "DescribeEventCategories",
  },
  EventSubscriptionsMessage: {
    DocDB: "DescribeEventSubscriptions",
    Neptune: "DescribeEventSubscriptions",
    RDS: "DescribeEventSubscriptions",
    Redshift: "DescribeEventSubscriptions",
  },
  EventsMessage: {
    DocDB: "DescribeEvents",
    ElastiCache: "DescribeEvents",
    Neptune: "DescribeEvents",
    RDS: "DescribeEvents",
    Redshift: "DescribeEvents",
  },
  DescribeGlobalClustersMessage: {
    DocDB: "DescribeGlobalClusters",
    Neptune: "DescribeGlobalClusters",
    RDS: "DescribeGlobalClusters",
  },
  GlobalClustersMessage: {
    DocDB: "DescribeGlobalClusters",
    Neptune: "DescribeGlobalClusters",
    RDS: "DescribeGlobalClusters",
  },
  DescribeOrderableDBInstanceOptionsMessage: {
    DocDB: "DescribeOrderableDBInstanceOptions",
    Neptune: "DescribeOrderableDBInstanceOptions",
    RDS: "DescribeOrderableDBInstanceOptions",
  },
  OrderableDBInstanceOptionsMessage: {
    DocDB: "DescribeOrderableDBInstanceOptions",
    Neptune: "DescribeOrderableDBInstanceOptions",
    RDS: "DescribeOrderableDBInstanceOptions",
  },
  PendingMaintenanceActionsMessage: {
    DocDB: "DescribePendingMaintenanceActions",
    Neptune: "DescribePendingMaintenanceActions",
    RDS: "DescribePendingMaintenanceActions",
  },
  FailoverDBClusterMessage: {
    DocDB: "FailoverDBCluster",
    Neptune: "FailoverDBCluster",
    RDS: "FailoverDBCluster",
  },
  FailoverDBClusterResult: {
    DocDB: "FailoverDBCluster",
    Neptune: "FailoverDBCluster",
    RDS: "FailoverDBCluster",
  },
  TagListMessage: {
    DocDB: "ListTagsForResource",
    ElastiCache: "RemoveTagsFromResource",
    Neptune: "ListTagsForResource",
    RDS: "ListTagsForResource",
  },
  ModifyDBClusterMessage: {
    DocDB: "ModifyDBCluster",
    Neptune: "ModifyDBCluster",
    RDS: "ModifyDBCluster",
  },
  ModifyDBClusterResult: {
    DocDB: "ModifyDBCluster",
    Neptune: "ModifyDBCluster",
    RDS: "ModifyDBCluster",
  },
  ModifyDBClusterParameterGroupMessage: {
    DocDB: "ModifyDBClusterParameterGroup",
    Neptune: "ModifyDBClusterParameterGroup",
    RDS: "ModifyDBClusterParameterGroup",
  },
  DBClusterParameterGroupNameMessage: {
    DocDB: "ResetDBClusterParameterGroup",
    Neptune: "ResetDBClusterParameterGroup",
    RDS: "ResetDBClusterParameterGroup",
  },
  ModifyDBClusterSnapshotAttributeMessage: {
    DocDB: "ModifyDBClusterSnapshotAttribute",
    Neptune: "ModifyDBClusterSnapshotAttribute",
    RDS: "ModifyDBClusterSnapshotAttribute",
  },
  ModifyDBClusterSnapshotAttributeResult: {
    DocDB: "ModifyDBClusterSnapshotAttribute",
    Neptune: "ModifyDBClusterSnapshotAttribute",
    RDS: "ModifyDBClusterSnapshotAttribute",
  },
  ModifyDBInstanceMessage: {
    DocDB: "ModifyDBInstance",
    Neptune: "ModifyDBInstance",
    RDS: "ModifyDBInstance",
  },
  ModifyDBInstanceResult: {
    DocDB: "ModifyDBInstance",
    Neptune: "ModifyDBInstance",
    RDS: "ModifyDBInstance",
  },
  ModifyDBSubnetGroupMessage: {
    DocDB: "ModifyDBSubnetGroup",
    Neptune: "ModifyDBSubnetGroup",
    RDS: "ModifyDBSubnetGroup",
  },
  ModifyDBSubnetGroupResult: {
    DocDB: "ModifyDBSubnetGroup",
    Neptune: "ModifyDBSubnetGroup",
    RDS: "ModifyDBSubnetGroup",
  },
  ModifyEventSubscriptionResult: {
    DocDB: "ModifyEventSubscription",
    Neptune: "ModifyEventSubscription",
    RDS: "ModifyEventSubscription",
    Redshift: "ModifyEventSubscription",
  },
  ModifyGlobalClusterMessage: {
    DocDB: "ModifyGlobalCluster",
    Neptune: "ModifyGlobalCluster",
    RDS: "ModifyGlobalCluster",
  },
  ModifyGlobalClusterResult: {
    DocDB: "ModifyGlobalCluster",
    Neptune: "ModifyGlobalCluster",
    RDS: "ModifyGlobalCluster",
  },
  RebootDBInstanceMessage: {
    DocDB: "RebootDBInstance",
    Neptune: "RebootDBInstance",
    RDS: "RebootDBInstance",
  },
  RebootDBInstanceResult: {
    DocDB: "RebootDBInstance",
    Neptune: "RebootDBInstance",
    RDS: "RebootDBInstance",
  },
  RemoveFromGlobalClusterMessage: {
    DocDB: "RemoveFromGlobalCluster",
    Neptune: "RemoveFromGlobalCluster",
    RDS: "RemoveFromGlobalCluster",
  },
  RemoveFromGlobalClusterResult: {
    DocDB: "RemoveFromGlobalCluster",
    Neptune: "RemoveFromGlobalCluster",
    RDS: "RemoveFromGlobalCluster",
  },
  RemoveSourceIdentifierFromSubscriptionMessage: {
    DocDB: "RemoveSourceIdentifierFromSubscription",
    Neptune: "RemoveSourceIdentifierFromSubscription",
    RDS: "RemoveSourceIdentifierFromSubscription",
  },
  RemoveSourceIdentifierFromSubscriptionResult: {
    DocDB: "RemoveSourceIdentifierFromSubscription",
    Neptune: "RemoveSourceIdentifierFromSubscription",
    RDS: "RemoveSourceIdentifierFromSubscription",
  },
  ResetDBClusterParameterGroupMessage: {
    DocDB: "ResetDBClusterParameterGroup",
    Neptune: "ResetDBClusterParameterGroup",
    RDS: "ResetDBClusterParameterGroup",
  },
  RestoreDBClusterFromSnapshotMessage: {
    DocDB: "RestoreDBClusterFromSnapshot",
    Neptune: "RestoreDBClusterFromSnapshot",
    RDS: "RestoreDBClusterFromSnapshot",
  },
  RestoreDBClusterFromSnapshotResult: {
    DocDB: "RestoreDBClusterFromSnapshot",
    Neptune: "RestoreDBClusterFromSnapshot",
    RDS: "RestoreDBClusterFromSnapshot",
  },
  RestoreDBClusterToPointInTimeMessage: {
    DocDB: "RestoreDBClusterToPointInTime",
    Neptune: "RestoreDBClusterToPointInTime",
    RDS: "RestoreDBClusterToPointInTime",
  },
  RestoreDBClusterToPointInTimeResult: {
    DocDB: "RestoreDBClusterToPointInTime",
    Neptune: "RestoreDBClusterToPointInTime",
    RDS: "RestoreDBClusterToPointInTime",
  },
  StartDBClusterMessage: {
    DocDB: "StartDBCluster",
    Neptune: "StartDBCluster",
    RDS: "StartDBCluster",
  },
  StartDBClusterResult: {
    DocDB: "StartDBCluster",
    Neptune: "StartDBCluster",
    RDS: "StartDBCluster",
  },
  StopDBClusterMessage: { DocDB: "StopDBCluster", Neptune: "StopDBCluster", RDS: "StopDBCluster" },
  StopDBClusterResult: { DocDB: "StopDBCluster", Neptune: "StopDBCluster", RDS: "StopDBCluster" },
  CreateClusterInput: { DocDBElastic: "CreateCluster" },
  CreateClusterOutput: { DocDBElastic: "CreateCluster" },
  CreateClusterSnapshotInput: { DocDBElastic: "CreateClusterSnapshot" },
  CreateClusterSnapshotOutput: { DocDBElastic: "CreateClusterSnapshot" },
  DeleteClusterInput: { DocDBElastic: "DeleteCluster" },
  DeleteClusterOutput: { DocDBElastic: "DeleteCluster" },
  DeleteClusterSnapshotInput: { DocDBElastic: "DeleteClusterSnapshot" },
  DeleteClusterSnapshotOutput: { DocDBElastic: "DeleteClusterSnapshot" },
  GetClusterInput: { DocDBElastic: "GetCluster" },
  GetClusterOutput: { DocDBElastic: "GetCluster" },
  GetClusterSnapshotInput: { DocDBElastic: "GetClusterSnapshot" },
  GetClusterSnapshotOutput: { DocDBElastic: "GetClusterSnapshot" },
  ListClusterSnapshotsInput: { DocDBElastic: "ListClusterSnapshots" },
  ListClusterSnapshotsOutput: { DocDBElastic: "ListClusterSnapshots" },
  ListClustersInput: { DocDBElastic: "ListClusters", EMR: "ListClusters" },
  ListClustersOutput: { DocDBElastic: "ListClusters", EMR: "ListClusters" },
  RestoreClusterFromSnapshotInput: { DocDBElastic: "RestoreClusterFromSnapshot" },
  RestoreClusterFromSnapshotOutput: { DocDBElastic: "RestoreClusterFromSnapshot" },
  UpdateClusterInput: { DocDBElastic: "UpdateCluster" },
  UpdateClusterOutput: { DocDBElastic: "UpdateCluster" },
  ReplicationConfigurationTemplate: {
    Drs: "UpdateReplicationConfigurationTemplate",
    Mgn: "UpdateReplicationConfigurationTemplate",
  },
  SourceServer: { Drs: "RetryDataReplication", Mgn: "UpdateSourceServerReplicationType" },
  LaunchConfiguration: { Drs: "UpdateLaunchConfiguration", Mgn: "UpdateLaunchConfiguration" },
  ReplicationConfiguration: {
    Drs: "UpdateReplicationConfiguration",
    Mgn: "UpdateReplicationConfiguration",
  },
  BatchExecuteStatementInput: {
    DynamoDB: "BatchExecuteStatement",
    RedshiftData: "BatchExecuteStatement",
  },
  BatchExecuteStatementOutput: {
    DynamoDB: "BatchExecuteStatement",
    RedshiftData: "BatchExecuteStatement",
  },
  BatchGetItemInput: { DynamoDB: "BatchGetItem" },
  BatchGetItemOutput: { DynamoDB: "BatchGetItem" },
  BatchWriteItemInput: { DynamoDB: "BatchWriteItem" },
  BatchWriteItemOutput: { DynamoDB: "BatchWriteItem" },
  CreateBackupInput: { DynamoDB: "CreateBackup" },
  CreateBackupOutput: { DynamoDB: "CreateBackup" },
  CreateGlobalTableInput: { DynamoDB: "CreateGlobalTable" },
  CreateGlobalTableOutput: { DynamoDB: "CreateGlobalTable" },
  CreateTableInput: { DynamoDB: "CreateTable" },
  CreateTableOutput: { DynamoDB: "CreateTable" },
  DeleteBackupInput: { DynamoDB: "DeleteBackup" },
  DeleteBackupOutput: { DynamoDB: "DeleteBackup" },
  DeleteItemInput: { DynamoDB: "DeleteItem" },
  DeleteItemOutput: { DynamoDB: "DeleteItem" },
  DeleteTableInput: { DynamoDB: "DeleteTable" },
  DeleteTableOutput: { DynamoDB: "DeleteTable" },
  DescribeBackupInput: { DynamoDB: "DescribeBackup" },
  DescribeBackupOutput: { DynamoDB: "DescribeBackup" },
  DescribeContinuousBackupsInput: { DynamoDB: "DescribeContinuousBackups" },
  DescribeContinuousBackupsOutput: { DynamoDB: "DescribeContinuousBackups" },
  DescribeContributorInsightsInput: { DynamoDB: "DescribeContributorInsights" },
  DescribeContributorInsightsOutput: { DynamoDB: "DescribeContributorInsights" },
  DescribeExportInput: { DynamoDB: "DescribeExport" },
  DescribeExportOutput: { DynamoDB: "DescribeExport" },
  DescribeGlobalTableInput: { DynamoDB: "DescribeGlobalTable" },
  DescribeGlobalTableOutput: { DynamoDB: "DescribeGlobalTable" },
  DescribeGlobalTableSettingsInput: { DynamoDB: "DescribeGlobalTableSettings" },
  DescribeGlobalTableSettingsOutput: { DynamoDB: "DescribeGlobalTableSettings" },
  DescribeImportInput: { DynamoDB: "DescribeImport" },
  DescribeImportOutput: { DynamoDB: "DescribeImport" },
  DescribeKinesisStreamingDestinationInput: { DynamoDB: "DescribeKinesisStreamingDestination" },
  DescribeKinesisStreamingDestinationOutput: { DynamoDB: "DescribeKinesisStreamingDestination" },
  DescribeLimitsInput: { DynamoDB: "DescribeLimits", Kinesis: "DescribeLimits" },
  DescribeLimitsOutput: { DynamoDB: "DescribeLimits", Kinesis: "DescribeLimits" },
  DescribeTableInput: { DynamoDB: "DescribeTable" },
  DescribeTableOutput: { DynamoDB: "DescribeTable" },
  DescribeTableReplicaAutoScalingInput: { DynamoDB: "DescribeTableReplicaAutoScaling" },
  DescribeTableReplicaAutoScalingOutput: { DynamoDB: "DescribeTableReplicaAutoScaling" },
  DescribeTimeToLiveInput: { DynamoDB: "DescribeTimeToLive" },
  DescribeTimeToLiveOutput: { DynamoDB: "DescribeTimeToLive" },
  KinesisStreamingDestinationInput: { DynamoDB: "EnableKinesisStreamingDestination" },
  KinesisStreamingDestinationOutput: { DynamoDB: "EnableKinesisStreamingDestination" },
  ExecuteStatementInput: { DynamoDB: "ExecuteStatement", RedshiftData: "ExecuteStatement" },
  ExecuteStatementOutput: { DynamoDB: "ExecuteStatement", RedshiftData: "ExecuteStatement" },
  ExecuteTransactionInput: { DynamoDB: "ExecuteTransaction" },
  ExecuteTransactionOutput: { DynamoDB: "ExecuteTransaction" },
  ExportTableToPointInTimeInput: { DynamoDB: "ExportTableToPointInTime" },
  ExportTableToPointInTimeOutput: { DynamoDB: "ExportTableToPointInTime" },
  GetItemInput: { DynamoDB: "GetItem" },
  GetItemOutput: { DynamoDB: "GetItem" },
  ImportTableInput: { DynamoDB: "ImportTable" },
  ImportTableOutput: { DynamoDB: "ImportTable" },
  ListBackupsInput: { DynamoDB: "ListBackups" },
  ListBackupsOutput: { DynamoDB: "ListBackups" },
  ListContributorInsightsInput: { DynamoDB: "ListContributorInsights" },
  ListContributorInsightsOutput: { DynamoDB: "ListContributorInsights" },
  ListGlobalTablesInput: { DynamoDB: "ListGlobalTables" },
  ListGlobalTablesOutput: { DynamoDB: "ListGlobalTables" },
  ListTablesInput: { DynamoDB: "ListTables" },
  ListTablesOutput: { DynamoDB: "ListTables" },
  ListTagsOfResourceInput: { DynamoDB: "ListTagsOfResource" },
  ListTagsOfResourceOutput: { DynamoDB: "ListTagsOfResource" },
  PutItemInput: { DynamoDB: "PutItem" },
  PutItemOutput: { DynamoDB: "PutItem" },
  QueryInput: { DynamoDB: "Query" },
  QueryOutput: { DynamoDB: "Query" },
  RestoreTableFromBackupInput: { DynamoDB: "RestoreTableFromBackup" },
  RestoreTableFromBackupOutput: { DynamoDB: "RestoreTableFromBackup" },
  RestoreTableToPointInTimeInput: { DynamoDB: "RestoreTableToPointInTime" },
  RestoreTableToPointInTimeOutput: { DynamoDB: "RestoreTableToPointInTime" },
  ScanInput: { DynamoDB: "Scan" },
  ScanOutput: { DynamoDB: "Scan" },
  TransactGetItemsInput: { DynamoDB: "TransactGetItems" },
  TransactGetItemsOutput: { DynamoDB: "TransactGetItems" },
  TransactWriteItemsInput: { DynamoDB: "TransactWriteItems" },
  TransactWriteItemsOutput: { DynamoDB: "TransactWriteItems" },
  UpdateContinuousBackupsInput: { DynamoDB: "UpdateContinuousBackups" },
  UpdateContinuousBackupsOutput: { DynamoDB: "UpdateContinuousBackups" },
  UpdateContributorInsightsInput: { DynamoDB: "UpdateContributorInsights" },
  UpdateContributorInsightsOutput: { DynamoDB: "UpdateContributorInsights" },
  UpdateGlobalTableInput: { DynamoDB: "UpdateGlobalTable" },
  UpdateGlobalTableOutput: { DynamoDB: "UpdateGlobalTable" },
  UpdateGlobalTableSettingsInput: { DynamoDB: "UpdateGlobalTableSettings" },
  UpdateGlobalTableSettingsOutput: { DynamoDB: "UpdateGlobalTableSettings" },
  UpdateItemInput: { DynamoDB: "UpdateItem" },
  UpdateItemOutput: { DynamoDB: "UpdateItem" },
  UpdateTableInput: { DynamoDB: "UpdateTable" },
  UpdateTableOutput: { DynamoDB: "UpdateTable" },
  UpdateTableReplicaAutoScalingInput: { DynamoDB: "UpdateTableReplicaAutoScaling" },
  UpdateTableReplicaAutoScalingOutput: { DynamoDB: "UpdateTableReplicaAutoScaling" },
  UpdateTimeToLiveInput: { DynamoDB: "UpdateTimeToLive" },
  UpdateTimeToLiveOutput: { DynamoDB: "UpdateTimeToLive" },
  DescribeStreamInput: {
    DynamoDBStreams: "DescribeStream",
    Kinesis: "DescribeStream",
    KinesisVideo: "DescribeStream",
  },
  DescribeStreamOutput: {
    DynamoDBStreams: "DescribeStream",
    Kinesis: "DescribeStream",
    KinesisVideo: "DescribeStream",
  },
  GetRecordsInput: { DynamoDBStreams: "GetRecords", Kinesis: "GetRecords" },
  GetRecordsOutput: { DynamoDBStreams: "GetRecords", Kinesis: "GetRecords" },
  GetShardIteratorInput: { DynamoDBStreams: "GetShardIterator", Kinesis: "GetShardIterator" },
  GetShardIteratorOutput: { DynamoDBStreams: "GetShardIterator", Kinesis: "GetShardIterator" },
  ListStreamsInput: {
    DynamoDBStreams: "ListStreams",
    Kinesis: "ListStreams",
    KinesisVideo: "ListStreams",
  },
  ListStreamsOutput: {
    DynamoDBStreams: "ListStreams",
    Kinesis: "ListStreams",
    KinesisVideo: "ListStreams",
  },
  AcceptAddressTransferResult: { EC2: "AcceptAddressTransfer" },
  AcceptReservedInstancesExchangeQuoteResult: { EC2: "AcceptReservedInstancesExchangeQuote" },
  AcceptTransitGatewayMulticastDomainAssociationsResult: {
    EC2: "AcceptTransitGatewayMulticastDomainAssociations",
  },
  AcceptTransitGatewayPeeringAttachmentResult: { EC2: "AcceptTransitGatewayPeeringAttachment" },
  AcceptTransitGatewayVpcAttachmentResult: { EC2: "AcceptTransitGatewayVpcAttachment" },
  AcceptVpcEndpointConnectionsResult: { EC2: "AcceptVpcEndpointConnections" },
  AcceptVpcPeeringConnectionResult: { EC2: "AcceptVpcPeeringConnection" },
  AdvertiseByoipCidrResult: { EC2: "AdvertiseByoipCidr" },
  AllocateAddressResult: { EC2: "AllocateAddress" },
  AllocateHostsResult: { EC2: "AllocateHosts" },
  AllocateIpamPoolCidrResult: { EC2: "AllocateIpamPoolCidr" },
  ApplySecurityGroupsToClientVpnTargetNetworkResult: {
    EC2: "ApplySecurityGroupsToClientVpnTargetNetwork",
  },
  AssignIpv6AddressesResult: { EC2: "AssignIpv6Addresses" },
  AssignPrivateIpAddressesResult: { EC2: "AssignPrivateIpAddresses" },
  AssignPrivateNatGatewayAddressResult: { EC2: "AssignPrivateNatGatewayAddress" },
  AssociateAddressResult: { EC2: "AssociateAddress" },
  AssociateClientVpnTargetNetworkResult: { EC2: "AssociateClientVpnTargetNetwork" },
  AssociateEnclaveCertificateIamRoleResult: { EC2: "AssociateEnclaveCertificateIamRole" },
  AssociateIamInstanceProfileResult: { EC2: "AssociateIamInstanceProfile" },
  AssociateInstanceEventWindowResult: { EC2: "AssociateInstanceEventWindow" },
  AssociateIpamResourceDiscoveryResult: { EC2: "AssociateIpamResourceDiscovery" },
  AssociateNatGatewayAddressResult: { EC2: "AssociateNatGatewayAddress" },
  AssociateRouteTableResult: { EC2: "AssociateRouteTable" },
  AssociateSubnetCidrBlockResult: { EC2: "AssociateSubnetCidrBlock" },
  AssociateTransitGatewayMulticastDomainResult: { EC2: "AssociateTransitGatewayMulticastDomain" },
  AssociateTransitGatewayPolicyTableResult: { EC2: "AssociateTransitGatewayPolicyTable" },
  AssociateTransitGatewayRouteTableResult: { EC2: "AssociateTransitGatewayRouteTable" },
  AssociateTrunkInterfaceResult: { EC2: "AssociateTrunkInterface" },
  AssociateVpcCidrBlockResult: { EC2: "AssociateVpcCidrBlock" },
  AttachClassicLinkVpcResult: { EC2: "AttachClassicLinkVpc" },
  AttachNetworkInterfaceResult: { EC2: "AttachNetworkInterface" },
  AttachVerifiedAccessTrustProviderResult: { EC2: "AttachVerifiedAccessTrustProvider" },
  VolumeAttachment: { EC2: "DetachVolume" },
  AttachVpnGatewayResult: { EC2: "AttachVpnGateway" },
  AuthorizeClientVpnIngressResult: { EC2: "AuthorizeClientVpnIngress" },
  AuthorizeSecurityGroupEgressResult: { EC2: "AuthorizeSecurityGroupEgress" },
  AuthorizeSecurityGroupIngressResult: { EC2: "AuthorizeSecurityGroupIngress" },
  BundleInstanceResult: { EC2: "BundleInstance" },
  CancelBundleTaskResult: { EC2: "CancelBundleTask" },
  CancelCapacityReservationResult: { EC2: "CancelCapacityReservation" },
  CancelCapacityReservationFleetsResult: { EC2: "CancelCapacityReservationFleets" },
  CancelConversionRequest: { EC2: "CancelConversionTask" },
  CancelImageLaunchPermissionResult: { EC2: "CancelImageLaunchPermission" },
  CancelImportTaskResult: { EC2: "CancelImportTask" },
  CancelReservedInstancesListingResult: { EC2: "CancelReservedInstancesListing" },
  CancelSpotInstanceRequestsResult: { EC2: "CancelSpotInstanceRequests" },
  ConfirmProductInstanceResult: { EC2: "ConfirmProductInstance" },
  CopyFpgaImageResult: { EC2: "CopyFpgaImage" },
  CopyImageResult: { EC2: "CopyImage" },
  CopySnapshotResult: {
    EC2: "CopySnapshot",
    ElastiCache: "CopySnapshot",
    Lightsail: "CopySnapshot",
  },
  CreateCapacityReservationResult: { EC2: "CreateCapacityReservation" },
  CreateCapacityReservationFleetResult: { EC2: "CreateCapacityReservationFleet" },
  CreateCarrierGatewayResult: { EC2: "CreateCarrierGateway" },
  CreateClientVpnEndpointResult: { EC2: "CreateClientVpnEndpoint" },
  CreateClientVpnRouteResult: { EC2: "CreateClientVpnRoute" },
  CreateCoipCidrResult: { EC2: "CreateCoipCidr" },
  CreateCoipPoolResult: { EC2: "CreateCoipPool" },
  CreateCustomerGatewayResult: { EC2: "CreateCustomerGateway" },
  CreateDefaultSubnetResult: { EC2: "CreateDefaultSubnet" },
  CreateDefaultVpcResult: { EC2: "CreateDefaultVpc" },
  CreateDhcpOptionsResult: { EC2: "CreateDhcpOptions" },
  CreateEgressOnlyInternetGatewayResult: { EC2: "CreateEgressOnlyInternetGateway" },
  CreateFlowLogsResult: { EC2: "CreateFlowLogs" },
  CreateFpgaImageResult: { EC2: "CreateFpgaImage" },
  CreateImageResult: { EC2: "CreateImage" },
  CreateInstanceConnectEndpointResult: { EC2: "CreateInstanceConnectEndpoint" },
  CreateInstanceEventWindowResult: { EC2: "CreateInstanceEventWindow" },
  CreateInstanceExportTaskResult: { EC2: "CreateInstanceExportTask" },
  CreateInternetGatewayResult: { EC2: "CreateInternetGateway" },
  CreateIpamResult: { EC2: "CreateIpam" },
  CreateIpamPoolResult: { EC2: "CreateIpamPool" },
  CreateIpamResourceDiscoveryResult: { EC2: "CreateIpamResourceDiscovery" },
  CreateIpamScopeResult: { EC2: "CreateIpamScope" },
  KeyPair: { EC2: "CreateKeyPair" },
  CreateLaunchTemplateResult: { EC2: "CreateLaunchTemplate" },
  CreateLaunchTemplateVersionResult: { EC2: "CreateLaunchTemplateVersion" },
  CreateLocalGatewayRouteResult: { EC2: "CreateLocalGatewayRoute" },
  CreateLocalGatewayRouteTableResult: { EC2: "CreateLocalGatewayRouteTable" },
  CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociationResult: {
    EC2: "CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociation",
  },
  CreateLocalGatewayRouteTableVpcAssociationResult: {
    EC2: "CreateLocalGatewayRouteTableVpcAssociation",
  },
  CreateManagedPrefixListResult: { EC2: "CreateManagedPrefixList" },
  CreateNatGatewayResult: { EC2: "CreateNatGateway" },
  CreateNetworkAclResult: { EC2: "CreateNetworkAcl" },
  CreateNetworkInsightsAccessScopeResult: { EC2: "CreateNetworkInsightsAccessScope" },
  CreateNetworkInsightsPathResult: { EC2: "CreateNetworkInsightsPath" },
  CreateNetworkInterfaceResult: { EC2: "CreateNetworkInterface" },
  CreateNetworkInterfacePermissionResult: { EC2: "CreateNetworkInterfacePermission" },
  CreatePlacementGroupResult: { EC2: "CreatePlacementGroup" },
  CreatePublicIpv4PoolResult: { EC2: "CreatePublicIpv4Pool" },
  CreateReplaceRootVolumeTaskResult: { EC2: "CreateReplaceRootVolumeTask" },
  CreateReservedInstancesListingResult: { EC2: "CreateReservedInstancesListing" },
  CreateRestoreImageTaskResult: { EC2: "CreateRestoreImageTask" },
  CreateRouteTableResult: { EC2: "CreateRouteTable" },
  CreateSecurityGroupResult: { EC2: "CreateSecurityGroup" },
  Snapshot: { EC2: "CreateSnapshot" },
  CreateSnapshotsResult: { EC2: "CreateSnapshots" },
  CreateSpotDatafeedSubscriptionResult: { EC2: "CreateSpotDatafeedSubscription" },
  CreateStoreImageTaskResult: { EC2: "CreateStoreImageTask" },
  CreateSubnetResult: { EC2: "CreateSubnet" },
  CreateSubnetCidrReservationResult: { EC2: "CreateSubnetCidrReservation" },
  CreateTrafficMirrorFilterResult: { EC2: "CreateTrafficMirrorFilter" },
  CreateTrafficMirrorFilterRuleResult: { EC2: "CreateTrafficMirrorFilterRule" },
  CreateTrafficMirrorSessionResult: { EC2: "CreateTrafficMirrorSession" },
  CreateTrafficMirrorTargetResult: { EC2: "CreateTrafficMirrorTarget" },
  CreateTransitGatewayResult: { EC2: "CreateTransitGateway" },
  CreateTransitGatewayConnectResult: { EC2: "CreateTransitGatewayConnect" },
  CreateTransitGatewayConnectPeerResult: { EC2: "CreateTransitGatewayConnectPeer" },
  CreateTransitGatewayMulticastDomainResult: { EC2: "CreateTransitGatewayMulticastDomain" },
  CreateTransitGatewayPeeringAttachmentResult: { EC2: "CreateTransitGatewayPeeringAttachment" },
  CreateTransitGatewayPolicyTableResult: { EC2: "CreateTransitGatewayPolicyTable" },
  CreateTransitGatewayPrefixListReferenceResult: { EC2: "CreateTransitGatewayPrefixListReference" },
  CreateTransitGatewayRouteResult: { EC2: "CreateTransitGatewayRoute" },
  CreateTransitGatewayRouteTableResult: { EC2: "CreateTransitGatewayRouteTable" },
  CreateTransitGatewayRouteTableAnnouncementResult: {
    EC2: "CreateTransitGatewayRouteTableAnnouncement",
  },
  CreateTransitGatewayVpcAttachmentResult: { EC2: "CreateTransitGatewayVpcAttachment" },
  CreateVerifiedAccessEndpointResult: { EC2: "CreateVerifiedAccessEndpoint" },
  CreateVerifiedAccessGroupResult: { EC2: "CreateVerifiedAccessGroup" },
  CreateVerifiedAccessInstanceResult: { EC2: "CreateVerifiedAccessInstance" },
  CreateVerifiedAccessTrustProviderResult: { EC2: "CreateVerifiedAccessTrustProvider" },
  Volume: { EC2: "CreateVolume" },
  CreateVpcResult: { EC2: "CreateVpc" },
  CreateVpcEndpointResult: { EC2: "CreateVpcEndpoint" },
  CreateVpcEndpointConnectionNotificationResult: { EC2: "CreateVpcEndpointConnectionNotification" },
  CreateVpcEndpointServiceConfigurationResult: { EC2: "CreateVpcEndpointServiceConfiguration" },
  CreateVpcPeeringConnectionResult: { EC2: "CreateVpcPeeringConnection" },
  CreateVpnConnectionResult: { EC2: "CreateVpnConnection" },
  CreateVpnGatewayResult: { EC2: "CreateVpnGateway" },
  DeleteCarrierGatewayResult: { EC2: "DeleteCarrierGateway" },
  DeleteClientVpnEndpointResult: { EC2: "DeleteClientVpnEndpoint" },
  DeleteClientVpnRouteResult: { EC2: "DeleteClientVpnRoute" },
  DeleteCoipCidrResult: { EC2: "DeleteCoipCidr" },
  DeleteCoipPoolResult: { EC2: "DeleteCoipPool" },
  DeleteEgressOnlyInternetGatewayResult: { EC2: "DeleteEgressOnlyInternetGateway" },
  DeleteFleetsResult: { EC2: "DeleteFleets" },
  DeleteFlowLogsResult: { EC2: "DeleteFlowLogs" },
  DeleteFpgaImageResult: { EC2: "DeleteFpgaImage" },
  DeleteInstanceConnectEndpointResult: { EC2: "DeleteInstanceConnectEndpoint" },
  DeleteInstanceEventWindowResult: { EC2: "DeleteInstanceEventWindow" },
  DeleteIpamResult: { EC2: "DeleteIpam" },
  DeleteIpamPoolResult: { EC2: "DeleteIpamPool" },
  DeleteIpamResourceDiscoveryResult: { EC2: "DeleteIpamResourceDiscovery" },
  DeleteIpamScopeResult: { EC2: "DeleteIpamScope" },
  DeleteLaunchTemplateResult: { EC2: "DeleteLaunchTemplate" },
  DeleteLaunchTemplateVersionsResult: { EC2: "DeleteLaunchTemplateVersions" },
  DeleteLocalGatewayRouteResult: { EC2: "DeleteLocalGatewayRoute" },
  DeleteLocalGatewayRouteTableResult: { EC2: "DeleteLocalGatewayRouteTable" },
  DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationResult: {
    EC2: "DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociation",
  },
  DeleteLocalGatewayRouteTableVpcAssociationResult: {
    EC2: "DeleteLocalGatewayRouteTableVpcAssociation",
  },
  DeleteManagedPrefixListResult: { EC2: "DeleteManagedPrefixList" },
  DeleteNatGatewayResult: { EC2: "DeleteNatGateway" },
  DeleteNetworkInsightsAccessScopeResult: { EC2: "DeleteNetworkInsightsAccessScope" },
  DeleteNetworkInsightsAccessScopeAnalysisResult: {
    EC2: "DeleteNetworkInsightsAccessScopeAnalysis",
  },
  DeleteNetworkInsightsAnalysisResult: { EC2: "DeleteNetworkInsightsAnalysis" },
  DeleteNetworkInsightsPathResult: { EC2: "DeleteNetworkInsightsPath" },
  DeleteNetworkInterfacePermissionResult: { EC2: "DeleteNetworkInterfacePermission" },
  DeletePublicIpv4PoolResult: { EC2: "DeletePublicIpv4Pool" },
  DeleteQueuedReservedInstancesResult: { EC2: "DeleteQueuedReservedInstances" },
  DeleteSubnetCidrReservationResult: { EC2: "DeleteSubnetCidrReservation" },
  DeleteTrafficMirrorFilterResult: { EC2: "DeleteTrafficMirrorFilter" },
  DeleteTrafficMirrorFilterRuleResult: { EC2: "DeleteTrafficMirrorFilterRule" },
  DeleteTrafficMirrorSessionResult: { EC2: "DeleteTrafficMirrorSession" },
  DeleteTrafficMirrorTargetResult: { EC2: "DeleteTrafficMirrorTarget" },
  DeleteTransitGatewayResult: { EC2: "DeleteTransitGateway" },
  DeleteTransitGatewayConnectResult: { EC2: "DeleteTransitGatewayConnect" },
  DeleteTransitGatewayConnectPeerResult: { EC2: "DeleteTransitGatewayConnectPeer" },
  DeleteTransitGatewayMulticastDomainResult: { EC2: "DeleteTransitGatewayMulticastDomain" },
  DeleteTransitGatewayPeeringAttachmentResult: { EC2: "DeleteTransitGatewayPeeringAttachment" },
  DeleteTransitGatewayPolicyTableResult: { EC2: "DeleteTransitGatewayPolicyTable" },
  DeleteTransitGatewayPrefixListReferenceResult: { EC2: "DeleteTransitGatewayPrefixListReference" },
  DeleteTransitGatewayRouteResult: { EC2: "DeleteTransitGatewayRoute" },
  DeleteTransitGatewayRouteTableResult: { EC2: "DeleteTransitGatewayRouteTable" },
  DeleteTransitGatewayRouteTableAnnouncementResult: {
    EC2: "DeleteTransitGatewayRouteTableAnnouncement",
  },
  DeleteTransitGatewayVpcAttachmentResult: { EC2: "DeleteTransitGatewayVpcAttachment" },
  DeleteVerifiedAccessEndpointResult: { EC2: "DeleteVerifiedAccessEndpoint" },
  DeleteVerifiedAccessGroupResult: { EC2: "DeleteVerifiedAccessGroup" },
  DeleteVerifiedAccessInstanceResult: { EC2: "DeleteVerifiedAccessInstance" },
  DeleteVerifiedAccessTrustProviderResult: { EC2: "DeleteVerifiedAccessTrustProvider" },
  DeleteVpcEndpointConnectionNotificationsResult: {
    EC2: "DeleteVpcEndpointConnectionNotifications",
  },
  DeleteVpcEndpointServiceConfigurationsResult: { EC2: "DeleteVpcEndpointServiceConfigurations" },
  DeleteVpcEndpointsResult: { EC2: "DeleteVpcEndpoints" },
  DeleteVpcPeeringConnectionResult: { EC2: "DeleteVpcPeeringConnection" },
  DeprovisionByoipCidrResult: { EC2: "DeprovisionByoipCidr" },
  DeprovisionIpamPoolCidrResult: { EC2: "DeprovisionIpamPoolCidr" },
  DeprovisionPublicIpv4PoolCidrResult: { EC2: "DeprovisionPublicIpv4PoolCidr" },
  DeregisterInstanceEventNotificationAttributesResult: {
    EC2: "DeregisterInstanceEventNotificationAttributes",
  },
  DeregisterTransitGatewayMulticastGroupMembersResult: {
    EC2: "DeregisterTransitGatewayMulticastGroupMembers",
  },
  DeregisterTransitGatewayMulticastGroupSourcesResult: {
    EC2: "DeregisterTransitGatewayMulticastGroupSources",
  },
  DescribeAccountAttributesResult: {
    EC2: "DescribeAccountAttributes",
    PinpointSMSVoiceV2: "DescribeAccountAttributes",
  },
  DescribeAddressTransfersResult: { EC2: "DescribeAddressTransfers" },
  DescribeAddressesResult: { EC2: "DescribeAddresses", Snowball: "DescribeAddresses" },
  DescribeAddressesAttributeResult: { EC2: "DescribeAddressesAttribute" },
  DescribeAggregateIdFormatResult: { EC2: "DescribeAggregateIdFormat" },
  DescribeAvailabilityZonesResult: { EC2: "DescribeAvailabilityZones" },
  DescribeAwsNetworkPerformanceMetricSubscriptionsResult: {
    EC2: "DescribeAwsNetworkPerformanceMetricSubscriptions",
  },
  DescribeBundleTasksResult: { EC2: "DescribeBundleTasks" },
  DescribeByoipCidrsResult: { EC2: "DescribeByoipCidrs" },
  DescribeCapacityReservationFleetsResult: { EC2: "DescribeCapacityReservationFleets" },
  DescribeCapacityReservationsResult: { EC2: "DescribeCapacityReservations" },
  DescribeCarrierGatewaysResult: { EC2: "DescribeCarrierGateways" },
  DescribeClassicLinkInstancesResult: { EC2: "DescribeClassicLinkInstances" },
  DescribeClientVpnAuthorizationRulesResult: { EC2: "DescribeClientVpnAuthorizationRules" },
  DescribeClientVpnConnectionsResult: { EC2: "DescribeClientVpnConnections" },
  DescribeClientVpnEndpointsResult: { EC2: "DescribeClientVpnEndpoints" },
  DescribeClientVpnRoutesResult: { EC2: "DescribeClientVpnRoutes" },
  DescribeClientVpnTargetNetworksResult: { EC2: "DescribeClientVpnTargetNetworks" },
  DescribeCoipPoolsResult: { EC2: "DescribeCoipPools" },
  DescribeConversionTasksResult: { EC2: "DescribeConversionTasks" },
  DescribeCustomerGatewaysResult: { EC2: "DescribeCustomerGateways" },
  DescribeDhcpOptionsResult: { EC2: "DescribeDhcpOptions" },
  DescribeEgressOnlyInternetGatewaysResult: { EC2: "DescribeEgressOnlyInternetGateways" },
  DescribeElasticGpusResult: { EC2: "DescribeElasticGpus" },
  DescribeExportImageTasksResult: { EC2: "DescribeExportImageTasks" },
  DescribeExportTasksResult: { EC2: "DescribeExportTasks" },
  DescribeFastLaunchImagesResult: { EC2: "DescribeFastLaunchImages" },
  DescribeFastSnapshotRestoresResult: { EC2: "DescribeFastSnapshotRestores" },
  DescribeFleetHistoryResult: { EC2: "DescribeFleetHistory" },
  DescribeFleetInstancesResult: { EC2: "DescribeFleetInstances" },
  DescribeFlowLogsResult: { EC2: "DescribeFlowLogs" },
  DescribeFpgaImageAttributeResult: { EC2: "DescribeFpgaImageAttribute" },
  DescribeFpgaImagesResult: { EC2: "DescribeFpgaImages" },
  DescribeHostReservationOfferingsResult: { EC2: "DescribeHostReservationOfferings" },
  DescribeHostReservationsResult: { EC2: "DescribeHostReservations" },
  DescribeHostsResult: { EC2: "DescribeHosts" },
  DescribeIamInstanceProfileAssociationsResult: { EC2: "DescribeIamInstanceProfileAssociations" },
  DescribeIdFormatResult: { EC2: "DescribeIdFormat" },
  DescribeIdentityIdFormatResult: { EC2: "DescribeIdentityIdFormat" },
  ImageAttribute: { EC2: "DescribeImageAttribute" },
  DescribeImportImageTasksResult: { EC2: "DescribeImportImageTasks" },
  DescribeImportSnapshotTasksResult: { EC2: "DescribeImportSnapshotTasks" },
  InstanceAttribute: { EC2: "DescribeInstanceAttribute" },
  DescribeInstanceConnectEndpointsResult: { EC2: "DescribeInstanceConnectEndpoints" },
  DescribeInstanceCreditSpecificationsResult: { EC2: "DescribeInstanceCreditSpecifications" },
  DescribeInstanceEventNotificationAttributesResult: {
    EC2: "DescribeInstanceEventNotificationAttributes",
  },
  DescribeInstanceEventWindowsResult: { EC2: "DescribeInstanceEventWindows" },
  DescribeInstanceStatusResult: { EC2: "DescribeInstanceStatus" },
  DescribeInstanceTypeOfferingsResult: { EC2: "DescribeInstanceTypeOfferings" },
  DescribeInstanceTypesResult: { EC2: "DescribeInstanceTypes" },
  DescribeInstancesResult: { EC2: "DescribeInstances", OpsWorks: "DescribeInstances" },
  DescribeInternetGatewaysResult: { EC2: "DescribeInternetGateways" },
  DescribeIpamPoolsResult: { EC2: "DescribeIpamPools" },
  DescribeIpamResourceDiscoveriesResult: { EC2: "DescribeIpamResourceDiscoveries" },
  DescribeIpamResourceDiscoveryAssociationsResult: {
    EC2: "DescribeIpamResourceDiscoveryAssociations",
  },
  DescribeIpamScopesResult: { EC2: "DescribeIpamScopes" },
  DescribeIpamsResult: { EC2: "DescribeIpams" },
  DescribeIpv6PoolsResult: { EC2: "DescribeIpv6Pools" },
  DescribeKeyPairsResult: { EC2: "DescribeKeyPairs" },
  DescribeLaunchTemplateVersionsResult: { EC2: "DescribeLaunchTemplateVersions" },
  DescribeLaunchTemplatesResult: { EC2: "DescribeLaunchTemplates" },
  DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResult: {
    EC2: "DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
  },
  DescribeLocalGatewayRouteTableVpcAssociationsResult: {
    EC2: "DescribeLocalGatewayRouteTableVpcAssociations",
  },
  DescribeLocalGatewayRouteTablesResult: { EC2: "DescribeLocalGatewayRouteTables" },
  DescribeLocalGatewayVirtualInterfaceGroupsResult: {
    EC2: "DescribeLocalGatewayVirtualInterfaceGroups",
  },
  DescribeLocalGatewayVirtualInterfacesResult: { EC2: "DescribeLocalGatewayVirtualInterfaces" },
  DescribeLocalGatewaysResult: { EC2: "DescribeLocalGateways" },
  DescribeManagedPrefixListsResult: { EC2: "DescribeManagedPrefixLists" },
  DescribeMovingAddressesResult: { EC2: "DescribeMovingAddresses" },
  DescribeNatGatewaysResult: { EC2: "DescribeNatGateways" },
  DescribeNetworkAclsResult: { EC2: "DescribeNetworkAcls" },
  DescribeNetworkInsightsAccessScopeAnalysesResult: {
    EC2: "DescribeNetworkInsightsAccessScopeAnalyses",
  },
  DescribeNetworkInsightsAccessScopesResult: { EC2: "DescribeNetworkInsightsAccessScopes" },
  DescribeNetworkInsightsAnalysesResult: { EC2: "DescribeNetworkInsightsAnalyses" },
  DescribeNetworkInsightsPathsResult: { EC2: "DescribeNetworkInsightsPaths" },
  DescribeNetworkInterfaceAttributeResult: { EC2: "DescribeNetworkInterfaceAttribute" },
  DescribeNetworkInterfacePermissionsResult: { EC2: "DescribeNetworkInterfacePermissions" },
  DescribeNetworkInterfacesResult: { EC2: "DescribeNetworkInterfaces" },
  DescribePlacementGroupsResult: { EC2: "DescribePlacementGroups" },
  DescribePrefixListsResult: { EC2: "DescribePrefixLists" },
  DescribePrincipalIdFormatResult: { EC2: "DescribePrincipalIdFormat" },
  DescribePublicIpv4PoolsResult: { EC2: "DescribePublicIpv4Pools" },
  DescribeReplaceRootVolumeTasksResult: { EC2: "DescribeReplaceRootVolumeTasks" },
  DescribeReservedInstancesResult: { EC2: "DescribeReservedInstances" },
  DescribeReservedInstancesListingsResult: { EC2: "DescribeReservedInstancesListings" },
  DescribeReservedInstancesModificationsResult: { EC2: "DescribeReservedInstancesModifications" },
  DescribeReservedInstancesOfferingsResult: { EC2: "DescribeReservedInstancesOfferings" },
  DescribeRouteTablesResult: { EC2: "DescribeRouteTables" },
  DescribeScheduledInstanceAvailabilityResult: { EC2: "DescribeScheduledInstanceAvailability" },
  DescribeScheduledInstancesResult: { EC2: "DescribeScheduledInstances" },
  DescribeSecurityGroupReferencesResult: { EC2: "DescribeSecurityGroupReferences" },
  DescribeSecurityGroupRulesResult: { EC2: "DescribeSecurityGroupRules" },
  DescribeSecurityGroupsResult: { EC2: "DescribeSecurityGroups" },
  DescribeSnapshotAttributeResult: { EC2: "DescribeSnapshotAttribute" },
  DescribeSnapshotTierStatusResult: { EC2: "DescribeSnapshotTierStatus" },
  DescribeSpotDatafeedSubscriptionResult: { EC2: "DescribeSpotDatafeedSubscription" },
  DescribeSpotInstanceRequestsResult: { EC2: "DescribeSpotInstanceRequests" },
  DescribeSpotPriceHistoryResult: { EC2: "DescribeSpotPriceHistory" },
  DescribeStaleSecurityGroupsResult: { EC2: "DescribeStaleSecurityGroups" },
  DescribeStoreImageTasksResult: { EC2: "DescribeStoreImageTasks" },
  DescribeSubnetsResult: { EC2: "DescribeSubnets" },
  DescribeTagsResult: { EC2: "DescribeTags", WorkSpaces: "DescribeTags" },
  DescribeTrafficMirrorFiltersResult: { EC2: "DescribeTrafficMirrorFilters" },
  DescribeTrafficMirrorSessionsResult: { EC2: "DescribeTrafficMirrorSessions" },
  DescribeTrafficMirrorTargetsResult: { EC2: "DescribeTrafficMirrorTargets" },
  DescribeTransitGatewayAttachmentsResult: { EC2: "DescribeTransitGatewayAttachments" },
  DescribeTransitGatewayConnectPeersResult: { EC2: "DescribeTransitGatewayConnectPeers" },
  DescribeTransitGatewayConnectsResult: { EC2: "DescribeTransitGatewayConnects" },
  DescribeTransitGatewayMulticastDomainsResult: { EC2: "DescribeTransitGatewayMulticastDomains" },
  DescribeTransitGatewayPeeringAttachmentsResult: {
    EC2: "DescribeTransitGatewayPeeringAttachments",
  },
  DescribeTransitGatewayPolicyTablesResult: { EC2: "DescribeTransitGatewayPolicyTables" },
  DescribeTransitGatewayRouteTableAnnouncementsResult: {
    EC2: "DescribeTransitGatewayRouteTableAnnouncements",
  },
  DescribeTransitGatewayRouteTablesResult: { EC2: "DescribeTransitGatewayRouteTables" },
  DescribeTransitGatewayVpcAttachmentsResult: { EC2: "DescribeTransitGatewayVpcAttachments" },
  DescribeTransitGatewaysResult: { EC2: "DescribeTransitGateways" },
  DescribeTrunkInterfaceAssociationsResult: { EC2: "DescribeTrunkInterfaceAssociations" },
  DescribeVerifiedAccessEndpointsResult: { EC2: "DescribeVerifiedAccessEndpoints" },
  DescribeVerifiedAccessGroupsResult: { EC2: "DescribeVerifiedAccessGroups" },
  DescribeVerifiedAccessInstanceLoggingConfigurationsResult: {
    EC2: "DescribeVerifiedAccessInstanceLoggingConfigurations",
  },
  DescribeVerifiedAccessInstancesResult: { EC2: "DescribeVerifiedAccessInstances" },
  DescribeVerifiedAccessTrustProvidersResult: { EC2: "DescribeVerifiedAccessTrustProviders" },
  DescribeVolumeAttributeResult: { EC2: "DescribeVolumeAttribute" },
  DescribeVolumeStatusResult: { EC2: "DescribeVolumeStatus" },
  DescribeVolumesResult: { EC2: "DescribeVolumes", OpsWorks: "DescribeVolumes" },
  DescribeVolumesModificationsResult: { EC2: "DescribeVolumesModifications" },
  DescribeVpcAttributeResult: { EC2: "DescribeVpcAttribute" },
  DescribeVpcClassicLinkResult: { EC2: "DescribeVpcClassicLink" },
  DescribeVpcClassicLinkDnsSupportResult: { EC2: "DescribeVpcClassicLinkDnsSupport" },
  DescribeVpcEndpointConnectionNotificationsResult: {
    EC2: "DescribeVpcEndpointConnectionNotifications",
  },
  DescribeVpcEndpointConnectionsResult: { EC2: "DescribeVpcEndpointConnections" },
  DescribeVpcEndpointServiceConfigurationsResult: {
    EC2: "DescribeVpcEndpointServiceConfigurations",
  },
  DescribeVpcEndpointServicePermissionsResult: { EC2: "DescribeVpcEndpointServicePermissions" },
  DescribeVpcEndpointServicesResult: { EC2: "DescribeVpcEndpointServices" },
  DescribeVpcEndpointsResult: { EC2: "DescribeVpcEndpoints" },
  DescribeVpcPeeringConnectionsResult: { EC2: "DescribeVpcPeeringConnections" },
  DescribeVpcsResult: { EC2: "DescribeVpcs" },
  DescribeVpnConnectionsResult: { EC2: "DescribeVpnConnections" },
  DescribeVpnGatewaysResult: { EC2: "DescribeVpnGateways" },
  DetachClassicLinkVpcResult: { EC2: "DetachClassicLinkVpc" },
  DetachVerifiedAccessTrustProviderResult: { EC2: "DetachVerifiedAccessTrustProvider" },
  DisableAddressTransferResult: { EC2: "DisableAddressTransfer" },
  DisableAwsNetworkPerformanceMetricSubscriptionResult: {
    EC2: "DisableAwsNetworkPerformanceMetricSubscription",
  },
  DisableEbsEncryptionByDefaultResult: { EC2: "DisableEbsEncryptionByDefault" },
  DisableFastLaunchResult: { EC2: "DisableFastLaunch" },
  DisableFastSnapshotRestoresResult: { EC2: "DisableFastSnapshotRestores" },
  DisableImageDeprecationResult: { EC2: "DisableImageDeprecation" },
  DisableIpamOrganizationAdminAccountResult: { EC2: "DisableIpamOrganizationAdminAccount" },
  DisableSerialConsoleAccessResult: { EC2: "DisableSerialConsoleAccess" },
  DisableTransitGatewayRouteTablePropagationResult: {
    EC2: "DisableTransitGatewayRouteTablePropagation",
  },
  DisableVpcClassicLinkResult: { EC2: "DisableVpcClassicLink" },
  DisableVpcClassicLinkDnsSupportResult: { EC2: "DisableVpcClassicLinkDnsSupport" },
  DisassociateClientVpnTargetNetworkResult: { EC2: "DisassociateClientVpnTargetNetwork" },
  DisassociateEnclaveCertificateIamRoleResult: { EC2: "DisassociateEnclaveCertificateIamRole" },
  DisassociateIamInstanceProfileResult: { EC2: "DisassociateIamInstanceProfile" },
  DisassociateInstanceEventWindowResult: { EC2: "DisassociateInstanceEventWindow" },
  DisassociateIpamResourceDiscoveryResult: { EC2: "DisassociateIpamResourceDiscovery" },
  DisassociateNatGatewayAddressResult: { EC2: "DisassociateNatGatewayAddress" },
  DisassociateSubnetCidrBlockResult: { EC2: "DisassociateSubnetCidrBlock" },
  DisassociateTransitGatewayMulticastDomainResult: {
    EC2: "DisassociateTransitGatewayMulticastDomain",
  },
  DisassociateTransitGatewayPolicyTableResult: { EC2: "DisassociateTransitGatewayPolicyTable" },
  DisassociateTransitGatewayRouteTableResult: { EC2: "DisassociateTransitGatewayRouteTable" },
  DisassociateTrunkInterfaceResult: { EC2: "DisassociateTrunkInterface" },
  DisassociateVpcCidrBlockResult: { EC2: "DisassociateVpcCidrBlock" },
  EnableAddressTransferResult: { EC2: "EnableAddressTransfer" },
  EnableAwsNetworkPerformanceMetricSubscriptionResult: {
    EC2: "EnableAwsNetworkPerformanceMetricSubscription",
  },
  EnableEbsEncryptionByDefaultResult: { EC2: "EnableEbsEncryptionByDefault" },
  EnableFastLaunchResult: { EC2: "EnableFastLaunch" },
  EnableFastSnapshotRestoresResult: { EC2: "EnableFastSnapshotRestores" },
  EnableImageDeprecationResult: { EC2: "EnableImageDeprecation" },
  EnableIpamOrganizationAdminAccountResult: { EC2: "EnableIpamOrganizationAdminAccount" },
  EnableReachabilityAnalyzerOrganizationSharingResult: {
    EC2: "EnableReachabilityAnalyzerOrganizationSharing",
  },
  EnableSerialConsoleAccessResult: { EC2: "EnableSerialConsoleAccess" },
  EnableTransitGatewayRouteTablePropagationResult: {
    EC2: "EnableTransitGatewayRouteTablePropagation",
  },
  EnableVpcClassicLinkResult: { EC2: "EnableVpcClassicLink" },
  EnableVpcClassicLinkDnsSupportResult: { EC2: "EnableVpcClassicLinkDnsSupport" },
  ExportClientVpnClientCertificateRevocationListResult: {
    EC2: "ExportClientVpnClientCertificateRevocationList",
  },
  ExportClientVpnClientConfigurationResult: { EC2: "ExportClientVpnClientConfiguration" },
  ExportImageResult: { EC2: "ExportImage" },
  ExportTransitGatewayRoutesResult: { EC2: "ExportTransitGatewayRoutes" },
  GetAssociatedEnclaveCertificateIamRolesResult: { EC2: "GetAssociatedEnclaveCertificateIamRoles" },
  GetAssociatedIpv6PoolCidrsResult: { EC2: "GetAssociatedIpv6PoolCidrs" },
  GetAwsNetworkPerformanceDataResult: { EC2: "GetAwsNetworkPerformanceData" },
  GetCapacityReservationUsageResult: { EC2: "GetCapacityReservationUsage" },
  GetCoipPoolUsageResult: { EC2: "GetCoipPoolUsage" },
  GetConsoleOutputResult: { EC2: "GetConsoleOutput" },
  GetConsoleScreenshotResult: { EC2: "GetConsoleScreenshot" },
  GetDefaultCreditSpecificationResult: { EC2: "GetDefaultCreditSpecification" },
  GetEbsDefaultKmsKeyIdResult: { EC2: "GetEbsDefaultKmsKeyId" },
  GetEbsEncryptionByDefaultResult: { EC2: "GetEbsEncryptionByDefault" },
  GetFlowLogsIntegrationTemplateResult: { EC2: "GetFlowLogsIntegrationTemplate" },
  GetGroupsForCapacityReservationResult: { EC2: "GetGroupsForCapacityReservation" },
  GetHostReservationPurchasePreviewResult: { EC2: "GetHostReservationPurchasePreview" },
  GetInstanceTypesFromInstanceRequirementsResult: {
    EC2: "GetInstanceTypesFromInstanceRequirements",
  },
  GetInstanceUefiDataResult: { EC2: "GetInstanceUefiData" },
  GetIpamAddressHistoryResult: { EC2: "GetIpamAddressHistory" },
  GetIpamDiscoveredAccountsResult: { EC2: "GetIpamDiscoveredAccounts" },
  GetIpamDiscoveredResourceCidrsResult: { EC2: "GetIpamDiscoveredResourceCidrs" },
  GetIpamPoolAllocationsResult: { EC2: "GetIpamPoolAllocations" },
  GetIpamPoolCidrsResult: { EC2: "GetIpamPoolCidrs" },
  GetIpamResourceCidrsResult: { EC2: "GetIpamResourceCidrs" },
  GetLaunchTemplateDataResult: { EC2: "GetLaunchTemplateData" },
  GetManagedPrefixListAssociationsResult: { EC2: "GetManagedPrefixListAssociations" },
  GetManagedPrefixListEntriesResult: { EC2: "GetManagedPrefixListEntries" },
  GetNetworkInsightsAccessScopeAnalysisFindingsResult: {
    EC2: "GetNetworkInsightsAccessScopeAnalysisFindings",
  },
  GetNetworkInsightsAccessScopeContentResult: { EC2: "GetNetworkInsightsAccessScopeContent" },
  GetPasswordDataResult: { EC2: "GetPasswordData" },
  GetReservedInstancesExchangeQuoteResult: { EC2: "GetReservedInstancesExchangeQuote" },
  GetSerialConsoleAccessStatusResult: { EC2: "GetSerialConsoleAccessStatus" },
  GetSpotPlacementScoresResult: { EC2: "GetSpotPlacementScores" },
  GetSubnetCidrReservationsResult: { EC2: "GetSubnetCidrReservations" },
  GetTransitGatewayAttachmentPropagationsResult: { EC2: "GetTransitGatewayAttachmentPropagations" },
  GetTransitGatewayMulticastDomainAssociationsResult: {
    EC2: "GetTransitGatewayMulticastDomainAssociations",
  },
  GetTransitGatewayPolicyTableAssociationsResult: {
    EC2: "GetTransitGatewayPolicyTableAssociations",
  },
  GetTransitGatewayPolicyTableEntriesResult: { EC2: "GetTransitGatewayPolicyTableEntries" },
  GetTransitGatewayPrefixListReferencesResult: { EC2: "GetTransitGatewayPrefixListReferences" },
  GetTransitGatewayRouteTableAssociationsResult: { EC2: "GetTransitGatewayRouteTableAssociations" },
  GetTransitGatewayRouteTablePropagationsResult: { EC2: "GetTransitGatewayRouteTablePropagations" },
  GetVerifiedAccessEndpointPolicyResult: { EC2: "GetVerifiedAccessEndpointPolicy" },
  GetVerifiedAccessGroupPolicyResult: { EC2: "GetVerifiedAccessGroupPolicy" },
  GetVpnConnectionDeviceSampleConfigurationResult: {
    EC2: "GetVpnConnectionDeviceSampleConfiguration",
  },
  GetVpnConnectionDeviceTypesResult: { EC2: "GetVpnConnectionDeviceTypes" },
  GetVpnTunnelReplacementStatusResult: { EC2: "GetVpnTunnelReplacementStatus" },
  ImportClientVpnClientCertificateRevocationListResult: {
    EC2: "ImportClientVpnClientCertificateRevocationList",
  },
  ImportImageResult: { EC2: "ImportImage" },
  ImportInstanceResult: { EC2: "ImportInstance" },
  ImportKeyPairResult: { EC2: "ImportKeyPair", Lightsail: "ImportKeyPair" },
  ImportSnapshotResult: { EC2: "ImportSnapshot" },
  ImportVolumeResult: { EC2: "ImportVolume" },
  ListImagesInRecycleBinResult: { EC2: "ListImagesInRecycleBin" },
  ListSnapshotsInRecycleBinResult: { EC2: "ListSnapshotsInRecycleBin" },
  ModifyAddressAttributeResult: { EC2: "ModifyAddressAttribute" },
  ModifyAvailabilityZoneGroupResult: { EC2: "ModifyAvailabilityZoneGroup" },
  ModifyCapacityReservationResult: { EC2: "ModifyCapacityReservation" },
  ModifyCapacityReservationFleetResult: { EC2: "ModifyCapacityReservationFleet" },
  ModifyClientVpnEndpointResult: { EC2: "ModifyClientVpnEndpoint" },
  ModifyDefaultCreditSpecificationResult: { EC2: "ModifyDefaultCreditSpecification" },
  ModifyEbsDefaultKmsKeyIdResult: { EC2: "ModifyEbsDefaultKmsKeyId" },
  ModifyFleetResult: { EC2: "ModifyFleet" },
  ModifyFpgaImageAttributeResult: { EC2: "ModifyFpgaImageAttribute" },
  ModifyHostsResult: { EC2: "ModifyHosts" },
  ModifyInstanceCapacityReservationAttributesResult: {
    EC2: "ModifyInstanceCapacityReservationAttributes",
  },
  ModifyInstanceCreditSpecificationResult: { EC2: "ModifyInstanceCreditSpecification" },
  ModifyInstanceEventStartTimeResult: { EC2: "ModifyInstanceEventStartTime" },
  ModifyInstanceEventWindowResult: { EC2: "ModifyInstanceEventWindow" },
  ModifyInstanceMaintenanceOptionsResult: { EC2: "ModifyInstanceMaintenanceOptions" },
  ModifyInstanceMetadataOptionsResult: { EC2: "ModifyInstanceMetadataOptions" },
  ModifyInstancePlacementResult: { EC2: "ModifyInstancePlacement" },
  ModifyIpamResult: { EC2: "ModifyIpam" },
  ModifyIpamPoolResult: { EC2: "ModifyIpamPool" },
  ModifyIpamResourceCidrResult: { EC2: "ModifyIpamResourceCidr" },
  ModifyIpamResourceDiscoveryResult: { EC2: "ModifyIpamResourceDiscovery" },
  ModifyIpamScopeResult: { EC2: "ModifyIpamScope" },
  ModifyLaunchTemplateResult: { EC2: "ModifyLaunchTemplate" },
  ModifyLocalGatewayRouteResult: { EC2: "ModifyLocalGatewayRoute" },
  ModifyManagedPrefixListResult: { EC2: "ModifyManagedPrefixList" },
  ModifyPrivateDnsNameOptionsResult: { EC2: "ModifyPrivateDnsNameOptions" },
  ModifyReservedInstancesResult: { EC2: "ModifyReservedInstances" },
  ModifySecurityGroupRulesResult: { EC2: "ModifySecurityGroupRules" },
  ModifySnapshotTierResult: { EC2: "ModifySnapshotTier" },
  ModifyTrafficMirrorFilterNetworkServicesResult: {
    EC2: "ModifyTrafficMirrorFilterNetworkServices",
  },
  ModifyTrafficMirrorFilterRuleResult: { EC2: "ModifyTrafficMirrorFilterRule" },
  ModifyTrafficMirrorSessionResult: { EC2: "ModifyTrafficMirrorSession" },
  ModifyTransitGatewayResult: { EC2: "ModifyTransitGateway" },
  ModifyTransitGatewayPrefixListReferenceResult: { EC2: "ModifyTransitGatewayPrefixListReference" },
  ModifyTransitGatewayVpcAttachmentResult: { EC2: "ModifyTransitGatewayVpcAttachment" },
  ModifyVerifiedAccessEndpointResult: { EC2: "ModifyVerifiedAccessEndpoint" },
  ModifyVerifiedAccessEndpointPolicyResult: { EC2: "ModifyVerifiedAccessEndpointPolicy" },
  ModifyVerifiedAccessGroupResult: { EC2: "ModifyVerifiedAccessGroup" },
  ModifyVerifiedAccessGroupPolicyResult: { EC2: "ModifyVerifiedAccessGroupPolicy" },
  ModifyVerifiedAccessInstanceResult: { EC2: "ModifyVerifiedAccessInstance" },
  ModifyVerifiedAccessInstanceLoggingConfigurationResult: {
    EC2: "ModifyVerifiedAccessInstanceLoggingConfiguration",
  },
  ModifyVerifiedAccessTrustProviderResult: { EC2: "ModifyVerifiedAccessTrustProvider" },
  ModifyVolumeResult: { EC2: "ModifyVolume" },
  ModifyVpcEndpointResult: { EC2: "ModifyVpcEndpoint" },
  ModifyVpcEndpointConnectionNotificationResult: { EC2: "ModifyVpcEndpointConnectionNotification" },
  ModifyVpcEndpointServiceConfigurationResult: { EC2: "ModifyVpcEndpointServiceConfiguration" },
  ModifyVpcEndpointServicePayerResponsibilityResult: {
    EC2: "ModifyVpcEndpointServicePayerResponsibility",
  },
  ModifyVpcEndpointServicePermissionsResult: { EC2: "ModifyVpcEndpointServicePermissions" },
  ModifyVpcPeeringConnectionOptionsResult: { EC2: "ModifyVpcPeeringConnectionOptions" },
  ModifyVpcTenancyResult: { EC2: "ModifyVpcTenancy" },
  ModifyVpnConnectionResult: { EC2: "ModifyVpnConnection" },
  ModifyVpnConnectionOptionsResult: { EC2: "ModifyVpnConnectionOptions" },
  ModifyVpnTunnelCertificateResult: { EC2: "ModifyVpnTunnelCertificate" },
  ModifyVpnTunnelOptionsResult: { EC2: "ModifyVpnTunnelOptions" },
  MonitorInstancesResult: { EC2: "MonitorInstances" },
  MoveAddressToVpcResult: { EC2: "MoveAddressToVpc" },
  MoveByoipCidrToIpamResult: { EC2: "MoveByoipCidrToIpam" },
  ProvisionByoipCidrResult: { EC2: "ProvisionByoipCidr" },
  ProvisionIpamPoolCidrResult: { EC2: "ProvisionIpamPoolCidr" },
  ProvisionPublicIpv4PoolCidrResult: { EC2: "ProvisionPublicIpv4PoolCidr" },
  PurchaseHostReservationResult: { EC2: "PurchaseHostReservation" },
  PurchaseReservedInstancesOfferingResult: { EC2: "PurchaseReservedInstancesOffering" },
  PurchaseScheduledInstancesResult: { EC2: "PurchaseScheduledInstances" },
  RegisterImageResult: { EC2: "RegisterImage" },
  RegisterInstanceEventNotificationAttributesResult: {
    EC2: "RegisterInstanceEventNotificationAttributes",
  },
  RegisterTransitGatewayMulticastGroupMembersResult: {
    EC2: "RegisterTransitGatewayMulticastGroupMembers",
  },
  RegisterTransitGatewayMulticastGroupSourcesResult: {
    EC2: "RegisterTransitGatewayMulticastGroupSources",
  },
  RejectTransitGatewayMulticastDomainAssociationsResult: {
    EC2: "RejectTransitGatewayMulticastDomainAssociations",
  },
  RejectTransitGatewayPeeringAttachmentResult: { EC2: "RejectTransitGatewayPeeringAttachment" },
  RejectTransitGatewayVpcAttachmentResult: { EC2: "RejectTransitGatewayVpcAttachment" },
  RejectVpcEndpointConnectionsResult: { EC2: "RejectVpcEndpointConnections" },
  RejectVpcPeeringConnectionResult: { EC2: "RejectVpcPeeringConnection" },
  ReleaseHostsResult: { EC2: "ReleaseHosts" },
  ReleaseIpamPoolAllocationResult: { EC2: "ReleaseIpamPoolAllocation" },
  ReplaceIamInstanceProfileAssociationResult: { EC2: "ReplaceIamInstanceProfileAssociation" },
  ReplaceNetworkAclAssociationResult: { EC2: "ReplaceNetworkAclAssociation" },
  ReplaceRouteTableAssociationResult: { EC2: "ReplaceRouteTableAssociation" },
  ReplaceTransitGatewayRouteResult: { EC2: "ReplaceTransitGatewayRoute" },
  ReplaceVpnTunnelResult: { EC2: "ReplaceVpnTunnel" },
  RequestSpotInstancesResult: { EC2: "RequestSpotInstances" },
  ResetAddressAttributeResult: { EC2: "ResetAddressAttribute" },
  ResetEbsDefaultKmsKeyIdResult: { EC2: "ResetEbsDefaultKmsKeyId" },
  ResetFpgaImageAttributeResult: { EC2: "ResetFpgaImageAttribute" },
  RestoreAddressToClassicResult: { EC2: "RestoreAddressToClassic" },
  RestoreImageFromRecycleBinResult: { EC2: "RestoreImageFromRecycleBin" },
  RestoreManagedPrefixListVersionResult: { EC2: "RestoreManagedPrefixListVersion" },
  RestoreSnapshotFromRecycleBinResult: { EC2: "RestoreSnapshotFromRecycleBin" },
  RestoreSnapshotTierResult: { EC2: "RestoreSnapshotTier" },
  RevokeClientVpnIngressResult: { EC2: "RevokeClientVpnIngress" },
  RevokeSecurityGroupEgressResult: { EC2: "RevokeSecurityGroupEgress" },
  RevokeSecurityGroupIngressResult: { EC2: "RevokeSecurityGroupIngress" },
  Reservation: { EC2: "RunInstances" },
  RunScheduledInstancesResult: { EC2: "RunScheduledInstances" },
  SearchLocalGatewayRoutesResult: { EC2: "SearchLocalGatewayRoutes" },
  SearchTransitGatewayMulticastGroupsResult: { EC2: "SearchTransitGatewayMulticastGroups" },
  SearchTransitGatewayRoutesResult: { EC2: "SearchTransitGatewayRoutes" },
  StartInstancesResult: { EC2: "StartInstances" },
  StartNetworkInsightsAccessScopeAnalysisResult: { EC2: "StartNetworkInsightsAccessScopeAnalysis" },
  StartNetworkInsightsAnalysisResult: { EC2: "StartNetworkInsightsAnalysis" },
  StartVpcEndpointServicePrivateDnsVerificationResult: {
    EC2: "StartVpcEndpointServicePrivateDnsVerification",
  },
  StopInstancesResult: { EC2: "StopInstances" },
  TerminateClientVpnConnectionsResult: { EC2: "TerminateClientVpnConnections" },
  TerminateInstancesResult: { EC2: "TerminateInstances" },
  UnassignIpv6AddressesResult: { EC2: "UnassignIpv6Addresses" },
  UnassignPrivateNatGatewayAddressResult: { EC2: "UnassignPrivateNatGatewayAddress" },
  UnmonitorInstancesResult: { EC2: "UnmonitorInstances" },
  UpdateSecurityGroupRuleDescriptionsEgressResult: {
    EC2: "UpdateSecurityGroupRuleDescriptionsEgress",
  },
  UpdateSecurityGroupRuleDescriptionsIngressResult: {
    EC2: "UpdateSecurityGroupRuleDescriptionsIngress",
  },
  WithdrawByoipCidrResult: { EC2: "WithdrawByoipCidr" },
  AccessPointDescription: { EFS: "CreateAccessPoint" },
  FileSystemDescription: { EFS: "UpdateFileSystem" },
  MountTargetDescription: { EFS: "CreateMountTarget" },
  ReplicationConfigurationDescription: { EFS: "CreateReplicationConfiguration" },
  BackupPolicyDescription: { EFS: "PutBackupPolicy" },
  FileSystemPolicyDescription: { EFS: "PutFileSystemPolicy" },
  LifecycleConfigurationDescription: { EFS: "PutLifecycleConfiguration" },
  ApplySecurityGroupsToLoadBalancerInput: { ELB: "ApplySecurityGroupsToLoadBalancer" },
  ApplySecurityGroupsToLoadBalancerOutput: { ELB: "ApplySecurityGroupsToLoadBalancer" },
  AttachLoadBalancerToSubnetsInput: { ELB: "AttachLoadBalancerToSubnets" },
  AttachLoadBalancerToSubnetsOutput: { ELB: "AttachLoadBalancerToSubnets" },
  ConfigureHealthCheckInput: { ELB: "ConfigureHealthCheck" },
  ConfigureHealthCheckOutput: { ELB: "ConfigureHealthCheck" },
  CreateAppCookieStickinessPolicyInput: { ELB: "CreateAppCookieStickinessPolicy" },
  CreateAppCookieStickinessPolicyOutput: { ELB: "CreateAppCookieStickinessPolicy" },
  CreateLBCookieStickinessPolicyInput: { ELB: "CreateLBCookieStickinessPolicy" },
  CreateLBCookieStickinessPolicyOutput: { ELB: "CreateLBCookieStickinessPolicy" },
  CreateAccessPointInput: { ELB: "CreateLoadBalancer" },
  CreateAccessPointOutput: { ELB: "CreateLoadBalancer" },
  CreateLoadBalancerListenerInput: { ELB: "CreateLoadBalancerListeners" },
  CreateLoadBalancerListenerOutput: { ELB: "CreateLoadBalancerListeners" },
  CreateLoadBalancerPolicyInput: { ELB: "CreateLoadBalancerPolicy" },
  CreateLoadBalancerPolicyOutput: { ELB: "CreateLoadBalancerPolicy" },
  DeleteAccessPointInput: { ELB: "DeleteLoadBalancer" },
  DeleteAccessPointOutput: { ELB: "DeleteLoadBalancer" },
  DeleteLoadBalancerListenerInput: { ELB: "DeleteLoadBalancerListeners" },
  DeleteLoadBalancerListenerOutput: { ELB: "DeleteLoadBalancerListeners" },
  DeleteLoadBalancerPolicyInput: { ELB: "DeleteLoadBalancerPolicy" },
  DeleteLoadBalancerPolicyOutput: { ELB: "DeleteLoadBalancerPolicy" },
  DeregisterEndPointsInput: { ELB: "DeregisterInstancesFromLoadBalancer" },
  DeregisterEndPointsOutput: { ELB: "DeregisterInstancesFromLoadBalancer" },
  DescribeEndPointStateInput: { ELB: "DescribeInstanceHealth" },
  DescribeEndPointStateOutput: { ELB: "DescribeInstanceHealth" },
  DescribeLoadBalancerAttributesInput: {
    ELB: "DescribeLoadBalancerAttributes",
    ELBv2: "DescribeLoadBalancerAttributes",
  },
  DescribeLoadBalancerAttributesOutput: {
    ELB: "DescribeLoadBalancerAttributes",
    ELBv2: "DescribeLoadBalancerAttributes",
  },
  DescribeLoadBalancerPoliciesInput: { ELB: "DescribeLoadBalancerPolicies" },
  DescribeLoadBalancerPoliciesOutput: { ELB: "DescribeLoadBalancerPolicies" },
  DescribeLoadBalancerPolicyTypesInput: { ELB: "DescribeLoadBalancerPolicyTypes" },
  DescribeLoadBalancerPolicyTypesOutput: { ELB: "DescribeLoadBalancerPolicyTypes" },
  DescribeAccessPointsInput: { ELB: "DescribeLoadBalancers" },
  DescribeAccessPointsOutput: { ELB: "DescribeLoadBalancers" },
  DescribeTagsInput: {
    ELB: "DescribeTags",
    ELBv2: "DescribeTags",
    MachineLearning: "DescribeTags",
  },
  DescribeTagsOutput: {
    ELB: "DescribeTags",
    ELBv2: "DescribeTags",
    MachineLearning: "DescribeTags",
  },
  DetachLoadBalancerFromSubnetsInput: { ELB: "DetachLoadBalancerFromSubnets" },
  DetachLoadBalancerFromSubnetsOutput: { ELB: "DetachLoadBalancerFromSubnets" },
  RemoveAvailabilityZonesInput: { ELB: "DisableAvailabilityZonesForLoadBalancer" },
  RemoveAvailabilityZonesOutput: { ELB: "DisableAvailabilityZonesForLoadBalancer" },
  AddAvailabilityZonesInput: { ELB: "EnableAvailabilityZonesForLoadBalancer" },
  AddAvailabilityZonesOutput: { ELB: "EnableAvailabilityZonesForLoadBalancer" },
  ModifyLoadBalancerAttributesInput: {
    ELB: "ModifyLoadBalancerAttributes",
    ELBv2: "ModifyLoadBalancerAttributes",
  },
  ModifyLoadBalancerAttributesOutput: {
    ELB: "ModifyLoadBalancerAttributes",
    ELBv2: "ModifyLoadBalancerAttributes",
  },
  RegisterEndPointsInput: { ELB: "RegisterInstancesWithLoadBalancer" },
  RegisterEndPointsOutput: { ELB: "RegisterInstancesWithLoadBalancer" },
  SetLoadBalancerListenerSSLCertificateInput: { ELB: "SetLoadBalancerListenerSSLCertificate" },
  SetLoadBalancerListenerSSLCertificateOutput: { ELB: "SetLoadBalancerListenerSSLCertificate" },
  SetLoadBalancerPoliciesForBackendServerInput: { ELB: "SetLoadBalancerPoliciesForBackendServer" },
  SetLoadBalancerPoliciesForBackendServerOutput: { ELB: "SetLoadBalancerPoliciesForBackendServer" },
  SetLoadBalancerPoliciesOfListenerInput: { ELB: "SetLoadBalancerPoliciesOfListener" },
  SetLoadBalancerPoliciesOfListenerOutput: { ELB: "SetLoadBalancerPoliciesOfListener" },
  AddListenerCertificatesInput: { ELBv2: "AddListenerCertificates" },
  AddListenerCertificatesOutput: { ELBv2: "AddListenerCertificates" },
  CreateListenerInput: { ELBv2: "CreateListener" },
  CreateListenerOutput: { ELBv2: "CreateListener" },
  CreateLoadBalancerInput: { ELBv2: "CreateLoadBalancer" },
  CreateLoadBalancerOutput: { ELBv2: "CreateLoadBalancer" },
  CreateRuleInput: { ELBv2: "CreateRule" },
  CreateRuleOutput: { ELBv2: "CreateRule" },
  CreateTargetGroupInput: { ELBv2: "CreateTargetGroup" },
  CreateTargetGroupOutput: { ELBv2: "CreateTargetGroup" },
  DeleteListenerInput: { ELBv2: "DeleteListener" },
  DeleteListenerOutput: { ELBv2: "DeleteListener" },
  DeleteLoadBalancerInput: { ELBv2: "DeleteLoadBalancer" },
  DeleteLoadBalancerOutput: { ELBv2: "DeleteLoadBalancer" },
  DeleteRuleInput: { ELBv2: "DeleteRule" },
  DeleteRuleOutput: { ELBv2: "DeleteRule" },
  DeleteTargetGroupInput: { ELBv2: "DeleteTargetGroup" },
  DeleteTargetGroupOutput: { ELBv2: "DeleteTargetGroup" },
  DeregisterTargetsInput: { ELBv2: "DeregisterTargets" },
  DeregisterTargetsOutput: { ELBv2: "DeregisterTargets" },
  DescribeListenerCertificatesInput: { ELBv2: "DescribeListenerCertificates" },
  DescribeListenerCertificatesOutput: { ELBv2: "DescribeListenerCertificates" },
  DescribeListenersInput: { ELBv2: "DescribeListeners" },
  DescribeListenersOutput: { ELBv2: "DescribeListeners" },
  DescribeLoadBalancersInput: { ELBv2: "DescribeLoadBalancers" },
  DescribeLoadBalancersOutput: { ELBv2: "DescribeLoadBalancers" },
  DescribeRulesInput: { ELBv2: "DescribeRules" },
  DescribeRulesOutput: { ELBv2: "DescribeRules" },
  DescribeSSLPoliciesInput: { ELBv2: "DescribeSSLPolicies" },
  DescribeSSLPoliciesOutput: { ELBv2: "DescribeSSLPolicies" },
  DescribeTargetGroupAttributesInput: { ELBv2: "DescribeTargetGroupAttributes" },
  DescribeTargetGroupAttributesOutput: { ELBv2: "DescribeTargetGroupAttributes" },
  DescribeTargetGroupsInput: { ELBv2: "DescribeTargetGroups" },
  DescribeTargetGroupsOutput: { ELBv2: "DescribeTargetGroups" },
  DescribeTargetHealthInput: { ELBv2: "DescribeTargetHealth" },
  DescribeTargetHealthOutput: { ELBv2: "DescribeTargetHealth" },
  ModifyListenerInput: { ELBv2: "ModifyListener" },
  ModifyListenerOutput: { ELBv2: "ModifyListener" },
  ModifyRuleInput: { ELBv2: "ModifyRule" },
  ModifyRuleOutput: { ELBv2: "ModifyRule" },
  ModifyTargetGroupInput: { ELBv2: "ModifyTargetGroup" },
  ModifyTargetGroupOutput: { ELBv2: "ModifyTargetGroup" },
  ModifyTargetGroupAttributesInput: { ELBv2: "ModifyTargetGroupAttributes" },
  ModifyTargetGroupAttributesOutput: { ELBv2: "ModifyTargetGroupAttributes" },
  RegisterTargetsInput: { ELBv2: "RegisterTargets" },
  RegisterTargetsOutput: { ELBv2: "RegisterTargets" },
  RemoveListenerCertificatesInput: { ELBv2: "RemoveListenerCertificates" },
  RemoveListenerCertificatesOutput: { ELBv2: "RemoveListenerCertificates" },
  SetIpAddressTypeInput: { ELBv2: "SetIpAddressType" },
  SetIpAddressTypeOutput: { ELBv2: "SetIpAddressType" },
  SetRulePrioritiesInput: { ELBv2: "SetRulePriorities" },
  SetRulePrioritiesOutput: { ELBv2: "SetRulePriorities" },
  SetSecurityGroupsInput: { ELBv2: "SetSecurityGroups" },
  SetSecurityGroupsOutput: { ELBv2: "SetSecurityGroups" },
  SetSubnetsInput: { ELBv2: "SetSubnets" },
  SetSubnetsOutput: { ELBv2: "SetSubnets" },
  AddInstanceFleetInput: { EMR: "AddInstanceFleet" },
  AddInstanceFleetOutput: { EMR: "AddInstanceFleet" },
  AddInstanceGroupsInput: { EMR: "AddInstanceGroups" },
  AddInstanceGroupsOutput: { EMR: "AddInstanceGroups" },
  AddJobFlowStepsInput: { EMR: "AddJobFlowSteps" },
  AddJobFlowStepsOutput: { EMR: "AddJobFlowSteps" },
  CancelStepsInput: { EMR: "CancelSteps" },
  CancelStepsOutput: { EMR: "CancelSteps" },
  CreateSecurityConfigurationInput: { EMR: "CreateSecurityConfiguration" },
  CreateSecurityConfigurationOutput: { EMR: "CreateSecurityConfiguration" },
  CreateStudioInput: { EMR: "CreateStudio" },
  CreateStudioOutput: { EMR: "CreateStudio" },
  CreateStudioSessionMappingInput: { EMR: "CreateStudioSessionMapping" },
  DeleteSecurityConfigurationInput: { EMR: "DeleteSecurityConfiguration" },
  DeleteSecurityConfigurationOutput: { EMR: "DeleteSecurityConfiguration" },
  DeleteStudioInput: { EMR: "DeleteStudio" },
  DeleteStudioSessionMappingInput: { EMR: "DeleteStudioSessionMapping" },
  DescribeClusterInput: { EMR: "DescribeCluster" },
  DescribeClusterOutput: { EMR: "DescribeCluster" },
  DescribeJobFlowsInput: { EMR: "DescribeJobFlows" },
  DescribeJobFlowsOutput: { EMR: "DescribeJobFlows" },
  DescribeNotebookExecutionInput: { EMR: "DescribeNotebookExecution" },
  DescribeNotebookExecutionOutput: { EMR: "DescribeNotebookExecution" },
  DescribeReleaseLabelInput: { EMR: "DescribeReleaseLabel" },
  DescribeReleaseLabelOutput: { EMR: "DescribeReleaseLabel" },
  DescribeSecurityConfigurationInput: { EMR: "DescribeSecurityConfiguration" },
  DescribeSecurityConfigurationOutput: { EMR: "DescribeSecurityConfiguration" },
  DescribeStepInput: { EMR: "DescribeStep" },
  DescribeStepOutput: { EMR: "DescribeStep" },
  DescribeStudioInput: { EMR: "DescribeStudio" },
  DescribeStudioOutput: { EMR: "DescribeStudio" },
  GetAutoTerminationPolicyInput: { EMR: "GetAutoTerminationPolicy" },
  GetAutoTerminationPolicyOutput: { EMR: "GetAutoTerminationPolicy" },
  GetBlockPublicAccessConfigurationInput: { EMR: "GetBlockPublicAccessConfiguration" },
  GetBlockPublicAccessConfigurationOutput: { EMR: "GetBlockPublicAccessConfiguration" },
  GetClusterSessionCredentialsInput: { EMR: "GetClusterSessionCredentials" },
  GetClusterSessionCredentialsOutput: { EMR: "GetClusterSessionCredentials" },
  GetManagedScalingPolicyInput: { EMR: "GetManagedScalingPolicy" },
  GetManagedScalingPolicyOutput: { EMR: "GetManagedScalingPolicy" },
  GetStudioSessionMappingInput: { EMR: "GetStudioSessionMapping" },
  GetStudioSessionMappingOutput: { EMR: "GetStudioSessionMapping" },
  ListBootstrapActionsInput: { EMR: "ListBootstrapActions" },
  ListBootstrapActionsOutput: { EMR: "ListBootstrapActions" },
  ListInstanceFleetsInput: { EMR: "ListInstanceFleets" },
  ListInstanceFleetsOutput: { EMR: "ListInstanceFleets" },
  ListInstanceGroupsInput: { EMR: "ListInstanceGroups" },
  ListInstanceGroupsOutput: { EMR: "ListInstanceGroups" },
  ListInstancesInput: { EMR: "ListInstances" },
  ListInstancesOutput: { EMR: "ListInstances" },
  ListNotebookExecutionsInput: { EMR: "ListNotebookExecutions" },
  ListNotebookExecutionsOutput: { EMR: "ListNotebookExecutions" },
  ListReleaseLabelsInput: { EMR: "ListReleaseLabels" },
  ListReleaseLabelsOutput: { EMR: "ListReleaseLabels" },
  ListSecurityConfigurationsInput: { EMR: "ListSecurityConfigurations" },
  ListSecurityConfigurationsOutput: { EMR: "ListSecurityConfigurations" },
  ListStepsInput: { EMR: "ListSteps" },
  ListStepsOutput: { EMR: "ListSteps" },
  ListStudioSessionMappingsInput: { EMR: "ListStudioSessionMappings" },
  ListStudioSessionMappingsOutput: { EMR: "ListStudioSessionMappings" },
  ListStudiosInput: { EMR: "ListStudios" },
  ListStudiosOutput: { EMR: "ListStudios" },
  ListSupportedInstanceTypesInput: { EMR: "ListSupportedInstanceTypes" },
  ListSupportedInstanceTypesOutput: { EMR: "ListSupportedInstanceTypes" },
  ModifyClusterInput: { EMR: "ModifyCluster" },
  ModifyClusterOutput: { EMR: "ModifyCluster" },
  ModifyInstanceFleetInput: { EMR: "ModifyInstanceFleet" },
  ModifyInstanceGroupsInput: { EMR: "ModifyInstanceGroups" },
  PutAutoScalingPolicyInput: { EMR: "PutAutoScalingPolicy" },
  PutAutoScalingPolicyOutput: { EMR: "PutAutoScalingPolicy" },
  PutAutoTerminationPolicyInput: { EMR: "PutAutoTerminationPolicy" },
  PutAutoTerminationPolicyOutput: { EMR: "PutAutoTerminationPolicy" },
  PutBlockPublicAccessConfigurationInput: { EMR: "PutBlockPublicAccessConfiguration" },
  PutBlockPublicAccessConfigurationOutput: { EMR: "PutBlockPublicAccessConfiguration" },
  PutManagedScalingPolicyInput: { EMR: "PutManagedScalingPolicy" },
  PutManagedScalingPolicyOutput: { EMR: "PutManagedScalingPolicy" },
  RemoveAutoScalingPolicyInput: { EMR: "RemoveAutoScalingPolicy" },
  RemoveAutoScalingPolicyOutput: { EMR: "RemoveAutoScalingPolicy" },
  RemoveAutoTerminationPolicyInput: { EMR: "RemoveAutoTerminationPolicy" },
  RemoveAutoTerminationPolicyOutput: { EMR: "RemoveAutoTerminationPolicy" },
  RemoveManagedScalingPolicyInput: { EMR: "RemoveManagedScalingPolicy" },
  RemoveManagedScalingPolicyOutput: { EMR: "RemoveManagedScalingPolicy" },
  RunJobFlowInput: { EMR: "RunJobFlow" },
  RunJobFlowOutput: { EMR: "RunJobFlow" },
  SetTerminationProtectionInput: { EMR: "SetTerminationProtection" },
  SetVisibleToAllUsersInput: { EMR: "SetVisibleToAllUsers" },
  StartNotebookExecutionInput: { EMR: "StartNotebookExecution" },
  StartNotebookExecutionOutput: { EMR: "StartNotebookExecution" },
  StopNotebookExecutionInput: { EMR: "StopNotebookExecution" },
  TerminateJobFlowsInput: { EMR: "TerminateJobFlows" },
  UpdateStudioInput: { EMR: "UpdateStudio" },
  UpdateStudioSessionMappingInput: { EMR: "UpdateStudioSessionMapping" },
  AuthorizeCacheSecurityGroupIngressMessage: { ElastiCache: "AuthorizeCacheSecurityGroupIngress" },
  AuthorizeCacheSecurityGroupIngressResult: { ElastiCache: "AuthorizeCacheSecurityGroupIngress" },
  BatchApplyUpdateActionMessage: { ElastiCache: "BatchApplyUpdateAction" },
  UpdateActionResultsMessage: { ElastiCache: "BatchStopUpdateAction" },
  BatchStopUpdateActionMessage: { ElastiCache: "BatchStopUpdateAction" },
  CompleteMigrationMessage: { ElastiCache: "CompleteMigration" },
  CopySnapshotMessage: { ElastiCache: "CopySnapshot" },
  CreateCacheClusterMessage: { ElastiCache: "CreateCacheCluster" },
  CreateCacheClusterResult: { ElastiCache: "CreateCacheCluster" },
  CreateCacheParameterGroupMessage: { ElastiCache: "CreateCacheParameterGroup" },
  CreateCacheParameterGroupResult: { ElastiCache: "CreateCacheParameterGroup" },
  CreateCacheSecurityGroupMessage: { ElastiCache: "CreateCacheSecurityGroup" },
  CreateCacheSecurityGroupResult: { ElastiCache: "CreateCacheSecurityGroup" },
  CreateCacheSubnetGroupMessage: { ElastiCache: "CreateCacheSubnetGroup" },
  CreateCacheSubnetGroupResult: { ElastiCache: "CreateCacheSubnetGroup" },
  CreateGlobalReplicationGroupMessage: { ElastiCache: "CreateGlobalReplicationGroup" },
  CreateGlobalReplicationGroupResult: { ElastiCache: "CreateGlobalReplicationGroup" },
  CreateReplicationGroupMessage: { ElastiCache: "CreateReplicationGroup" },
  CreateReplicationGroupResult: { ElastiCache: "CreateReplicationGroup" },
  CreateSnapshotMessage: { ElastiCache: "CreateSnapshot" },
  CreateUserMessage: { ElastiCache: "CreateUser" },
  User: { ElastiCache: "ModifyUser" },
  CreateUserGroupMessage: { ElastiCache: "CreateUserGroup" },
  UserGroup: { ElastiCache: "ModifyUserGroup" },
  DecreaseNodeGroupsInGlobalReplicationGroupMessage: {
    ElastiCache: "DecreaseNodeGroupsInGlobalReplicationGroup",
  },
  DecreaseNodeGroupsInGlobalReplicationGroupResult: {
    ElastiCache: "DecreaseNodeGroupsInGlobalReplicationGroup",
  },
  DecreaseReplicaCountMessage: { ElastiCache: "DecreaseReplicaCount" },
  DecreaseReplicaCountResult: { ElastiCache: "DecreaseReplicaCount" },
  DeleteCacheClusterMessage: { ElastiCache: "DeleteCacheCluster" },
  DeleteCacheClusterResult: { ElastiCache: "DeleteCacheCluster" },
  DeleteCacheParameterGroupMessage: { ElastiCache: "DeleteCacheParameterGroup" },
  DeleteCacheSecurityGroupMessage: { ElastiCache: "DeleteCacheSecurityGroup" },
  DeleteCacheSubnetGroupMessage: { ElastiCache: "DeleteCacheSubnetGroup" },
  DeleteGlobalReplicationGroupMessage: { ElastiCache: "DeleteGlobalReplicationGroup" },
  DeleteGlobalReplicationGroupResult: { ElastiCache: "DeleteGlobalReplicationGroup" },
  DeleteReplicationGroupMessage: { ElastiCache: "DeleteReplicationGroup" },
  DeleteReplicationGroupResult: { ElastiCache: "DeleteReplicationGroup" },
  DeleteSnapshotMessage: { ElastiCache: "DeleteSnapshot" },
  DeleteUserMessage: { ElastiCache: "DeleteUser" },
  DeleteUserGroupMessage: { ElastiCache: "DeleteUserGroup" },
  DescribeCacheClustersMessage: { ElastiCache: "DescribeCacheClusters" },
  CacheClusterMessage: { ElastiCache: "DescribeCacheClusters" },
  DescribeCacheEngineVersionsMessage: { ElastiCache: "DescribeCacheEngineVersions" },
  CacheEngineVersionMessage: { ElastiCache: "DescribeCacheEngineVersions" },
  DescribeCacheParameterGroupsMessage: { ElastiCache: "DescribeCacheParameterGroups" },
  CacheParameterGroupsMessage: { ElastiCache: "DescribeCacheParameterGroups" },
  DescribeCacheParametersMessage: { ElastiCache: "DescribeCacheParameters" },
  CacheParameterGroupDetails: { ElastiCache: "DescribeCacheParameters" },
  DescribeCacheSecurityGroupsMessage: { ElastiCache: "DescribeCacheSecurityGroups" },
  CacheSecurityGroupMessage: { ElastiCache: "DescribeCacheSecurityGroups" },
  DescribeCacheSubnetGroupsMessage: { ElastiCache: "DescribeCacheSubnetGroups" },
  CacheSubnetGroupMessage: { ElastiCache: "DescribeCacheSubnetGroups" },
  DescribeEngineDefaultParametersMessage: {
    ElastiCache: "DescribeEngineDefaultParameters",
    Neptune: "DescribeEngineDefaultParameters",
    RDS: "DescribeEngineDefaultParameters",
  },
  DescribeEngineDefaultParametersResult: {
    ElastiCache: "DescribeEngineDefaultParameters",
    Neptune: "DescribeEngineDefaultParameters",
    RDS: "DescribeEngineDefaultParameters",
  },
  DescribeGlobalReplicationGroupsMessage: { ElastiCache: "DescribeGlobalReplicationGroups" },
  DescribeGlobalReplicationGroupsResult: { ElastiCache: "DescribeGlobalReplicationGroups" },
  DescribeReplicationGroupsMessage: { ElastiCache: "DescribeReplicationGroups" },
  ReplicationGroupMessage: { ElastiCache: "DescribeReplicationGroups" },
  DescribeReservedCacheNodesMessage: { ElastiCache: "DescribeReservedCacheNodes" },
  ReservedCacheNodeMessage: { ElastiCache: "DescribeReservedCacheNodes" },
  DescribeReservedCacheNodesOfferingsMessage: {
    ElastiCache: "DescribeReservedCacheNodesOfferings",
  },
  ReservedCacheNodesOfferingMessage: { ElastiCache: "DescribeReservedCacheNodesOfferings" },
  DescribeServiceUpdatesMessage: { ElastiCache: "DescribeServiceUpdates" },
  ServiceUpdatesMessage: { ElastiCache: "DescribeServiceUpdates" },
  DescribeSnapshotsMessage: { ElastiCache: "DescribeSnapshots" },
  DescribeSnapshotsListMessage: { ElastiCache: "DescribeSnapshots" },
  DescribeUpdateActionsMessage: { ElastiCache: "DescribeUpdateActions" },
  UpdateActionsMessage: { ElastiCache: "DescribeUpdateActions" },
  DescribeUserGroupsMessage: { ElastiCache: "DescribeUserGroups" },
  DescribeUserGroupsResult: { ElastiCache: "DescribeUserGroups" },
  DescribeUsersMessage: { ElastiCache: "DescribeUsers" },
  DisassociateGlobalReplicationGroupMessage: { ElastiCache: "DisassociateGlobalReplicationGroup" },
  DisassociateGlobalReplicationGroupResult: { ElastiCache: "DisassociateGlobalReplicationGroup" },
  FailoverGlobalReplicationGroupMessage: { ElastiCache: "FailoverGlobalReplicationGroup" },
  FailoverGlobalReplicationGroupResult: { ElastiCache: "FailoverGlobalReplicationGroup" },
  IncreaseNodeGroupsInGlobalReplicationGroupMessage: {
    ElastiCache: "IncreaseNodeGroupsInGlobalReplicationGroup",
  },
  IncreaseNodeGroupsInGlobalReplicationGroupResult: {
    ElastiCache: "IncreaseNodeGroupsInGlobalReplicationGroup",
  },
  IncreaseReplicaCountMessage: { ElastiCache: "IncreaseReplicaCount" },
  IncreaseReplicaCountResult: { ElastiCache: "IncreaseReplicaCount" },
  ListAllowedNodeTypeModificationsMessage: { ElastiCache: "ListAllowedNodeTypeModifications" },
  AllowedNodeTypeModificationsMessage: { ElastiCache: "ListAllowedNodeTypeModifications" },
  ModifyCacheClusterMessage: { ElastiCache: "ModifyCacheCluster" },
  ModifyCacheClusterResult: { ElastiCache: "ModifyCacheCluster" },
  ModifyCacheParameterGroupMessage: { ElastiCache: "ModifyCacheParameterGroup" },
  CacheParameterGroupNameMessage: { ElastiCache: "ResetCacheParameterGroup" },
  ModifyCacheSubnetGroupMessage: { ElastiCache: "ModifyCacheSubnetGroup" },
  ModifyCacheSubnetGroupResult: { ElastiCache: "ModifyCacheSubnetGroup" },
  ModifyGlobalReplicationGroupMessage: { ElastiCache: "ModifyGlobalReplicationGroup" },
  ModifyGlobalReplicationGroupResult: { ElastiCache: "ModifyGlobalReplicationGroup" },
  ModifyReplicationGroupMessage: { ElastiCache: "ModifyReplicationGroup" },
  ModifyReplicationGroupResult: { ElastiCache: "ModifyReplicationGroup" },
  ModifyReplicationGroupShardConfigurationMessage: {
    ElastiCache: "ModifyReplicationGroupShardConfiguration",
  },
  ModifyReplicationGroupShardConfigurationResult: {
    ElastiCache: "ModifyReplicationGroupShardConfiguration",
  },
  ModifyUserMessage: { ElastiCache: "ModifyUser" },
  ModifyUserGroupMessage: { ElastiCache: "ModifyUserGroup" },
  PurchaseReservedCacheNodesOfferingMessage: { ElastiCache: "PurchaseReservedCacheNodesOffering" },
  PurchaseReservedCacheNodesOfferingResult: { ElastiCache: "PurchaseReservedCacheNodesOffering" },
  RebalanceSlotsInGlobalReplicationGroupMessage: {
    ElastiCache: "RebalanceSlotsInGlobalReplicationGroup",
  },
  RebalanceSlotsInGlobalReplicationGroupResult: {
    ElastiCache: "RebalanceSlotsInGlobalReplicationGroup",
  },
  RebootCacheClusterMessage: { ElastiCache: "RebootCacheCluster" },
  RebootCacheClusterResult: { ElastiCache: "RebootCacheCluster" },
  ResetCacheParameterGroupMessage: { ElastiCache: "ResetCacheParameterGroup" },
  RevokeCacheSecurityGroupIngressMessage: { ElastiCache: "RevokeCacheSecurityGroupIngress" },
  RevokeCacheSecurityGroupIngressResult: { ElastiCache: "RevokeCacheSecurityGroupIngress" },
  StartMigrationMessage: { ElastiCache: "StartMigration" },
  TestFailoverMessage: { ElastiCache: "TestFailover" },
  TestFailoverResult: { ElastiCache: "TestFailover" },
  AbortEnvironmentUpdateMessage: { ElasticBeanstalk: "AbortEnvironmentUpdate" },
  ApplyEnvironmentManagedActionResult: { ElasticBeanstalk: "ApplyEnvironmentManagedAction" },
  AssociateEnvironmentOperationsRoleMessage: {
    ElasticBeanstalk: "AssociateEnvironmentOperationsRole",
  },
  CheckDNSAvailabilityMessage: { ElasticBeanstalk: "CheckDNSAvailability" },
  CheckDNSAvailabilityResultMessage: { ElasticBeanstalk: "CheckDNSAvailability" },
  ComposeEnvironmentsMessage: { ElasticBeanstalk: "ComposeEnvironments" },
  EnvironmentDescriptionsMessage: { ElasticBeanstalk: "DescribeEnvironments" },
  CreateApplicationMessage: { ElasticBeanstalk: "CreateApplication" },
  ApplicationDescriptionMessage: { ElasticBeanstalk: "UpdateApplication" },
  CreateApplicationVersionMessage: { ElasticBeanstalk: "CreateApplicationVersion" },
  ApplicationVersionDescriptionMessage: { ElasticBeanstalk: "UpdateApplicationVersion" },
  CreateConfigurationTemplateMessage: { ElasticBeanstalk: "CreateConfigurationTemplate" },
  ConfigurationSettingsDescription: { ElasticBeanstalk: "UpdateConfigurationTemplate" },
  CreateEnvironmentMessage: { ElasticBeanstalk: "CreateEnvironment" },
  EnvironmentDescription: { ElasticBeanstalk: "UpdateEnvironment" },
  CreatePlatformVersionResult: { ElasticBeanstalk: "CreatePlatformVersion" },
  DeleteApplicationMessage: { ElasticBeanstalk: "DeleteApplication" },
  DeleteApplicationVersionMessage: { ElasticBeanstalk: "DeleteApplicationVersion" },
  DeleteConfigurationTemplateMessage: { ElasticBeanstalk: "DeleteConfigurationTemplate" },
  DeleteEnvironmentConfigurationMessage: { ElasticBeanstalk: "DeleteEnvironmentConfiguration" },
  DeletePlatformVersionResult: { ElasticBeanstalk: "DeletePlatformVersion" },
  DescribeApplicationVersionsMessage: { ElasticBeanstalk: "DescribeApplicationVersions" },
  ApplicationVersionDescriptionsMessage: { ElasticBeanstalk: "DescribeApplicationVersions" },
  DescribeApplicationsMessage: { ElasticBeanstalk: "DescribeApplications" },
  ApplicationDescriptionsMessage: { ElasticBeanstalk: "DescribeApplications" },
  DescribeConfigurationOptionsMessage: { ElasticBeanstalk: "DescribeConfigurationOptions" },
  ConfigurationOptionsDescription: { ElasticBeanstalk: "DescribeConfigurationOptions" },
  DescribeConfigurationSettingsMessage: { ElasticBeanstalk: "DescribeConfigurationSettings" },
  ConfigurationSettingsDescriptions: { ElasticBeanstalk: "DescribeConfigurationSettings" },
  DescribeEnvironmentHealthResult: { ElasticBeanstalk: "DescribeEnvironmentHealth" },
  DescribeEnvironmentManagedActionHistoryResult: {
    ElasticBeanstalk: "DescribeEnvironmentManagedActionHistory",
  },
  DescribeEnvironmentManagedActionsResult: {
    ElasticBeanstalk: "DescribeEnvironmentManagedActions",
  },
  DescribeEnvironmentResourcesMessage: { ElasticBeanstalk: "DescribeEnvironmentResources" },
  EnvironmentResourceDescriptionsMessage: { ElasticBeanstalk: "DescribeEnvironmentResources" },
  DescribeEnvironmentsMessage: { ElasticBeanstalk: "DescribeEnvironments" },
  EventDescriptionsMessage: { ElasticBeanstalk: "DescribeEvents" },
  DescribeInstancesHealthResult: { ElasticBeanstalk: "DescribeInstancesHealth" },
  DescribePlatformVersionResult: { ElasticBeanstalk: "DescribePlatformVersion" },
  DisassociateEnvironmentOperationsRoleMessage: {
    ElasticBeanstalk: "DisassociateEnvironmentOperationsRole",
  },
  ListPlatformBranchesResult: { ElasticBeanstalk: "ListPlatformBranches" },
  ListPlatformVersionsResult: { ElasticBeanstalk: "ListPlatformVersions" },
  ResourceTagsDescriptionMessage: { ElasticBeanstalk: "ListTagsForResource" },
  RebuildEnvironmentMessage: { ElasticBeanstalk: "RebuildEnvironment" },
  RequestEnvironmentInfoMessage: { ElasticBeanstalk: "RequestEnvironmentInfo" },
  RestartAppServerMessage: { ElasticBeanstalk: "RestartAppServer" },
  RetrieveEnvironmentInfoMessage: { ElasticBeanstalk: "RetrieveEnvironmentInfo" },
  RetrieveEnvironmentInfoResultMessage: { ElasticBeanstalk: "RetrieveEnvironmentInfo" },
  SwapEnvironmentCNAMEsMessage: { ElasticBeanstalk: "SwapEnvironmentCNAMEs" },
  TerminateEnvironmentMessage: { ElasticBeanstalk: "TerminateEnvironment" },
  UpdateApplicationMessage: { ElasticBeanstalk: "UpdateApplication" },
  UpdateApplicationResourceLifecycleMessage: {
    ElasticBeanstalk: "UpdateApplicationResourceLifecycle",
  },
  ApplicationResourceLifecycleDescriptionMessage: {
    ElasticBeanstalk: "UpdateApplicationResourceLifecycle",
  },
  UpdateApplicationVersionMessage: { ElasticBeanstalk: "UpdateApplicationVersion" },
  UpdateConfigurationTemplateMessage: { ElasticBeanstalk: "UpdateConfigurationTemplate" },
  UpdateEnvironmentMessage: { ElasticBeanstalk: "UpdateEnvironment" },
  UpdateTagsForResourceMessage: { ElasticBeanstalk: "UpdateTagsForResource" },
  ValidateConfigurationSettingsMessage: { ElasticBeanstalk: "ValidateConfigurationSettings" },
  ConfigurationSettingsValidationMessages: { ElasticBeanstalk: "ValidateConfigurationSettings" },
  CreateDeliveryStreamInput: { Firehose: "CreateDeliveryStream" },
  CreateDeliveryStreamOutput: { Firehose: "CreateDeliveryStream" },
  DeleteDeliveryStreamInput: { Firehose: "DeleteDeliveryStream" },
  DeleteDeliveryStreamOutput: { Firehose: "DeleteDeliveryStream" },
  DescribeDeliveryStreamInput: { Firehose: "DescribeDeliveryStream" },
  DescribeDeliveryStreamOutput: { Firehose: "DescribeDeliveryStream" },
  ListDeliveryStreamsInput: { Firehose: "ListDeliveryStreams" },
  ListDeliveryStreamsOutput: { Firehose: "ListDeliveryStreams" },
  ListTagsForDeliveryStreamInput: { Firehose: "ListTagsForDeliveryStream" },
  ListTagsForDeliveryStreamOutput: { Firehose: "ListTagsForDeliveryStream" },
  PutRecordInput: { Firehose: "PutRecord", Kinesis: "PutRecord" },
  PutRecordOutput: { Firehose: "PutRecord", Kinesis: "PutRecord" },
  PutRecordBatchInput: { Firehose: "PutRecordBatch" },
  PutRecordBatchOutput: { Firehose: "PutRecordBatch" },
  StartDeliveryStreamEncryptionInput: { Firehose: "StartDeliveryStreamEncryption" },
  StartDeliveryStreamEncryptionOutput: { Firehose: "StartDeliveryStreamEncryption" },
  StopDeliveryStreamEncryptionInput: { Firehose: "StopDeliveryStreamEncryption" },
  StopDeliveryStreamEncryptionOutput: { Firehose: "StopDeliveryStreamEncryption" },
  TagDeliveryStreamInput: { Firehose: "TagDeliveryStream" },
  TagDeliveryStreamOutput: { Firehose: "TagDeliveryStream" },
  UntagDeliveryStreamInput: { Firehose: "UntagDeliveryStream" },
  UntagDeliveryStreamOutput: { Firehose: "UntagDeliveryStream" },
  UpdateDestinationInput: { Firehose: "UpdateDestination" },
  UpdateDestinationOutput: { Firehose: "UpdateDestination" },
  BatchCreateVariableResult: { FraudDetector: "BatchCreateVariable" },
  BatchGetVariableResult: { FraudDetector: "BatchGetVariable" },
  CancelBatchImportJobResult: { FraudDetector: "CancelBatchImportJob" },
  CancelBatchPredictionJobResult: { FraudDetector: "CancelBatchPredictionJob" },
  CreateBatchImportJobResult: { FraudDetector: "CreateBatchImportJob" },
  CreateBatchPredictionJobResult: { FraudDetector: "CreateBatchPredictionJob" },
  CreateDetectorVersionResult: { FraudDetector: "CreateDetectorVersion" },
  CreateListResult: { FraudDetector: "CreateList" },
  CreateModelResult: { FraudDetector: "CreateModel" },
  CreateModelVersionResult: { FraudDetector: "CreateModelVersion" },
  CreateRuleResult: { FraudDetector: "CreateRule" },
  CreateVariableResult: { FraudDetector: "CreateVariable" },
  DeleteBatchImportJobResult: { FraudDetector: "DeleteBatchImportJob" },
  DeleteBatchPredictionJobResult: { FraudDetector: "DeleteBatchPredictionJob" },
  DeleteDetectorResult: { FraudDetector: "DeleteDetector" },
  DeleteDetectorVersionResult: { FraudDetector: "DeleteDetectorVersion" },
  DeleteEntityTypeResult: { FraudDetector: "DeleteEntityType" },
  DeleteEventResult: { FraudDetector: "DeleteEvent" },
  DeleteEventTypeResult: { FraudDetector: "DeleteEventType" },
  DeleteEventsByEventTypeResult: { FraudDetector: "DeleteEventsByEventType" },
  DeleteExternalModelResult: { FraudDetector: "DeleteExternalModel" },
  DeleteLabelResult: { FraudDetector: "DeleteLabel" },
  DeleteListResult: { FraudDetector: "DeleteList" },
  DeleteModelResult: { FraudDetector: "DeleteModel" },
  DeleteModelVersionResult: { FraudDetector: "DeleteModelVersion" },
  DeleteOutcomeResult: { FraudDetector: "DeleteOutcome" },
  DeleteRuleResult: { FraudDetector: "DeleteRule" },
  DeleteVariableResult: { FraudDetector: "DeleteVariable" },
  DescribeDetectorResult: { FraudDetector: "DescribeDetector" },
  DescribeModelVersionsResult: { FraudDetector: "DescribeModelVersions" },
  GetBatchImportJobsResult: { FraudDetector: "GetBatchImportJobs" },
  GetBatchPredictionJobsResult: { FraudDetector: "GetBatchPredictionJobs" },
  GetDeleteEventsByEventTypeStatusResult: { FraudDetector: "GetDeleteEventsByEventTypeStatus" },
  GetDetectorVersionResult: { FraudDetector: "GetDetectorVersion" },
  GetDetectorsResult: { FraudDetector: "GetDetectors" },
  GetEntityTypesResult: { FraudDetector: "GetEntityTypes" },
  GetEventResult: { FraudDetector: "GetEvent" },
  GetEventPredictionResult: { FraudDetector: "GetEventPrediction" },
  GetEventPredictionMetadataResult: { FraudDetector: "GetEventPredictionMetadata" },
  GetEventTypesResult: { FraudDetector: "GetEventTypes" },
  GetExternalModelsResult: { FraudDetector: "GetExternalModels" },
  GetLabelsResult: { FraudDetector: "GetLabels" },
  GetListElementsResult: { FraudDetector: "GetListElements" },
  GetListsMetadataResult: { FraudDetector: "GetListsMetadata" },
  GetModelVersionResult: { FraudDetector: "GetModelVersion" },
  GetModelsResult: { FraudDetector: "GetModels" },
  GetOutcomesResult: { FraudDetector: "GetOutcomes" },
  GetRulesResult: { FraudDetector: "GetRules" },
  GetVariablesResult: { FraudDetector: "GetVariables" },
  ListEventPredictionsResult: { FraudDetector: "ListEventPredictions" },
  PutDetectorResult: { FraudDetector: "PutDetector" },
  PutEntityTypeResult: { FraudDetector: "PutEntityType" },
  PutEventTypeResult: { FraudDetector: "PutEventType" },
  PutExternalModelResult: { FraudDetector: "PutExternalModel" },
  PutKMSEncryptionKeyResult: { FraudDetector: "PutKMSEncryptionKey" },
  PutLabelResult: { FraudDetector: "PutLabel" },
  PutOutcomeResult: { FraudDetector: "PutOutcome" },
  SendEventResult: { FraudDetector: "SendEvent" },
  UpdateDetectorVersionResult: { FraudDetector: "UpdateDetectorVersion" },
  UpdateDetectorVersionMetadataResult: { FraudDetector: "UpdateDetectorVersionMetadata" },
  UpdateDetectorVersionStatusResult: { FraudDetector: "UpdateDetectorVersionStatus" },
  UpdateEventLabelResult: { FraudDetector: "UpdateEventLabel" },
  UpdateListResult: { FraudDetector: "UpdateList" },
  UpdateModelResult: { FraudDetector: "UpdateModel" },
  UpdateModelVersionResult: { FraudDetector: "UpdateModelVersion" },
  UpdateModelVersionStatusResult: { FraudDetector: "UpdateModelVersionStatus" },
  UpdateRuleMetadataResult: { FraudDetector: "UpdateRuleMetadata" },
  UpdateRuleVersionResult: { FraudDetector: "UpdateRuleVersion" },
  UpdateVariableResult: { FraudDetector: "UpdateVariable" },
  AcceptMatchInput: { GameLift: "AcceptMatch" },
  AcceptMatchOutput: { GameLift: "AcceptMatch" },
  ClaimGameServerInput: { GameLift: "ClaimGameServer" },
  ClaimGameServerOutput: { GameLift: "ClaimGameServer" },
  CreateAliasInput: { GameLift: "CreateAlias", PaymentCryptography: "CreateAlias" },
  CreateAliasOutput: { GameLift: "CreateAlias", PaymentCryptography: "CreateAlias" },
  CreateBuildInput: { GameLift: "CreateBuild" },
  CreateBuildOutput: { GameLift: "CreateBuild" },
  CreateFleetInput: { GameLift: "CreateFleet" },
  CreateFleetOutput: { GameLift: "CreateFleet" },
  CreateFleetLocationsInput: { GameLift: "CreateFleetLocations" },
  CreateFleetLocationsOutput: { GameLift: "CreateFleetLocations" },
  CreateGameServerGroupInput: { GameLift: "CreateGameServerGroup" },
  CreateGameServerGroupOutput: { GameLift: "CreateGameServerGroup" },
  CreateGameSessionInput: { GameLift: "CreateGameSession" },
  CreateGameSessionOutput: { GameLift: "CreateGameSession" },
  CreateGameSessionQueueInput: { GameLift: "CreateGameSessionQueue" },
  CreateGameSessionQueueOutput: { GameLift: "CreateGameSessionQueue" },
  CreateLocationInput: { GameLift: "CreateLocation" },
  CreateLocationOutput: { GameLift: "CreateLocation" },
  CreateMatchmakingConfigurationInput: { GameLift: "CreateMatchmakingConfiguration" },
  CreateMatchmakingConfigurationOutput: { GameLift: "CreateMatchmakingConfiguration" },
  CreateMatchmakingRuleSetInput: { GameLift: "CreateMatchmakingRuleSet" },
  CreateMatchmakingRuleSetOutput: { GameLift: "CreateMatchmakingRuleSet" },
  CreatePlayerSessionInput: { GameLift: "CreatePlayerSession" },
  CreatePlayerSessionOutput: { GameLift: "CreatePlayerSession" },
  CreatePlayerSessionsInput: { GameLift: "CreatePlayerSessions" },
  CreatePlayerSessionsOutput: { GameLift: "CreatePlayerSessions" },
  CreateScriptInput: { GameLift: "CreateScript" },
  CreateScriptOutput: { GameLift: "CreateScript" },
  CreateVpcPeeringAuthorizationInput: { GameLift: "CreateVpcPeeringAuthorization" },
  CreateVpcPeeringAuthorizationOutput: { GameLift: "CreateVpcPeeringAuthorization" },
  CreateVpcPeeringConnectionInput: { GameLift: "CreateVpcPeeringConnection" },
  CreateVpcPeeringConnectionOutput: { GameLift: "CreateVpcPeeringConnection" },
  DeleteAliasInput: { GameLift: "DeleteAlias", PaymentCryptography: "DeleteAlias" },
  DeleteBuildInput: { GameLift: "DeleteBuild" },
  DeleteFleetInput: { GameLift: "DeleteFleet" },
  DeleteFleetLocationsInput: { GameLift: "DeleteFleetLocations" },
  DeleteFleetLocationsOutput: { GameLift: "DeleteFleetLocations" },
  DeleteGameServerGroupInput: { GameLift: "DeleteGameServerGroup" },
  DeleteGameServerGroupOutput: { GameLift: "DeleteGameServerGroup" },
  DeleteGameSessionQueueInput: { GameLift: "DeleteGameSessionQueue" },
  DeleteGameSessionQueueOutput: { GameLift: "DeleteGameSessionQueue" },
  DeleteLocationInput: { GameLift: "DeleteLocation" },
  DeleteLocationOutput: { GameLift: "DeleteLocation" },
  DeleteMatchmakingConfigurationInput: { GameLift: "DeleteMatchmakingConfiguration" },
  DeleteMatchmakingConfigurationOutput: { GameLift: "DeleteMatchmakingConfiguration" },
  DeleteMatchmakingRuleSetInput: { GameLift: "DeleteMatchmakingRuleSet" },
  DeleteMatchmakingRuleSetOutput: { GameLift: "DeleteMatchmakingRuleSet" },
  DeleteScalingPolicyInput: { GameLift: "DeleteScalingPolicy" },
  DeleteScriptInput: { GameLift: "DeleteScript" },
  DeleteVpcPeeringAuthorizationInput: { GameLift: "DeleteVpcPeeringAuthorization" },
  DeleteVpcPeeringAuthorizationOutput: { GameLift: "DeleteVpcPeeringAuthorization" },
  DeleteVpcPeeringConnectionInput: { GameLift: "DeleteVpcPeeringConnection" },
  DeleteVpcPeeringConnectionOutput: { GameLift: "DeleteVpcPeeringConnection" },
  DeregisterComputeInput: { GameLift: "DeregisterCompute" },
  DeregisterComputeOutput: { GameLift: "DeregisterCompute" },
  DeregisterGameServerInput: { GameLift: "DeregisterGameServer" },
  DescribeAliasInput: { GameLift: "DescribeAlias" },
  DescribeAliasOutput: { GameLift: "DescribeAlias" },
  DescribeBuildInput: { GameLift: "DescribeBuild" },
  DescribeBuildOutput: { GameLift: "DescribeBuild" },
  DescribeComputeInput: { GameLift: "DescribeCompute" },
  DescribeComputeOutput: { GameLift: "DescribeCompute" },
  DescribeEC2InstanceLimitsInput: { GameLift: "DescribeEC2InstanceLimits" },
  DescribeEC2InstanceLimitsOutput: { GameLift: "DescribeEC2InstanceLimits" },
  DescribeFleetAttributesInput: { GameLift: "DescribeFleetAttributes" },
  DescribeFleetAttributesOutput: { GameLift: "DescribeFleetAttributes" },
  DescribeFleetCapacityInput: { GameLift: "DescribeFleetCapacity" },
  DescribeFleetCapacityOutput: { GameLift: "DescribeFleetCapacity" },
  DescribeFleetEventsInput: { GameLift: "DescribeFleetEvents" },
  DescribeFleetEventsOutput: { GameLift: "DescribeFleetEvents" },
  DescribeFleetLocationAttributesInput: { GameLift: "DescribeFleetLocationAttributes" },
  DescribeFleetLocationAttributesOutput: { GameLift: "DescribeFleetLocationAttributes" },
  DescribeFleetLocationCapacityInput: { GameLift: "DescribeFleetLocationCapacity" },
  DescribeFleetLocationCapacityOutput: { GameLift: "DescribeFleetLocationCapacity" },
  DescribeFleetLocationUtilizationInput: { GameLift: "DescribeFleetLocationUtilization" },
  DescribeFleetLocationUtilizationOutput: { GameLift: "DescribeFleetLocationUtilization" },
  DescribeFleetPortSettingsInput: { GameLift: "DescribeFleetPortSettings" },
  DescribeFleetPortSettingsOutput: { GameLift: "DescribeFleetPortSettings" },
  DescribeFleetUtilizationInput: { GameLift: "DescribeFleetUtilization" },
  DescribeFleetUtilizationOutput: { GameLift: "DescribeFleetUtilization" },
  DescribeGameServerInput: { GameLift: "DescribeGameServer" },
  DescribeGameServerOutput: { GameLift: "DescribeGameServer" },
  DescribeGameServerGroupInput: { GameLift: "DescribeGameServerGroup" },
  DescribeGameServerGroupOutput: { GameLift: "DescribeGameServerGroup" },
  DescribeGameServerInstancesInput: { GameLift: "DescribeGameServerInstances" },
  DescribeGameServerInstancesOutput: { GameLift: "DescribeGameServerInstances" },
  DescribeGameSessionDetailsInput: { GameLift: "DescribeGameSessionDetails" },
  DescribeGameSessionDetailsOutput: { GameLift: "DescribeGameSessionDetails" },
  DescribeGameSessionPlacementInput: { GameLift: "DescribeGameSessionPlacement" },
  DescribeGameSessionPlacementOutput: { GameLift: "DescribeGameSessionPlacement" },
  DescribeGameSessionQueuesInput: { GameLift: "DescribeGameSessionQueues" },
  DescribeGameSessionQueuesOutput: { GameLift: "DescribeGameSessionQueues" },
  DescribeGameSessionsInput: { GameLift: "DescribeGameSessions" },
  DescribeGameSessionsOutput: { GameLift: "DescribeGameSessions" },
  DescribeInstancesInput: { GameLift: "DescribeInstances" },
  DescribeInstancesOutput: { GameLift: "DescribeInstances" },
  DescribeMatchmakingInput: { GameLift: "DescribeMatchmaking" },
  DescribeMatchmakingOutput: { GameLift: "DescribeMatchmaking" },
  DescribeMatchmakingConfigurationsInput: { GameLift: "DescribeMatchmakingConfigurations" },
  DescribeMatchmakingConfigurationsOutput: { GameLift: "DescribeMatchmakingConfigurations" },
  DescribeMatchmakingRuleSetsInput: { GameLift: "DescribeMatchmakingRuleSets" },
  DescribeMatchmakingRuleSetsOutput: { GameLift: "DescribeMatchmakingRuleSets" },
  DescribePlayerSessionsInput: { GameLift: "DescribePlayerSessions" },
  DescribePlayerSessionsOutput: { GameLift: "DescribePlayerSessions" },
  DescribeRuntimeConfigurationInput: { GameLift: "DescribeRuntimeConfiguration" },
  DescribeRuntimeConfigurationOutput: { GameLift: "DescribeRuntimeConfiguration" },
  DescribeScalingPoliciesInput: { GameLift: "DescribeScalingPolicies" },
  DescribeScalingPoliciesOutput: { GameLift: "DescribeScalingPolicies" },
  DescribeScriptInput: { GameLift: "DescribeScript" },
  DescribeScriptOutput: { GameLift: "DescribeScript" },
  DescribeVpcPeeringAuthorizationsInput: { GameLift: "DescribeVpcPeeringAuthorizations" },
  DescribeVpcPeeringAuthorizationsOutput: { GameLift: "DescribeVpcPeeringAuthorizations" },
  DescribeVpcPeeringConnectionsInput: { GameLift: "DescribeVpcPeeringConnections" },
  DescribeVpcPeeringConnectionsOutput: { GameLift: "DescribeVpcPeeringConnections" },
  GetComputeAccessInput: { GameLift: "GetComputeAccess" },
  GetComputeAccessOutput: { GameLift: "GetComputeAccess" },
  GetComputeAuthTokenInput: { GameLift: "GetComputeAuthToken" },
  GetComputeAuthTokenOutput: { GameLift: "GetComputeAuthToken" },
  GetGameSessionLogUrlInput: { GameLift: "GetGameSessionLogUrl" },
  GetGameSessionLogUrlOutput: { GameLift: "GetGameSessionLogUrl" },
  GetInstanceAccessInput: { GameLift: "GetInstanceAccess" },
  GetInstanceAccessOutput: { GameLift: "GetInstanceAccess" },
  ListAliasesInput: { GameLift: "ListAliases", PaymentCryptography: "ListAliases" },
  ListAliasesOutput: { GameLift: "ListAliases", PaymentCryptography: "ListAliases" },
  ListComputeInput: { GameLift: "ListCompute" },
  ListComputeOutput: { GameLift: "ListCompute" },
  ListFleetsInput: { GameLift: "ListFleets" },
  ListFleetsOutput: { GameLift: "ListFleets" },
  ListGameServerGroupsInput: { GameLift: "ListGameServerGroups" },
  ListGameServerGroupsOutput: { GameLift: "ListGameServerGroups" },
  ListGameServersInput: { GameLift: "ListGameServers" },
  ListGameServersOutput: { GameLift: "ListGameServers" },
  ListLocationsInput: { GameLift: "ListLocations" },
  ListLocationsOutput: { GameLift: "ListLocations" },
  ListScriptsInput: { GameLift: "ListScripts" },
  ListScriptsOutput: { GameLift: "ListScripts" },
  PutScalingPolicyInput: { GameLift: "PutScalingPolicy" },
  PutScalingPolicyOutput: { GameLift: "PutScalingPolicy" },
  RegisterComputeInput: { GameLift: "RegisterCompute" },
  RegisterComputeOutput: { GameLift: "RegisterCompute" },
  RegisterGameServerInput: { GameLift: "RegisterGameServer" },
  RegisterGameServerOutput: { GameLift: "RegisterGameServer" },
  RequestUploadCredentialsInput: { GameLift: "RequestUploadCredentials" },
  RequestUploadCredentialsOutput: { GameLift: "RequestUploadCredentials" },
  ResolveAliasInput: { GameLift: "ResolveAlias" },
  ResolveAliasOutput: { GameLift: "ResolveAlias" },
  ResumeGameServerGroupInput: { GameLift: "ResumeGameServerGroup" },
  ResumeGameServerGroupOutput: { GameLift: "ResumeGameServerGroup" },
  SearchGameSessionsInput: { GameLift: "SearchGameSessions" },
  SearchGameSessionsOutput: { GameLift: "SearchGameSessions" },
  StartFleetActionsInput: { GameLift: "StartFleetActions" },
  StartFleetActionsOutput: { GameLift: "StartFleetActions" },
  StartGameSessionPlacementInput: { GameLift: "StartGameSessionPlacement" },
  StartGameSessionPlacementOutput: { GameLift: "StartGameSessionPlacement" },
  StartMatchBackfillInput: { GameLift: "StartMatchBackfill" },
  StartMatchBackfillOutput: { GameLift: "StartMatchBackfill" },
  StartMatchmakingInput: { GameLift: "StartMatchmaking" },
  StartMatchmakingOutput: { GameLift: "StartMatchmaking" },
  StopFleetActionsInput: { GameLift: "StopFleetActions" },
  StopFleetActionsOutput: { GameLift: "StopFleetActions" },
  StopGameSessionPlacementInput: { GameLift: "StopGameSessionPlacement" },
  StopGameSessionPlacementOutput: { GameLift: "StopGameSessionPlacement" },
  StopMatchmakingInput: { GameLift: "StopMatchmaking" },
  StopMatchmakingOutput: { GameLift: "StopMatchmaking" },
  SuspendGameServerGroupInput: { GameLift: "SuspendGameServerGroup" },
  SuspendGameServerGroupOutput: { GameLift: "SuspendGameServerGroup" },
  UpdateAliasInput: { GameLift: "UpdateAlias", PaymentCryptography: "UpdateAlias" },
  UpdateAliasOutput: { GameLift: "UpdateAlias", PaymentCryptography: "UpdateAlias" },
  UpdateBuildInput: { GameLift: "UpdateBuild" },
  UpdateBuildOutput: { GameLift: "UpdateBuild" },
  UpdateFleetAttributesInput: { GameLift: "UpdateFleetAttributes" },
  UpdateFleetAttributesOutput: { GameLift: "UpdateFleetAttributes" },
  UpdateFleetCapacityInput: { GameLift: "UpdateFleetCapacity" },
  UpdateFleetCapacityOutput: { GameLift: "UpdateFleetCapacity" },
  UpdateFleetPortSettingsInput: { GameLift: "UpdateFleetPortSettings" },
  UpdateFleetPortSettingsOutput: { GameLift: "UpdateFleetPortSettings" },
  UpdateGameServerInput: { GameLift: "UpdateGameServer" },
  UpdateGameServerOutput: { GameLift: "UpdateGameServer" },
  UpdateGameServerGroupInput: { GameLift: "UpdateGameServerGroup" },
  UpdateGameServerGroupOutput: { GameLift: "UpdateGameServerGroup" },
  UpdateGameSessionInput: { GameLift: "UpdateGameSession" },
  UpdateGameSessionOutput: { GameLift: "UpdateGameSession" },
  UpdateGameSessionQueueInput: { GameLift: "UpdateGameSessionQueue" },
  UpdateGameSessionQueueOutput: { GameLift: "UpdateGameSessionQueue" },
  UpdateMatchmakingConfigurationInput: { GameLift: "UpdateMatchmakingConfiguration" },
  UpdateMatchmakingConfigurationOutput: { GameLift: "UpdateMatchmakingConfiguration" },
  UpdateRuntimeConfigurationInput: { GameLift: "UpdateRuntimeConfiguration" },
  UpdateRuntimeConfigurationOutput: { GameLift: "UpdateRuntimeConfiguration" },
  UpdateScriptInput: { GameLift: "UpdateScript" },
  UpdateScriptOutput: { GameLift: "UpdateScript" },
  ValidateMatchmakingRuleSetInput: { GameLift: "ValidateMatchmakingRuleSet" },
  ValidateMatchmakingRuleSetOutput: { GameLift: "ValidateMatchmakingRuleSet" },
  CreateGameResult: { GameSparks: "CreateGame" },
  CreateStageResult: { GameSparks: "CreateStage" },
  DeleteGameResult: { GameSparks: "DeleteGame" },
  DeleteStageResult: { GameSparks: "DeleteStage" },
  DisconnectPlayerResult: { GameSparks: "DisconnectPlayer" },
  ExportSnapshotResult: { GameSparks: "ExportSnapshot", Lightsail: "ExportSnapshot" },
  GetExtensionResult: { GameSparks: "GetExtension" },
  GetExtensionVersionResult: { GameSparks: "GetExtensionVersion" },
  GetGameResult: { GameSparks: "GetGame" },
  GetGameConfigurationResult: { GameSparks: "GetGameConfiguration" },
  GetGeneratedCodeJobResult: { GameSparks: "GetGeneratedCodeJob" },
  GetPlayerConnectionStatusResult: { GameSparks: "GetPlayerConnectionStatus" },
  GetSnapshotResult: { GameSparks: "GetSnapshot" },
  GetStageResult: { GameSparks: "GetStage" },
  GetStageDeploymentResult: { GameSparks: "GetStageDeployment" },
  ImportGameConfigurationResult: { GameSparks: "ImportGameConfiguration" },
  ListExtensionVersionsResult: { GameSparks: "ListExtensionVersions" },
  ListExtensionsResult: { GameSparks: "ListExtensions" },
  ListGamesResult: { GameSparks: "ListGames" },
  ListGeneratedCodeJobsResult: { GameSparks: "ListGeneratedCodeJobs" },
  ListSnapshotsResult: { GameSparks: "ListSnapshots" },
  ListStageDeploymentsResult: { GameSparks: "ListStageDeployments" },
  ListStagesResult: { GameSparks: "ListStages" },
  StartGeneratedCodeJobResult: { GameSparks: "StartGeneratedCodeJob" },
  StartStageDeploymentResult: { GameSparks: "StartStageDeployment" },
  UpdateGameResult: { GameSparks: "UpdateGame" },
  UpdateGameConfigurationResult: { GameSparks: "UpdateGameConfiguration" },
  UpdateSnapshotResult: { GameSparks: "UpdateSnapshot" },
  UpdateStageResult: { GameSparks: "UpdateStage" },
  AbortMultipartUploadInput: { Glacier: "AbortMultipartUpload" },
  AbortVaultLockInput: { Glacier: "AbortVaultLock" },
  AddTagsToVaultInput: { Glacier: "AddTagsToVault" },
  CompleteMultipartUploadInput: { Glacier: "CompleteMultipartUpload" },
  ArchiveCreationOutput: { Glacier: "UploadArchive" },
  CompleteVaultLockInput: { Glacier: "CompleteVaultLock" },
  CreateVaultInput: { Glacier: "CreateVault" },
  CreateVaultOutput: { Glacier: "CreateVault" },
  DeleteArchiveInput: { Glacier: "DeleteArchive" },
  DeleteVaultInput: { Glacier: "DeleteVault" },
  DeleteVaultAccessPolicyInput: { Glacier: "DeleteVaultAccessPolicy" },
  DeleteVaultNotificationsInput: { Glacier: "DeleteVaultNotifications" },
  DescribeJobInput: { Glacier: "DescribeJob" },
  GlacierJobDescription: { Glacier: "DescribeJob" },
  DescribeVaultInput: { Glacier: "DescribeVault" },
  DescribeVaultOutput: { Glacier: "DescribeVault" },
  GetDataRetrievalPolicyInput: { Glacier: "GetDataRetrievalPolicy" },
  GetDataRetrievalPolicyOutput: { Glacier: "GetDataRetrievalPolicy" },
  GetJobOutputInput: { Glacier: "GetJobOutput" },
  GetJobOutputOutput: { Glacier: "GetJobOutput" },
  GetVaultAccessPolicyInput: { Glacier: "GetVaultAccessPolicy" },
  GetVaultAccessPolicyOutput: { Glacier: "GetVaultAccessPolicy" },
  GetVaultLockInput: { Glacier: "GetVaultLock" },
  GetVaultLockOutput: { Glacier: "GetVaultLock" },
  GetVaultNotificationsInput: { Glacier: "GetVaultNotifications" },
  GetVaultNotificationsOutput: { Glacier: "GetVaultNotifications" },
  InitiateJobInput: { Glacier: "InitiateJob" },
  InitiateJobOutput: { Glacier: "InitiateJob" },
  InitiateMultipartUploadInput: { Glacier: "InitiateMultipartUpload" },
  InitiateMultipartUploadOutput: { Glacier: "InitiateMultipartUpload" },
  InitiateVaultLockInput: { Glacier: "InitiateVaultLock" },
  InitiateVaultLockOutput: { Glacier: "InitiateVaultLock" },
  ListJobsInput: { Glacier: "ListJobs" },
  ListJobsOutput: { Glacier: "ListJobs" },
  ListMultipartUploadsInput: { Glacier: "ListMultipartUploads" },
  ListMultipartUploadsOutput: { Glacier: "ListMultipartUploads", S3: "ListMultipartUploads" },
  ListPartsInput: { Glacier: "ListParts" },
  ListPartsOutput: { Glacier: "ListParts", S3: "ListParts" },
  ListProvisionedCapacityInput: { Glacier: "ListProvisionedCapacity" },
  ListProvisionedCapacityOutput: { Glacier: "ListProvisionedCapacity" },
  ListTagsForVaultInput: { Glacier: "ListTagsForVault" },
  ListTagsForVaultOutput: { Glacier: "ListTagsForVault" },
  ListVaultsInput: { Glacier: "ListVaults" },
  ListVaultsOutput: { Glacier: "ListVaults" },
  PurchaseProvisionedCapacityInput: { Glacier: "PurchaseProvisionedCapacity" },
  PurchaseProvisionedCapacityOutput: { Glacier: "PurchaseProvisionedCapacity" },
  RemoveTagsFromVaultInput: { Glacier: "RemoveTagsFromVault" },
  SetDataRetrievalPolicyInput: { Glacier: "SetDataRetrievalPolicy" },
  SetVaultAccessPolicyInput: { Glacier: "SetVaultAccessPolicy" },
  SetVaultNotificationsInput: { Glacier: "SetVaultNotifications" },
  UploadArchiveInput: { Glacier: "UploadArchive" },
  UploadMultipartPartInput: { Glacier: "UploadMultipartPart" },
  UploadMultipartPartOutput: { Glacier: "UploadMultipartPart" },
  CheckSchemaVersionValidityInput: { Glue: "CheckSchemaVersionValidity" },
  CreateRegistryInput: { Glue: "CreateRegistry" },
  CreateSchemaInput: { Glue: "CreateSchema" },
  DeleteRegistryInput: { Glue: "DeleteRegistry" },
  DeleteSchemaInput: { Glue: "DeleteSchema" },
  DeleteSchemaVersionsInput: { Glue: "DeleteSchemaVersions" },
  GetRegistryInput: { Glue: "GetRegistry" },
  GetSchemaByDefinitionInput: { Glue: "GetSchemaByDefinition" },
  GetSchemaVersionInput: { Glue: "GetSchemaVersion" },
  GetSchemaVersionsDiffInput: { Glue: "GetSchemaVersionsDiff" },
  ListRegistriesInput: { Glue: "ListRegistries" },
  ListSchemaVersionsInput: { Glue: "ListSchemaVersions" },
  PutSchemaVersionMetadataInput: { Glue: "PutSchemaVersionMetadata" },
  QuerySchemaVersionMetadataInput: { Glue: "QuerySchemaVersionMetadata" },
  RegisterSchemaVersionInput: { Glue: "RegisterSchemaVersion" },
  RemoveSchemaVersionMetadataInput: { Glue: "RemoveSchemaVersionMetadata" },
  UpdateRegistryInput: { Glue: "UpdateRegistry" },
  UpdateSchemaInput: { Glue: "UpdateSchema" },
  ContactIdResponse: { GroundStation: "ReserveContact" },
  ConfigIdResponse: { GroundStation: "UpdateConfig" },
  DataflowEndpointGroupIdResponse: { GroundStation: "DeleteDataflowEndpointGroup" },
  EphemerisIdResponse: { GroundStation: "UpdateEphemeris" },
  MissionProfileIdResponse: { GroundStation: "UpdateMissionProfile" },
  BatchCreateTableRowsResult: { Honeycode: "BatchCreateTableRows" },
  BatchDeleteTableRowsResult: { Honeycode: "BatchDeleteTableRows" },
  BatchUpdateTableRowsResult: { Honeycode: "BatchUpdateTableRows" },
  BatchUpsertTableRowsResult: { Honeycode: "BatchUpsertTableRows" },
  DescribeTableDataImportJobResult: { Honeycode: "DescribeTableDataImportJob" },
  GetScreenDataResult: { Honeycode: "GetScreenData" },
  InvokeScreenAutomationResult: { Honeycode: "InvokeScreenAutomation" },
  ListTableColumnsResult: { Honeycode: "ListTableColumns" },
  ListTableRowsResult: { Honeycode: "ListTableRows" },
  ListTablesResult: { Honeycode: "ListTables" },
  QueryTableRowsResult: { Honeycode: "QueryTableRows" },
  StartTableDataImportJobResult: { Honeycode: "StartTableDataImportJob" },
  GetContextKeysForPolicyResponse: { IAM: "GetContextKeysForPrincipalPolicy" },
  SimulatePolicyResponse: { IAM: "SimulatePrincipalPolicy" },
  CreateMonitorInput: { InternetMonitor: "CreateMonitor" },
  CreateMonitorOutput: { InternetMonitor: "CreateMonitor" },
  DeleteMonitorInput: { InternetMonitor: "DeleteMonitor" },
  DeleteMonitorOutput: { InternetMonitor: "DeleteMonitor" },
  GetHealthEventInput: { InternetMonitor: "GetHealthEvent" },
  GetHealthEventOutput: { InternetMonitor: "GetHealthEvent" },
  GetMonitorInput: { InternetMonitor: "GetMonitor" },
  GetMonitorOutput: { InternetMonitor: "GetMonitor" },
  ListHealthEventsInput: { InternetMonitor: "ListHealthEvents" },
  ListHealthEventsOutput: { InternetMonitor: "ListHealthEvents" },
  ListMonitorsInput: { InternetMonitor: "ListMonitors" },
  ListMonitorsOutput: { InternetMonitor: "ListMonitors" },
  UpdateMonitorInput: { InternetMonitor: "UpdateMonitor" },
  UpdateMonitorOutput: { InternetMonitor: "UpdateMonitor" },
  ListGrantsResponse: { KMS: "ListRetirableGrants" },
  QueryResult: { Kendra: "Query" },
  RetrieveResult: { Kendra: "Retrieve" },
  RescoreResult: { KendraRanking: "Rescore" },
  AddTagsToStreamInput: { Kinesis: "AddTagsToStream" },
  CreateStreamInput: { Kinesis: "CreateStream", KinesisVideo: "CreateStream" },
  DecreaseStreamRetentionPeriodInput: { Kinesis: "DecreaseStreamRetentionPeriod" },
  DeleteStreamInput: { Kinesis: "DeleteStream", KinesisVideo: "DeleteStream" },
  DeregisterStreamConsumerInput: { Kinesis: "DeregisterStreamConsumer" },
  DescribeStreamConsumerInput: { Kinesis: "DescribeStreamConsumer" },
  DescribeStreamConsumerOutput: { Kinesis: "DescribeStreamConsumer" },
  DescribeStreamSummaryInput: { Kinesis: "DescribeStreamSummary" },
  DescribeStreamSummaryOutput: { Kinesis: "DescribeStreamSummary" },
  DisableEnhancedMonitoringInput: { Kinesis: "DisableEnhancedMonitoring" },
  EnhancedMonitoringOutput: { Kinesis: "EnableEnhancedMonitoring" },
  EnableEnhancedMonitoringInput: { Kinesis: "EnableEnhancedMonitoring" },
  IncreaseStreamRetentionPeriodInput: { Kinesis: "IncreaseStreamRetentionPeriod" },
  ListShardsInput: { Kinesis: "ListShards" },
  ListShardsOutput: { Kinesis: "ListShards" },
  ListStreamConsumersInput: { Kinesis: "ListStreamConsumers" },
  ListStreamConsumersOutput: { Kinesis: "ListStreamConsumers" },
  ListTagsForStreamInput: { Kinesis: "ListTagsForStream", KinesisVideo: "ListTagsForStream" },
  ListTagsForStreamOutput: { Kinesis: "ListTagsForStream", KinesisVideo: "ListTagsForStream" },
  MergeShardsInput: { Kinesis: "MergeShards" },
  PutRecordsInput: { Kinesis: "PutRecords" },
  PutRecordsOutput: { Kinesis: "PutRecords" },
  RegisterStreamConsumerInput: { Kinesis: "RegisterStreamConsumer" },
  RegisterStreamConsumerOutput: { Kinesis: "RegisterStreamConsumer" },
  RemoveTagsFromStreamInput: { Kinesis: "RemoveTagsFromStream" },
  SplitShardInput: { Kinesis: "SplitShard" },
  StartStreamEncryptionInput: { Kinesis: "StartStreamEncryption" },
  StopStreamEncryptionInput: { Kinesis: "StopStreamEncryption" },
  UpdateShardCountInput: { Kinesis: "UpdateShardCount" },
  UpdateShardCountOutput: { Kinesis: "UpdateShardCount" },
  UpdateStreamModeInput: { Kinesis: "UpdateStreamMode" },
  CreateSignalingChannelInput: { KinesisVideo: "CreateSignalingChannel" },
  CreateSignalingChannelOutput: { KinesisVideo: "CreateSignalingChannel" },
  CreateStreamOutput: { KinesisVideo: "CreateStream" },
  DeleteEdgeConfigurationInput: { KinesisVideo: "DeleteEdgeConfiguration" },
  DeleteEdgeConfigurationOutput: { KinesisVideo: "DeleteEdgeConfiguration" },
  DeleteSignalingChannelInput: { KinesisVideo: "DeleteSignalingChannel" },
  DeleteSignalingChannelOutput: { KinesisVideo: "DeleteSignalingChannel" },
  DeleteStreamOutput: { KinesisVideo: "DeleteStream" },
  DescribeEdgeConfigurationInput: { KinesisVideo: "DescribeEdgeConfiguration" },
  DescribeEdgeConfigurationOutput: { KinesisVideo: "DescribeEdgeConfiguration" },
  DescribeImageGenerationConfigurationInput: {
    KinesisVideo: "DescribeImageGenerationConfiguration",
  },
  DescribeImageGenerationConfigurationOutput: {
    KinesisVideo: "DescribeImageGenerationConfiguration",
  },
  DescribeMappedResourceConfigurationInput: { KinesisVideo: "DescribeMappedResourceConfiguration" },
  DescribeMappedResourceConfigurationOutput: {
    KinesisVideo: "DescribeMappedResourceConfiguration",
  },
  DescribeMediaStorageConfigurationInput: { KinesisVideo: "DescribeMediaStorageConfiguration" },
  DescribeMediaStorageConfigurationOutput: { KinesisVideo: "DescribeMediaStorageConfiguration" },
  DescribeNotificationConfigurationInput: { KinesisVideo: "DescribeNotificationConfiguration" },
  DescribeNotificationConfigurationOutput: { KinesisVideo: "DescribeNotificationConfiguration" },
  DescribeSignalingChannelInput: { KinesisVideo: "DescribeSignalingChannel" },
  DescribeSignalingChannelOutput: { KinesisVideo: "DescribeSignalingChannel" },
  GetDataEndpointInput: { KinesisVideo: "GetDataEndpoint" },
  GetDataEndpointOutput: { KinesisVideo: "GetDataEndpoint" },
  GetSignalingChannelEndpointInput: { KinesisVideo: "GetSignalingChannelEndpoint" },
  GetSignalingChannelEndpointOutput: { KinesisVideo: "GetSignalingChannelEndpoint" },
  ListEdgeAgentConfigurationsInput: { KinesisVideo: "ListEdgeAgentConfigurations" },
  ListEdgeAgentConfigurationsOutput: { KinesisVideo: "ListEdgeAgentConfigurations" },
  ListSignalingChannelsInput: { KinesisVideo: "ListSignalingChannels" },
  ListSignalingChannelsOutput: { KinesisVideo: "ListSignalingChannels" },
  StartEdgeConfigurationUpdateInput: { KinesisVideo: "StartEdgeConfigurationUpdate" },
  StartEdgeConfigurationUpdateOutput: { KinesisVideo: "StartEdgeConfigurationUpdate" },
  TagStreamInput: { KinesisVideo: "TagStream" },
  TagStreamOutput: { KinesisVideo: "TagStream" },
  UntagStreamInput: { KinesisVideo: "UntagStream" },
  UntagStreamOutput: { KinesisVideo: "UntagStream" },
  UpdateDataRetentionInput: { KinesisVideo: "UpdateDataRetention" },
  UpdateDataRetentionOutput: { KinesisVideo: "UpdateDataRetention" },
  UpdateImageGenerationConfigurationInput: { KinesisVideo: "UpdateImageGenerationConfiguration" },
  UpdateImageGenerationConfigurationOutput: { KinesisVideo: "UpdateImageGenerationConfiguration" },
  UpdateMediaStorageConfigurationInput: { KinesisVideo: "UpdateMediaStorageConfiguration" },
  UpdateMediaStorageConfigurationOutput: { KinesisVideo: "UpdateMediaStorageConfiguration" },
  UpdateNotificationConfigurationInput: { KinesisVideo: "UpdateNotificationConfiguration" },
  UpdateNotificationConfigurationOutput: { KinesisVideo: "UpdateNotificationConfiguration" },
  UpdateSignalingChannelInput: { KinesisVideo: "UpdateSignalingChannel" },
  UpdateSignalingChannelOutput: { KinesisVideo: "UpdateSignalingChannel" },
  UpdateStreamInput: { KinesisVideo: "UpdateStream" },
  UpdateStreamOutput: { KinesisVideo: "UpdateStream" },
  GetClipInput: { KinesisVideoArchivedMedia: "GetClip" },
  GetClipOutput: { KinesisVideoArchivedMedia: "GetClip" },
  GetDASHStreamingSessionURLInput: { KinesisVideoArchivedMedia: "GetDASHStreamingSessionURL" },
  GetDASHStreamingSessionURLOutput: { KinesisVideoArchivedMedia: "GetDASHStreamingSessionURL" },
  GetHLSStreamingSessionURLInput: { KinesisVideoArchivedMedia: "GetHLSStreamingSessionURL" },
  GetHLSStreamingSessionURLOutput: { KinesisVideoArchivedMedia: "GetHLSStreamingSessionURL" },
  GetImagesInput: { KinesisVideoArchivedMedia: "GetImages" },
  GetImagesOutput: { KinesisVideoArchivedMedia: "GetImages" },
  GetMediaForFragmentListInput: { KinesisVideoArchivedMedia: "GetMediaForFragmentList" },
  GetMediaForFragmentListOutput: { KinesisVideoArchivedMedia: "GetMediaForFragmentList" },
  ListFragmentsInput: { KinesisVideoArchivedMedia: "ListFragments" },
  ListFragmentsOutput: { KinesisVideoArchivedMedia: "ListFragments" },
  GetMediaInput: { KinesisVideoMedia: "GetMedia" },
  GetMediaOutput: { KinesisVideoMedia: "GetMedia" },
  JoinStorageSessionInput: { KinesisVideoWebRTCStorage: "JoinStorageSession" },
  AliasConfiguration: { Lambda: "UpdateAlias" },
  EventSourceMappingConfiguration: { Lambda: "UpdateEventSourceMapping" },
  FunctionConfiguration: { Lambda: "UpdateFunctionConfiguration" },
  FunctionEventInvokeConfig: { Lambda: "UpdateFunctionEventInvokeConfig" },
  GetLayerVersionResponse: { Lambda: "GetLayerVersionByArn" },
  InvocationRequest: { Lambda: "Invoke" },
  InvocationResponse: { Lambda: "Invoke" },
  Concurrency: { Lambda: "PutFunctionConcurrency" },
  AllocateStaticIpResult: { Lightsail: "AllocateStaticIp" },
  AttachCertificateToDistributionResult: { Lightsail: "AttachCertificateToDistribution" },
  AttachDiskResult: { Lightsail: "AttachDisk" },
  AttachInstancesToLoadBalancerResult: { Lightsail: "AttachInstancesToLoadBalancer" },
  AttachLoadBalancerTlsCertificateResult: { Lightsail: "AttachLoadBalancerTlsCertificate" },
  AttachStaticIpResult: { Lightsail: "AttachStaticIp" },
  CloseInstancePublicPortsResult: { Lightsail: "CloseInstancePublicPorts" },
  CreateBucketResult: { Lightsail: "CreateBucket", S3Control: "CreateBucket" },
  CreateBucketAccessKeyResult: { Lightsail: "CreateBucketAccessKey" },
  CreateCertificateResult: { Lightsail: "CreateCertificate" },
  CreateCloudFormationStackResult: { Lightsail: "CreateCloudFormationStack" },
  CreateContactMethodResult: { Lightsail: "CreateContactMethod" },
  CreateContainerServiceResult: { Lightsail: "CreateContainerService" },
  CreateContainerServiceDeploymentResult: { Lightsail: "CreateContainerServiceDeployment" },
  CreateContainerServiceRegistryLoginResult: { Lightsail: "CreateContainerServiceRegistryLogin" },
  CreateDiskResult: { Lightsail: "CreateDisk" },
  CreateDiskFromSnapshotResult: { Lightsail: "CreateDiskFromSnapshot" },
  CreateDiskSnapshotResult: { Lightsail: "CreateDiskSnapshot" },
  CreateDomainEntryResult: { Lightsail: "CreateDomainEntry" },
  CreateGUISessionAccessDetailsResult: { Lightsail: "CreateGUISessionAccessDetails" },
  CreateInstanceSnapshotResult: { Lightsail: "CreateInstanceSnapshot" },
  CreateInstancesResult: { Lightsail: "CreateInstances" },
  CreateInstancesFromSnapshotResult: { Lightsail: "CreateInstancesFromSnapshot" },
  CreateKeyPairResult: { Lightsail: "CreateKeyPair" },
  CreateLoadBalancerResult: { Lightsail: "CreateLoadBalancer" },
  CreateLoadBalancerTlsCertificateResult: { Lightsail: "CreateLoadBalancerTlsCertificate" },
  CreateRelationalDatabaseResult: { Lightsail: "CreateRelationalDatabase" },
  CreateRelationalDatabaseFromSnapshotResult: { Lightsail: "CreateRelationalDatabaseFromSnapshot" },
  CreateRelationalDatabaseSnapshotResult: { Lightsail: "CreateRelationalDatabaseSnapshot" },
  DeleteAlarmResult: { Lightsail: "DeleteAlarm" },
  DeleteAutoSnapshotResult: { Lightsail: "DeleteAutoSnapshot" },
  DeleteBucketResult: { Lightsail: "DeleteBucket" },
  DeleteBucketAccessKeyResult: { Lightsail: "DeleteBucketAccessKey" },
  DeleteCertificateResult: { Lightsail: "DeleteCertificate" },
  DeleteContactMethodResult: { Lightsail: "DeleteContactMethod" },
  DeleteContainerImageResult: { Lightsail: "DeleteContainerImage" },
  DeleteContainerServiceResult: { Lightsail: "DeleteContainerService" },
  DeleteDiskResult: { Lightsail: "DeleteDisk" },
  DeleteDiskSnapshotResult: { Lightsail: "DeleteDiskSnapshot" },
  DeleteDistributionResult: { Lightsail: "DeleteDistribution" },
  DeleteDomainEntryResult: { Lightsail: "DeleteDomainEntry" },
  DeleteInstanceResult: { Lightsail: "DeleteInstance" },
  DeleteInstanceSnapshotResult: { Lightsail: "DeleteInstanceSnapshot" },
  DeleteKeyPairResult: { Lightsail: "DeleteKeyPair" },
  DeleteKnownHostKeysResult: { Lightsail: "DeleteKnownHostKeys" },
  DeleteLoadBalancerResult: { Lightsail: "DeleteLoadBalancer" },
  DeleteLoadBalancerTlsCertificateResult: { Lightsail: "DeleteLoadBalancerTlsCertificate" },
  DeleteRelationalDatabaseResult: { Lightsail: "DeleteRelationalDatabase" },
  DeleteRelationalDatabaseSnapshotResult: { Lightsail: "DeleteRelationalDatabaseSnapshot" },
  DetachCertificateFromDistributionResult: { Lightsail: "DetachCertificateFromDistribution" },
  DetachDiskResult: { Lightsail: "DetachDisk" },
  DetachInstancesFromLoadBalancerResult: { Lightsail: "DetachInstancesFromLoadBalancer" },
  DetachStaticIpResult: { Lightsail: "DetachStaticIp" },
  DisableAddOnResult: { Lightsail: "DisableAddOn" },
  DownloadDefaultKeyPairResult: { Lightsail: "DownloadDefaultKeyPair" },
  EnableAddOnResult: { Lightsail: "EnableAddOn" },
  GetActiveNamesResult: { Lightsail: "GetActiveNames" },
  GetAlarmsResult: { Lightsail: "GetAlarms" },
  GetAutoSnapshotsResult: { Lightsail: "GetAutoSnapshots" },
  GetBlueprintsResult: { Lightsail: "GetBlueprints" },
  GetBucketAccessKeysResult: { Lightsail: "GetBucketAccessKeys" },
  GetBucketBundlesResult: { Lightsail: "GetBucketBundles" },
  GetBucketMetricDataResult: { Lightsail: "GetBucketMetricData" },
  GetBucketsResult: { Lightsail: "GetBuckets" },
  GetBundlesResult: { Lightsail: "GetBundles" },
  GetCertificatesResult: { Lightsail: "GetCertificates" },
  GetCloudFormationStackRecordsResult: { Lightsail: "GetCloudFormationStackRecords" },
  GetContactMethodsResult: { Lightsail: "GetContactMethods" },
  GetContainerAPIMetadataResult: { Lightsail: "GetContainerAPIMetadata" },
  GetContainerImagesResult: { Lightsail: "GetContainerImages" },
  GetContainerLogResult: { Lightsail: "GetContainerLog" },
  GetContainerServiceDeploymentsResult: { Lightsail: "GetContainerServiceDeployments" },
  GetContainerServiceMetricDataResult: { Lightsail: "GetContainerServiceMetricData" },
  GetContainerServicePowersResult: { Lightsail: "GetContainerServicePowers" },
  ContainerServicesListResult: { Lightsail: "GetContainerServices" },
  GetCostEstimateResult: { Lightsail: "GetCostEstimate" },
  GetDiskResult: { Lightsail: "GetDisk" },
  GetDiskSnapshotResult: { Lightsail: "GetDiskSnapshot" },
  GetDiskSnapshotsResult: { Lightsail: "GetDiskSnapshots" },
  GetDisksResult: { Lightsail: "GetDisks" },
  GetDistributionBundlesResult: { Lightsail: "GetDistributionBundles" },
  GetDistributionLatestCacheResetResult: { Lightsail: "GetDistributionLatestCacheReset" },
  GetDistributionMetricDataResult: { Lightsail: "GetDistributionMetricData" },
  GetDistributionsResult: { Lightsail: "GetDistributions" },
  GetDomainResult: { Lightsail: "GetDomain" },
  GetDomainsResult: { Lightsail: "GetDomains" },
  GetExportSnapshotRecordsResult: { Lightsail: "GetExportSnapshotRecords" },
  GetInstanceResult: { Lightsail: "GetInstance" },
  GetInstanceAccessDetailsResult: { Lightsail: "GetInstanceAccessDetails" },
  GetInstanceMetricDataResult: { Lightsail: "GetInstanceMetricData" },
  GetInstancePortStatesResult: { Lightsail: "GetInstancePortStates" },
  GetInstanceSnapshotResult: { Lightsail: "GetInstanceSnapshot" },
  GetInstanceSnapshotsResult: { Lightsail: "GetInstanceSnapshots" },
  GetInstanceStateResult: { Lightsail: "GetInstanceState" },
  GetInstancesResult: { Lightsail: "GetInstances" },
  GetKeyPairResult: { Lightsail: "GetKeyPair" },
  GetKeyPairsResult: { Lightsail: "GetKeyPairs" },
  GetLoadBalancerResult: { Lightsail: "GetLoadBalancer" },
  GetLoadBalancerMetricDataResult: { Lightsail: "GetLoadBalancerMetricData" },
  GetLoadBalancerTlsCertificatesResult: { Lightsail: "GetLoadBalancerTlsCertificates" },
  GetLoadBalancerTlsPoliciesResult: { Lightsail: "GetLoadBalancerTlsPolicies" },
  GetLoadBalancersResult: { Lightsail: "GetLoadBalancers" },
  GetOperationResult: { Lightsail: "GetOperation" },
  GetOperationsResult: { Lightsail: "GetOperations" },
  GetOperationsForResourceResult: { Lightsail: "GetOperationsForResource" },
  GetRegionsResult: { Lightsail: "GetRegions" },
  GetRelationalDatabaseResult: { Lightsail: "GetRelationalDatabase" },
  GetRelationalDatabaseBlueprintsResult: { Lightsail: "GetRelationalDatabaseBlueprints" },
  GetRelationalDatabaseBundlesResult: { Lightsail: "GetRelationalDatabaseBundles" },
  GetRelationalDatabaseEventsResult: { Lightsail: "GetRelationalDatabaseEvents" },
  GetRelationalDatabaseLogEventsResult: { Lightsail: "GetRelationalDatabaseLogEvents" },
  GetRelationalDatabaseLogStreamsResult: { Lightsail: "GetRelationalDatabaseLogStreams" },
  GetRelationalDatabaseMasterUserPasswordResult: {
    Lightsail: "GetRelationalDatabaseMasterUserPassword",
  },
  GetRelationalDatabaseMetricDataResult: { Lightsail: "GetRelationalDatabaseMetricData" },
  GetRelationalDatabaseParametersResult: { Lightsail: "GetRelationalDatabaseParameters" },
  GetRelationalDatabaseSnapshotResult: { Lightsail: "GetRelationalDatabaseSnapshot" },
  GetRelationalDatabaseSnapshotsResult: { Lightsail: "GetRelationalDatabaseSnapshots" },
  GetRelationalDatabasesResult: { Lightsail: "GetRelationalDatabases" },
  GetStaticIpResult: { Lightsail: "GetStaticIp" },
  GetStaticIpsResult: { Lightsail: "GetStaticIps" },
  IsVpcPeeredResult: { Lightsail: "IsVpcPeered" },
  OpenInstancePublicPortsResult: { Lightsail: "OpenInstancePublicPorts" },
  PeerVpcResult: { Lightsail: "PeerVpc" },
  PutAlarmResult: { Lightsail: "PutAlarm" },
  PutInstancePublicPortsResult: { Lightsail: "PutInstancePublicPorts" },
  RebootInstanceResult: { Lightsail: "RebootInstance" },
  RebootRelationalDatabaseResult: { Lightsail: "RebootRelationalDatabase" },
  RegisterContainerImageResult: { Lightsail: "RegisterContainerImage" },
  ReleaseStaticIpResult: { Lightsail: "ReleaseStaticIp" },
  ResetDistributionCacheResult: { Lightsail: "ResetDistributionCache" },
  SendContactMethodVerificationResult: { Lightsail: "SendContactMethodVerification" },
  SetIpAddressTypeResult: { Lightsail: "SetIpAddressType" },
  SetResourceAccessForBucketResult: { Lightsail: "SetResourceAccessForBucket" },
  StartGUISessionResult: { Lightsail: "StartGUISession" },
  StartInstanceResult: { Lightsail: "StartInstance" },
  StartRelationalDatabaseResult: { Lightsail: "StartRelationalDatabase" },
  StopGUISessionResult: { Lightsail: "StopGUISession" },
  StopInstanceResult: { Lightsail: "StopInstance" },
  StopRelationalDatabaseResult: { Lightsail: "StopRelationalDatabase" },
  TestAlarmResult: { Lightsail: "TestAlarm" },
  UnpeerVpcResult: { Lightsail: "UnpeerVpc" },
  UpdateBucketResult: { Lightsail: "UpdateBucket" },
  UpdateBucketBundleResult: { Lightsail: "UpdateBucketBundle" },
  UpdateContainerServiceResult: { Lightsail: "UpdateContainerService" },
  UpdateDistributionBundleResult: { Lightsail: "UpdateDistributionBundle" },
  UpdateDomainEntryResult: { Lightsail: "UpdateDomainEntry" },
  UpdateInstanceMetadataOptionsResult: { Lightsail: "UpdateInstanceMetadataOptions" },
  UpdateLoadBalancerAttributeResult: { Lightsail: "UpdateLoadBalancerAttribute" },
  UpdateRelationalDatabaseResult: { Lightsail: "UpdateRelationalDatabase" },
  UpdateRelationalDatabaseParametersResult: { Lightsail: "UpdateRelationalDatabaseParameters" },
  CreateEnvironmentInput: { MWAA: "CreateEnvironment", Proton: "CreateEnvironment" },
  CreateEnvironmentOutput: { MWAA: "CreateEnvironment", Proton: "CreateEnvironment" },
  DeleteEnvironmentInput: { MWAA: "DeleteEnvironment", Proton: "DeleteEnvironment" },
  DeleteEnvironmentOutput: { MWAA: "DeleteEnvironment", Proton: "DeleteEnvironment" },
  GetEnvironmentInput: { MWAA: "GetEnvironment", Proton: "GetEnvironment" },
  GetEnvironmentOutput: { MWAA: "GetEnvironment", Proton: "GetEnvironment" },
  ListEnvironmentsInput: { MWAA: "ListEnvironments", Proton: "ListEnvironments" },
  ListEnvironmentsOutput: { MWAA: "ListEnvironments", Proton: "ListEnvironments" },
  PublishMetricsInput: { MWAA: "PublishMetrics" },
  PublishMetricsOutput: { MWAA: "PublishMetrics" },
  UpdateEnvironmentInput: { MWAA: "UpdateEnvironment", Proton: "UpdateEnvironment" },
  UpdateEnvironmentOutput: { MWAA: "UpdateEnvironment", Proton: "UpdateEnvironment" },
  CreateBatchPredictionInput: { MachineLearning: "CreateBatchPrediction" },
  CreateBatchPredictionOutput: { MachineLearning: "CreateBatchPrediction" },
  CreateDataSourceFromRDSInput: { MachineLearning: "CreateDataSourceFromRDS" },
  CreateDataSourceFromRDSOutput: { MachineLearning: "CreateDataSourceFromRDS" },
  CreateDataSourceFromRedshiftInput: { MachineLearning: "CreateDataSourceFromRedshift" },
  CreateDataSourceFromRedshiftOutput: { MachineLearning: "CreateDataSourceFromRedshift" },
  CreateDataSourceFromS3Input: { MachineLearning: "CreateDataSourceFromS3" },
  CreateDataSourceFromS3Output: { MachineLearning: "CreateDataSourceFromS3" },
  CreateEvaluationInput: { MachineLearning: "CreateEvaluation" },
  CreateEvaluationOutput: { MachineLearning: "CreateEvaluation" },
  CreateMLModelInput: { MachineLearning: "CreateMLModel" },
  CreateMLModelOutput: { MachineLearning: "CreateMLModel" },
  CreateRealtimeEndpointInput: { MachineLearning: "CreateRealtimeEndpoint" },
  CreateRealtimeEndpointOutput: { MachineLearning: "CreateRealtimeEndpoint" },
  DeleteBatchPredictionInput: { MachineLearning: "DeleteBatchPrediction" },
  DeleteBatchPredictionOutput: { MachineLearning: "DeleteBatchPrediction" },
  DeleteDataSourceInput: { MachineLearning: "DeleteDataSource" },
  DeleteDataSourceOutput: { MachineLearning: "DeleteDataSource" },
  DeleteEvaluationInput: { MachineLearning: "DeleteEvaluation" },
  DeleteEvaluationOutput: { MachineLearning: "DeleteEvaluation" },
  DeleteMLModelInput: { MachineLearning: "DeleteMLModel" },
  DeleteMLModelOutput: { MachineLearning: "DeleteMLModel" },
  DeleteRealtimeEndpointInput: { MachineLearning: "DeleteRealtimeEndpoint" },
  DeleteRealtimeEndpointOutput: { MachineLearning: "DeleteRealtimeEndpoint" },
  DeleteTagsInput: { MachineLearning: "DeleteTags", SageMaker: "DeleteTags" },
  DeleteTagsOutput: { MachineLearning: "DeleteTags", SageMaker: "DeleteTags" },
  DescribeBatchPredictionsInput: { MachineLearning: "DescribeBatchPredictions" },
  DescribeBatchPredictionsOutput: { MachineLearning: "DescribeBatchPredictions" },
  DescribeDataSourcesInput: { MachineLearning: "DescribeDataSources" },
  DescribeDataSourcesOutput: { MachineLearning: "DescribeDataSources" },
  DescribeEvaluationsInput: { MachineLearning: "DescribeEvaluations" },
  DescribeEvaluationsOutput: { MachineLearning: "DescribeEvaluations" },
  DescribeMLModelsInput: { MachineLearning: "DescribeMLModels" },
  DescribeMLModelsOutput: { MachineLearning: "DescribeMLModels" },
  GetBatchPredictionInput: { MachineLearning: "GetBatchPrediction" },
  GetBatchPredictionOutput: { MachineLearning: "GetBatchPrediction" },
  GetDataSourceInput: { MachineLearning: "GetDataSource" },
  GetDataSourceOutput: { MachineLearning: "GetDataSource" },
  GetEvaluationInput: { MachineLearning: "GetEvaluation" },
  GetEvaluationOutput: { MachineLearning: "GetEvaluation" },
  GetMLModelInput: { MachineLearning: "GetMLModel" },
  GetMLModelOutput: { MachineLearning: "GetMLModel" },
  PredictInput: { MachineLearning: "Predict" },
  PredictOutput: { MachineLearning: "Predict" },
  UpdateBatchPredictionInput: { MachineLearning: "UpdateBatchPrediction" },
  UpdateBatchPredictionOutput: { MachineLearning: "UpdateBatchPrediction" },
  UpdateDataSourceInput: { MachineLearning: "UpdateDataSource" },
  UpdateDataSourceOutput: { MachineLearning: "UpdateDataSource" },
  UpdateEvaluationInput: { MachineLearning: "UpdateEvaluation" },
  UpdateEvaluationOutput: { MachineLearning: "UpdateEvaluation" },
  UpdateMLModelInput: { MachineLearning: "UpdateMLModel" },
  UpdateMLModelOutput: { MachineLearning: "UpdateMLModel" },
  AssociateS3ResourcesResult: { Macie: "AssociateS3Resources" },
  DisassociateS3ResourcesResult: { Macie: "DisassociateS3Resources" },
  ListMemberAccountsResult: { Macie: "ListMemberAccounts" },
  ListS3ResourcesResult: { Macie: "ListS3Resources" },
  UpdateS3ResourcesResult: { Macie: "UpdateS3Resources" },
  CreateAccessorInput: { ManagedBlockchain: "CreateAccessor" },
  CreateAccessorOutput: { ManagedBlockchain: "CreateAccessor" },
  CreateMemberInput: { ManagedBlockchain: "CreateMember" },
  CreateMemberOutput: { ManagedBlockchain: "CreateMember" },
  CreateNetworkInput: { ManagedBlockchain: "CreateNetwork" },
  CreateNetworkOutput: { ManagedBlockchain: "CreateNetwork" },
  CreateNodeInput: { ManagedBlockchain: "CreateNode" },
  CreateNodeOutput: { ManagedBlockchain: "CreateNode" },
  CreateProposalInput: { ManagedBlockchain: "CreateProposal" },
  CreateProposalOutput: { ManagedBlockchain: "CreateProposal" },
  DeleteAccessorInput: { ManagedBlockchain: "DeleteAccessor" },
  DeleteAccessorOutput: { ManagedBlockchain: "DeleteAccessor" },
  DeleteNodeInput: { ManagedBlockchain: "DeleteNode" },
  DeleteNodeOutput: { ManagedBlockchain: "DeleteNode" },
  GetAccessorInput: { ManagedBlockchain: "GetAccessor" },
  GetAccessorOutput: { ManagedBlockchain: "GetAccessor" },
  GetMemberInput: { ManagedBlockchain: "GetMember" },
  GetMemberOutput: { ManagedBlockchain: "GetMember" },
  GetNetworkInput: { ManagedBlockchain: "GetNetwork" },
  GetNetworkOutput: { ManagedBlockchain: "GetNetwork" },
  GetNodeInput: { ManagedBlockchain: "GetNode" },
  GetNodeOutput: { ManagedBlockchain: "GetNode" },
  GetProposalInput: { ManagedBlockchain: "GetProposal" },
  GetProposalOutput: { ManagedBlockchain: "GetProposal" },
  ListAccessorsInput: { ManagedBlockchain: "ListAccessors" },
  ListAccessorsOutput: { ManagedBlockchain: "ListAccessors" },
  ListInvitationsInput: { ManagedBlockchain: "ListInvitations" },
  ListInvitationsOutput: { ManagedBlockchain: "ListInvitations" },
  ListNetworksInput: { ManagedBlockchain: "ListNetworks" },
  ListNetworksOutput: { ManagedBlockchain: "ListNetworks" },
  ListNodesInput: { ManagedBlockchain: "ListNodes" },
  ListNodesOutput: { ManagedBlockchain: "ListNodes" },
  ListProposalVotesInput: { ManagedBlockchain: "ListProposalVotes" },
  ListProposalVotesOutput: { ManagedBlockchain: "ListProposalVotes" },
  ListProposalsInput: { ManagedBlockchain: "ListProposals" },
  ListProposalsOutput: { ManagedBlockchain: "ListProposals" },
  RejectInvitationInput: { ManagedBlockchain: "RejectInvitation" },
  RejectInvitationOutput: { ManagedBlockchain: "RejectInvitation" },
  UpdateMemberInput: { ManagedBlockchain: "UpdateMember" },
  UpdateMemberOutput: { ManagedBlockchain: "UpdateMember" },
  UpdateNodeInput: { ManagedBlockchain: "UpdateNode" },
  UpdateNodeOutput: { ManagedBlockchain: "UpdateNode" },
  VoteOnProposalInput: { ManagedBlockchain: "VoteOnProposal" },
  VoteOnProposalOutput: { ManagedBlockchain: "VoteOnProposal" },
  GenerateDataSetResult: { MarketplaceCommerceAnalytics: "GenerateDataSet" },
  StartSupportDataExportResult: { MarketplaceCommerceAnalytics: "StartSupportDataExport" },
  GetEntitlementsResult: { MarketplaceEntitlementService: "GetEntitlements" },
  BatchMeterUsageResult: { MarketplaceMetering: "BatchMeterUsage" },
  MeterUsageResult: { MarketplaceMetering: "MeterUsage" },
  RegisterUsageResult: { MarketplaceMetering: "RegisterUsage" },
  ResolveCustomerResult: { MarketplaceMetering: "ResolveCustomer" },
  CreateContainerInput: { MediaStore: "CreateContainer" },
  CreateContainerOutput: { MediaStore: "CreateContainer" },
  DeleteContainerInput: { MediaStore: "DeleteContainer" },
  DeleteContainerOutput: { MediaStore: "DeleteContainer" },
  DeleteContainerPolicyInput: { MediaStore: "DeleteContainerPolicy" },
  DeleteContainerPolicyOutput: { MediaStore: "DeleteContainerPolicy" },
  DeleteCorsPolicyInput: { MediaStore: "DeleteCorsPolicy" },
  DeleteCorsPolicyOutput: { MediaStore: "DeleteCorsPolicy" },
  DeleteLifecyclePolicyInput: { MediaStore: "DeleteLifecyclePolicy" },
  DeleteLifecyclePolicyOutput: { MediaStore: "DeleteLifecyclePolicy" },
  DeleteMetricPolicyInput: { MediaStore: "DeleteMetricPolicy" },
  DeleteMetricPolicyOutput: { MediaStore: "DeleteMetricPolicy" },
  DescribeContainerInput: { MediaStore: "DescribeContainer" },
  DescribeContainerOutput: { MediaStore: "DescribeContainer" },
  GetContainerPolicyInput: { MediaStore: "GetContainerPolicy" },
  GetContainerPolicyOutput: { MediaStore: "GetContainerPolicy" },
  GetCorsPolicyInput: { MediaStore: "GetCorsPolicy" },
  GetCorsPolicyOutput: { MediaStore: "GetCorsPolicy" },
  GetLifecyclePolicyInput: { MediaStore: "GetLifecyclePolicy" },
  GetLifecyclePolicyOutput: { MediaStore: "GetLifecyclePolicy" },
  GetMetricPolicyInput: { MediaStore: "GetMetricPolicy" },
  GetMetricPolicyOutput: { MediaStore: "GetMetricPolicy" },
  ListContainersInput: { MediaStore: "ListContainers" },
  ListContainersOutput: { MediaStore: "ListContainers" },
  PutContainerPolicyInput: { MediaStore: "PutContainerPolicy" },
  PutContainerPolicyOutput: { MediaStore: "PutContainerPolicy" },
  PutCorsPolicyInput: { MediaStore: "PutCorsPolicy" },
  PutCorsPolicyOutput: { MediaStore: "PutCorsPolicy" },
  PutLifecyclePolicyInput: { MediaStore: "PutLifecyclePolicy" },
  PutLifecyclePolicyOutput: { MediaStore: "PutLifecyclePolicy" },
  PutMetricPolicyInput: { MediaStore: "PutMetricPolicy" },
  PutMetricPolicyOutput: { MediaStore: "PutMetricPolicy" },
  StartAccessLoggingInput: { MediaStore: "StartAccessLogging" },
  StartAccessLoggingOutput: { MediaStore: "StartAccessLogging" },
  StopAccessLoggingInput: { MediaStore: "StopAccessLogging" },
  StopAccessLoggingOutput: { MediaStore: "StopAccessLogging" },
  Wave: { Mgn: "UpdateWave" },
  LaunchConfigurationTemplate: { Mgn: "UpdateLaunchConfigurationTemplate" },
  SourceServerActionDocument: { Mgn: "PutSourceServerAction" },
  TemplateActionDocument: { Mgn: "PutTemplateAction" },
  AssociateCreatedArtifactResult: { MigrationHub: "AssociateCreatedArtifact" },
  AssociateDiscoveredResourceResult: { MigrationHub: "AssociateDiscoveredResource" },
  CreateProgressUpdateStreamResult: { MigrationHub: "CreateProgressUpdateStream" },
  DeleteProgressUpdateStreamResult: { MigrationHub: "DeleteProgressUpdateStream" },
  DescribeApplicationStateResult: { MigrationHub: "DescribeApplicationState" },
  DescribeMigrationTaskResult: { MigrationHub: "DescribeMigrationTask" },
  DisassociateCreatedArtifactResult: { MigrationHub: "DisassociateCreatedArtifact" },
  DisassociateDiscoveredResourceResult: { MigrationHub: "DisassociateDiscoveredResource" },
  ImportMigrationTaskResult: { MigrationHub: "ImportMigrationTask" },
  ListApplicationStatesResult: { MigrationHub: "ListApplicationStates" },
  ListCreatedArtifactsResult: { MigrationHub: "ListCreatedArtifacts" },
  ListDiscoveredResourcesResult: { MigrationHub: "ListDiscoveredResources" },
  ListMigrationTasksResult: { MigrationHub: "ListMigrationTasks" },
  ListProgressUpdateStreamsResult: { MigrationHub: "ListProgressUpdateStreams" },
  NotifyApplicationStateResult: { MigrationHub: "NotifyApplicationState" },
  NotifyMigrationTaskStateResult: { MigrationHub: "NotifyMigrationTaskState" },
  PutResourceAttributesResult: { MigrationHub: "PutResourceAttributes" },
  CreateHomeRegionControlResult: { MigrationHubConfig: "CreateHomeRegionControl" },
  DescribeHomeRegionControlsResult: { MigrationHubConfig: "DescribeHomeRegionControls" },
  GetHomeRegionResult: { MigrationHubConfig: "GetHomeRegion" },
  CreateMigrationWorkflowRequest: { MigrationHubOrchestrator: "CreateWorkflow" },
  CreateMigrationWorkflowResponse: { MigrationHubOrchestrator: "CreateWorkflow" },
  DeleteMigrationWorkflowRequest: { MigrationHubOrchestrator: "DeleteWorkflow" },
  DeleteMigrationWorkflowResponse: { MigrationHubOrchestrator: "DeleteWorkflow" },
  GetMigrationWorkflowTemplateRequest: { MigrationHubOrchestrator: "GetTemplate" },
  GetMigrationWorkflowTemplateResponse: { MigrationHubOrchestrator: "GetTemplate" },
  GetMigrationWorkflowRequest: { MigrationHubOrchestrator: "GetWorkflow" },
  GetMigrationWorkflowResponse: { MigrationHubOrchestrator: "GetWorkflow" },
  ListMigrationWorkflowTemplatesRequest: { MigrationHubOrchestrator: "ListTemplates" },
  ListMigrationWorkflowTemplatesResponse: { MigrationHubOrchestrator: "ListTemplates" },
  ListMigrationWorkflowsRequest: { MigrationHubOrchestrator: "ListWorkflows" },
  ListMigrationWorkflowsResponse: { MigrationHubOrchestrator: "ListWorkflows" },
  StartMigrationWorkflowRequest: { MigrationHubOrchestrator: "StartWorkflow" },
  StartMigrationWorkflowResponse: { MigrationHubOrchestrator: "StartWorkflow" },
  StopMigrationWorkflowRequest: { MigrationHubOrchestrator: "StopWorkflow" },
  StopMigrationWorkflowResponse: { MigrationHubOrchestrator: "StopWorkflow" },
  UpdateMigrationWorkflowRequest: { MigrationHubOrchestrator: "UpdateWorkflow" },
  UpdateMigrationWorkflowResponse: { MigrationHubOrchestrator: "UpdateWorkflow" },
  DescribeBundleResult: { Mobile: "DescribeBundle" },
  ExportBundleResult: { Mobile: "ExportBundle" },
  ExportProjectResult: { Mobile: "ExportProject" },
  ListBundlesResult: { Mobile: "ListBundles" },
  AddRoleToDBClusterMessage: { Neptune: "AddRoleToDBCluster", RDS: "AddRoleToDBCluster" },
  CopyDBParameterGroupMessage: { Neptune: "CopyDBParameterGroup", RDS: "CopyDBParameterGroup" },
  CopyDBParameterGroupResult: { Neptune: "CopyDBParameterGroup", RDS: "CopyDBParameterGroup" },
  CreateDBClusterEndpointMessage: {
    Neptune: "CreateDBClusterEndpoint",
    RDS: "CreateDBClusterEndpoint",
  },
  CreateDBClusterEndpointOutput: { Neptune: "CreateDBClusterEndpoint" },
  CreateDBParameterGroupMessage: {
    Neptune: "CreateDBParameterGroup",
    RDS: "CreateDBParameterGroup",
  },
  CreateDBParameterGroupResult: {
    Neptune: "CreateDBParameterGroup",
    RDS: "CreateDBParameterGroup",
  },
  DeleteDBClusterEndpointMessage: {
    Neptune: "DeleteDBClusterEndpoint",
    RDS: "DeleteDBClusterEndpoint",
  },
  DeleteDBClusterEndpointOutput: { Neptune: "DeleteDBClusterEndpoint" },
  DeleteDBParameterGroupMessage: {
    Neptune: "DeleteDBParameterGroup",
    RDS: "DeleteDBParameterGroup",
  },
  DescribeDBClusterEndpointsMessage: {
    Neptune: "DescribeDBClusterEndpoints",
    RDS: "DescribeDBClusterEndpoints",
  },
  DBClusterEndpointMessage: {
    Neptune: "DescribeDBClusterEndpoints",
    RDS: "DescribeDBClusterEndpoints",
  },
  DescribeDBParameterGroupsMessage: {
    Neptune: "DescribeDBParameterGroups",
    RDS: "DescribeDBParameterGroups",
  },
  DBParameterGroupsMessage: {
    Neptune: "DescribeDBParameterGroups",
    RDS: "DescribeDBParameterGroups",
  },
  DescribeDBParametersMessage: { Neptune: "DescribeDBParameters", RDS: "DescribeDBParameters" },
  DBParameterGroupDetails: { Neptune: "DescribeDBParameters", RDS: "DescribeDBParameters" },
  DescribeValidDBInstanceModificationsMessage: {
    Neptune: "DescribeValidDBInstanceModifications",
    RDS: "DescribeValidDBInstanceModifications",
  },
  DescribeValidDBInstanceModificationsResult: {
    Neptune: "DescribeValidDBInstanceModifications",
    RDS: "DescribeValidDBInstanceModifications",
  },
  FailoverGlobalClusterMessage: { Neptune: "FailoverGlobalCluster", RDS: "FailoverGlobalCluster" },
  FailoverGlobalClusterResult: { Neptune: "FailoverGlobalCluster", RDS: "FailoverGlobalCluster" },
  ModifyDBClusterEndpointMessage: {
    Neptune: "ModifyDBClusterEndpoint",
    RDS: "ModifyDBClusterEndpoint",
  },
  ModifyDBClusterEndpointOutput: { Neptune: "ModifyDBClusterEndpoint" },
  ModifyDBParameterGroupMessage: {
    Neptune: "ModifyDBParameterGroup",
    RDS: "ModifyDBParameterGroup",
  },
  DBParameterGroupNameMessage: { Neptune: "ResetDBParameterGroup", RDS: "ResetDBParameterGroup" },
  PromoteReadReplicaDBClusterMessage: {
    Neptune: "PromoteReadReplicaDBCluster",
    RDS: "PromoteReadReplicaDBCluster",
  },
  PromoteReadReplicaDBClusterResult: {
    Neptune: "PromoteReadReplicaDBCluster",
    RDS: "PromoteReadReplicaDBCluster",
  },
  RemoveRoleFromDBClusterMessage: {
    Neptune: "RemoveRoleFromDBCluster",
    RDS: "RemoveRoleFromDBCluster",
  },
  ResetDBParameterGroupMessage: { Neptune: "ResetDBParameterGroup", RDS: "ResetDBParameterGroup" },
  CreateLinkInput: { OAM: "CreateLink" },
  CreateLinkOutput: { OAM: "CreateLink" },
  CreateSinkInput: { OAM: "CreateSink" },
  CreateSinkOutput: { OAM: "CreateSink" },
  DeleteLinkInput: { OAM: "DeleteLink" },
  DeleteLinkOutput: { OAM: "DeleteLink" },
  DeleteSinkInput: { OAM: "DeleteSink" },
  DeleteSinkOutput: { OAM: "DeleteSink" },
  GetLinkInput: { OAM: "GetLink" },
  GetLinkOutput: { OAM: "GetLink" },
  GetSinkInput: { OAM: "GetSink" },
  GetSinkOutput: { OAM: "GetSink" },
  GetSinkPolicyInput: { OAM: "GetSinkPolicy" },
  GetSinkPolicyOutput: { OAM: "GetSinkPolicy" },
  ListAttachedLinksInput: { OAM: "ListAttachedLinks" },
  ListAttachedLinksOutput: { OAM: "ListAttachedLinks" },
  ListLinksInput: { OAM: "ListLinks" },
  ListLinksOutput: { OAM: "ListLinks" },
  ListSinksInput: { OAM: "ListSinks" },
  ListSinksOutput: { OAM: "ListSinks" },
  PutSinkPolicyInput: { OAM: "PutSinkPolicy" },
  PutSinkPolicyOutput: { OAM: "PutSinkPolicy" },
  UpdateLinkInput: { OAM: "UpdateLink" },
  UpdateLinkOutput: { OAM: "UpdateLink" },
  CancelAnnotationImportRequest: { Omics: "CancelAnnotationImportJob" },
  CancelAnnotationImportResponse: { Omics: "CancelAnnotationImportJob" },
  CancelVariantImportRequest: { Omics: "CancelVariantImportJob" },
  CancelVariantImportResponse: { Omics: "CancelVariantImportJob" },
  GetAnnotationImportRequest: { Omics: "GetAnnotationImportJob" },
  GetAnnotationImportResponse: { Omics: "GetAnnotationImportJob" },
  GetVariantImportRequest: { Omics: "GetVariantImportJob" },
  GetVariantImportResponse: { Omics: "GetVariantImportJob" },
  StartAnnotationImportRequest: { Omics: "StartAnnotationImportJob" },
  StartAnnotationImportResponse: { Omics: "StartAnnotationImportJob" },
  StartVariantImportRequest: { Omics: "StartVariantImportJob" },
  StartVariantImportResponse: { Omics: "StartVariantImportJob" },
  CloneStackResult: { OpsWorks: "CloneStack" },
  CreateInstanceResult: { OpsWorks: "CreateInstance" },
  CreateLayerResult: { OpsWorks: "CreateLayer" },
  DescribeAgentVersionsResult: { OpsWorks: "DescribeAgentVersions" },
  DescribeAppsResult: { OpsWorks: "DescribeApps" },
  DescribeCommandsResult: { OpsWorks: "DescribeCommands" },
  DescribeDeploymentsResult: { OpsWorks: "DescribeDeployments" },
  DescribeEcsClustersResult: { OpsWorks: "DescribeEcsClusters" },
  DescribeElasticIpsResult: { OpsWorks: "DescribeElasticIps" },
  DescribeElasticLoadBalancersResult: { OpsWorks: "DescribeElasticLoadBalancers" },
  DescribeLayersResult: { OpsWorks: "DescribeLayers" },
  DescribeLoadBasedAutoScalingResult: { OpsWorks: "DescribeLoadBasedAutoScaling" },
  DescribePermissionsResult: { OpsWorks: "DescribePermissions" },
  DescribeRaidArraysResult: { OpsWorks: "DescribeRaidArrays" },
  DescribeRdsDbInstancesResult: { OpsWorks: "DescribeRdsDbInstances" },
  DescribeServiceErrorsResult: { OpsWorks: "DescribeServiceErrors" },
  DescribeStackProvisioningParametersResult: { OpsWorks: "DescribeStackProvisioningParameters" },
  DescribeStackSummaryResult: { OpsWorks: "DescribeStackSummary" },
  DescribeTimeBasedAutoScalingResult: { OpsWorks: "DescribeTimeBasedAutoScaling" },
  DescribeUserProfilesResult: { OpsWorks: "DescribeUserProfiles" },
  GetHostnameSuggestionResult: { OpsWorks: "GetHostnameSuggestion" },
  GrantAccessResult: { OpsWorks: "GrantAccess" },
  ListTagsResult: { OpsWorks: "ListTags" },
  RegisterEcsClusterResult: { OpsWorks: "RegisterEcsCluster" },
  RegisterElasticIpResult: { OpsWorks: "RegisterElasticIp" },
  RegisterInstanceResult: { OpsWorks: "RegisterInstance" },
  RegisterVolumeResult: { OpsWorks: "RegisterVolume" },
  CancelOrderInput: { Outposts: "CancelOrder" },
  CancelOrderOutput: { Outposts: "CancelOrder" },
  CreateOrderInput: { Outposts: "CreateOrder" },
  CreateOrderOutput: { Outposts: "CreateOrder" },
  CreateOutpostInput: { Outposts: "CreateOutpost" },
  CreateOutpostOutput: { Outposts: "CreateOutpost" },
  CreateSiteInput: { Outposts: "CreateSite" },
  CreateSiteOutput: { Outposts: "CreateSite" },
  DeleteOutpostInput: { Outposts: "DeleteOutpost" },
  DeleteOutpostOutput: { Outposts: "DeleteOutpost" },
  DeleteSiteInput: { Outposts: "DeleteSite" },
  DeleteSiteOutput: { Outposts: "DeleteSite" },
  GetCatalogItemInput: { Outposts: "GetCatalogItem" },
  GetCatalogItemOutput: { Outposts: "GetCatalogItem" },
  GetOrderInput: { Outposts: "GetOrder" },
  GetOrderOutput: { Outposts: "GetOrder" },
  GetOutpostInput: { Outposts: "GetOutpost" },
  GetOutpostOutput: { Outposts: "GetOutpost" },
  GetOutpostInstanceTypesInput: { Outposts: "GetOutpostInstanceTypes" },
  GetOutpostInstanceTypesOutput: { Outposts: "GetOutpostInstanceTypes" },
  GetSiteInput: { Outposts: "GetSite" },
  GetSiteOutput: { Outposts: "GetSite" },
  GetSiteAddressInput: { Outposts: "GetSiteAddress" },
  GetSiteAddressOutput: { Outposts: "GetSiteAddress" },
  ListAssetsInput: { Outposts: "ListAssets" },
  ListAssetsOutput: { Outposts: "ListAssets" },
  ListCatalogItemsInput: { Outposts: "ListCatalogItems" },
  ListCatalogItemsOutput: { Outposts: "ListCatalogItems" },
  ListOrdersInput: { Outposts: "ListOrders" },
  ListOrdersOutput: { Outposts: "ListOrders" },
  ListOutpostsInput: { Outposts: "ListOutposts" },
  ListOutpostsOutput: { Outposts: "ListOutposts" },
  ListSitesInput: { Outposts: "ListSites" },
  ListSitesOutput: { Outposts: "ListSites" },
  UpdateOutpostInput: { Outposts: "UpdateOutpost" },
  UpdateOutpostOutput: { Outposts: "UpdateOutpost" },
  UpdateSiteInput: { Outposts: "UpdateSite" },
  UpdateSiteOutput: { Outposts: "UpdateSite" },
  UpdateSiteAddressInput: { Outposts: "UpdateSiteAddress" },
  UpdateSiteAddressOutput: { Outposts: "UpdateSiteAddress" },
  UpdateSiteRackPhysicalPropertiesInput: { Outposts: "UpdateSiteRackPhysicalProperties" },
  UpdateSiteRackPhysicalPropertiesOutput: { Outposts: "UpdateSiteRackPhysicalProperties" },
  CreateKeyInput: { PaymentCryptography: "CreateKey" },
  CreateKeyOutput: { PaymentCryptography: "CreateKey" },
  DeleteAliasOutput: { PaymentCryptography: "DeleteAlias" },
  DeleteKeyInput: { PaymentCryptography: "DeleteKey" },
  DeleteKeyOutput: { PaymentCryptography: "DeleteKey" },
  ExportKeyInput: { PaymentCryptography: "ExportKey" },
  ExportKeyOutput: { PaymentCryptography: "ExportKey" },
  GetAliasInput: { PaymentCryptography: "GetAlias" },
  GetAliasOutput: { PaymentCryptography: "GetAlias" },
  GetKeyInput: { PaymentCryptography: "GetKey" },
  GetKeyOutput: { PaymentCryptography: "GetKey" },
  GetParametersForExportInput: { PaymentCryptography: "GetParametersForExport" },
  GetParametersForExportOutput: { PaymentCryptography: "GetParametersForExport" },
  GetParametersForImportInput: { PaymentCryptography: "GetParametersForImport" },
  GetParametersForImportOutput: { PaymentCryptography: "GetParametersForImport" },
  GetPublicKeyCertificateInput: { PaymentCryptography: "GetPublicKeyCertificate" },
  GetPublicKeyCertificateOutput: { PaymentCryptography: "GetPublicKeyCertificate" },
  ImportKeyInput: { PaymentCryptography: "ImportKey" },
  ImportKeyOutput: { PaymentCryptography: "ImportKey" },
  ListKeysInput: { PaymentCryptography: "ListKeys" },
  ListKeysOutput: { PaymentCryptography: "ListKeys" },
  RestoreKeyInput: { PaymentCryptography: "RestoreKey" },
  RestoreKeyOutput: { PaymentCryptography: "RestoreKey" },
  StartKeyUsageInput: { PaymentCryptography: "StartKeyUsage" },
  StartKeyUsageOutput: { PaymentCryptography: "StartKeyUsage" },
  StopKeyUsageInput: { PaymentCryptography: "StopKeyUsage" },
  StopKeyUsageOutput: { PaymentCryptography: "StopKeyUsage" },
  DecryptDataInput: { PaymentCryptographyData: "DecryptData" },
  DecryptDataOutput: { PaymentCryptographyData: "DecryptData" },
  EncryptDataInput: { PaymentCryptographyData: "EncryptData" },
  EncryptDataOutput: { PaymentCryptographyData: "EncryptData" },
  GenerateCardValidationDataInput: { PaymentCryptographyData: "GenerateCardValidationData" },
  GenerateCardValidationDataOutput: { PaymentCryptographyData: "GenerateCardValidationData" },
  GenerateMacInput: { PaymentCryptographyData: "GenerateMac" },
  GenerateMacOutput: { PaymentCryptographyData: "GenerateMac" },
  GeneratePinDataInput: { PaymentCryptographyData: "GeneratePinData" },
  GeneratePinDataOutput: { PaymentCryptographyData: "GeneratePinData" },
  ReEncryptDataInput: { PaymentCryptographyData: "ReEncryptData" },
  ReEncryptDataOutput: { PaymentCryptographyData: "ReEncryptData" },
  TranslatePinDataInput: { PaymentCryptographyData: "TranslatePinData" },
  TranslatePinDataOutput: { PaymentCryptographyData: "TranslatePinData" },
  VerifyAuthRequestCryptogramInput: { PaymentCryptographyData: "VerifyAuthRequestCryptogram" },
  VerifyAuthRequestCryptogramOutput: { PaymentCryptographyData: "VerifyAuthRequestCryptogram" },
  VerifyCardValidationDataInput: { PaymentCryptographyData: "VerifyCardValidationData" },
  VerifyCardValidationDataOutput: { PaymentCryptographyData: "VerifyCardValidationData" },
  VerifyMacInput: { PaymentCryptographyData: "VerifyMac" },
  VerifyMacOutput: { PaymentCryptographyData: "VerifyMac" },
  VerifyPinDataInput: { PaymentCryptographyData: "VerifyPinData" },
  VerifyPinDataOutput: { PaymentCryptographyData: "VerifyPinData" },
  AssociateOriginationIdentityResult: { PinpointSMSVoiceV2: "AssociateOriginationIdentity" },
  CreateConfigurationSetResult: { PinpointSMSVoiceV2: "CreateConfigurationSet" },
  CreateEventDestinationResult: { PinpointSMSVoiceV2: "CreateEventDestination" },
  CreateOptOutListResult: { PinpointSMSVoiceV2: "CreateOptOutList" },
  CreatePoolResult: { PinpointSMSVoiceV2: "CreatePool" },
  DeleteConfigurationSetResult: { PinpointSMSVoiceV2: "DeleteConfigurationSet" },
  DeleteDefaultMessageTypeResult: { PinpointSMSVoiceV2: "DeleteDefaultMessageType" },
  DeleteDefaultSenderIdResult: { PinpointSMSVoiceV2: "DeleteDefaultSenderId" },
  DeleteEventDestinationResult: { PinpointSMSVoiceV2: "DeleteEventDestination" },
  DeleteKeywordResult: { PinpointSMSVoiceV2: "DeleteKeyword" },
  DeleteOptOutListResult: { PinpointSMSVoiceV2: "DeleteOptOutList" },
  DeleteOptedOutNumberResult: { PinpointSMSVoiceV2: "DeleteOptedOutNumber" },
  DeletePoolResult: { PinpointSMSVoiceV2: "DeletePool" },
  DeleteTextMessageSpendLimitOverrideResult: {
    PinpointSMSVoiceV2: "DeleteTextMessageSpendLimitOverride",
  },
  DeleteVoiceMessageSpendLimitOverrideResult: {
    PinpointSMSVoiceV2: "DeleteVoiceMessageSpendLimitOverride",
  },
  DescribeAccountLimitsResult: { PinpointSMSVoiceV2: "DescribeAccountLimits" },
  DescribeConfigurationSetsResult: { PinpointSMSVoiceV2: "DescribeConfigurationSets" },
  DescribeKeywordsResult: { PinpointSMSVoiceV2: "DescribeKeywords" },
  DescribeOptOutListsResult: { PinpointSMSVoiceV2: "DescribeOptOutLists" },
  DescribeOptedOutNumbersResult: { PinpointSMSVoiceV2: "DescribeOptedOutNumbers" },
  DescribePhoneNumbersResult: { PinpointSMSVoiceV2: "DescribePhoneNumbers" },
  DescribePoolsResult: { PinpointSMSVoiceV2: "DescribePools" },
  DescribeSenderIdsResult: { PinpointSMSVoiceV2: "DescribeSenderIds" },
  DescribeSpendLimitsResult: { PinpointSMSVoiceV2: "DescribeSpendLimits" },
  DisassociateOriginationIdentityResult: { PinpointSMSVoiceV2: "DisassociateOriginationIdentity" },
  ListPoolOriginationIdentitiesResult: { PinpointSMSVoiceV2: "ListPoolOriginationIdentities" },
  PutKeywordResult: { PinpointSMSVoiceV2: "PutKeyword" },
  PutOptedOutNumberResult: { PinpointSMSVoiceV2: "PutOptedOutNumber" },
  ReleasePhoneNumberResult: { PinpointSMSVoiceV2: "ReleasePhoneNumber" },
  RequestPhoneNumberResult: { PinpointSMSVoiceV2: "RequestPhoneNumber" },
  SendTextMessageResult: { PinpointSMSVoiceV2: "SendTextMessage" },
  SendVoiceMessageResult: { PinpointSMSVoiceV2: "SendVoiceMessage" },
  SetDefaultMessageTypeResult: { PinpointSMSVoiceV2: "SetDefaultMessageType" },
  SetDefaultSenderIdResult: { PinpointSMSVoiceV2: "SetDefaultSenderId" },
  SetTextMessageSpendLimitOverrideResult: {
    PinpointSMSVoiceV2: "SetTextMessageSpendLimitOverride",
  },
  SetVoiceMessageSpendLimitOverrideResult: {
    PinpointSMSVoiceV2: "SetVoiceMessageSpendLimitOverride",
  },
  UpdateEventDestinationResult: { PinpointSMSVoiceV2: "UpdateEventDestination" },
  UpdatePhoneNumberResult: { PinpointSMSVoiceV2: "UpdatePhoneNumber" },
  UpdatePoolResult: { PinpointSMSVoiceV2: "UpdatePool" },
  DeleteLexiconInput: { Polly: "DeleteLexicon" },
  DeleteLexiconOutput: { Polly: "DeleteLexicon" },
  DescribeVoicesInput: { Polly: "DescribeVoices" },
  DescribeVoicesOutput: { Polly: "DescribeVoices" },
  GetLexiconInput: { Polly: "GetLexicon" },
  GetLexiconOutput: { Polly: "GetLexicon" },
  GetSpeechSynthesisTaskInput: { Polly: "GetSpeechSynthesisTask" },
  GetSpeechSynthesisTaskOutput: { Polly: "GetSpeechSynthesisTask" },
  ListLexiconsInput: { Polly: "ListLexicons" },
  ListLexiconsOutput: { Polly: "ListLexicons" },
  ListSpeechSynthesisTasksInput: { Polly: "ListSpeechSynthesisTasks" },
  ListSpeechSynthesisTasksOutput: { Polly: "ListSpeechSynthesisTasks" },
  PutLexiconInput: { Polly: "PutLexicon" },
  PutLexiconOutput: { Polly: "PutLexicon" },
  StartSpeechSynthesisTaskInput: { Polly: "StartSpeechSynthesisTask" },
  StartSpeechSynthesisTaskOutput: { Polly: "StartSpeechSynthesisTask" },
  SynthesizeSpeechInput: { Polly: "SynthesizeSpeech" },
  SynthesizeSpeechOutput: { Polly: "SynthesizeSpeech" },
  UpdateNetworkSiteResponse: { PrivateNetworks: "UpdateNetworkSitePlan" },
  AcceptEnvironmentAccountConnectionInput: { Proton: "AcceptEnvironmentAccountConnection" },
  AcceptEnvironmentAccountConnectionOutput: { Proton: "AcceptEnvironmentAccountConnection" },
  CancelComponentDeploymentInput: { Proton: "CancelComponentDeployment" },
  CancelComponentDeploymentOutput: { Proton: "CancelComponentDeployment" },
  CancelEnvironmentDeploymentInput: { Proton: "CancelEnvironmentDeployment" },
  CancelEnvironmentDeploymentOutput: { Proton: "CancelEnvironmentDeployment" },
  CancelServiceInstanceDeploymentInput: { Proton: "CancelServiceInstanceDeployment" },
  CancelServiceInstanceDeploymentOutput: { Proton: "CancelServiceInstanceDeployment" },
  CancelServicePipelineDeploymentInput: { Proton: "CancelServicePipelineDeployment" },
  CancelServicePipelineDeploymentOutput: { Proton: "CancelServicePipelineDeployment" },
  CreateComponentInput: { Proton: "CreateComponent" },
  CreateComponentOutput: { Proton: "CreateComponent" },
  CreateEnvironmentAccountConnectionInput: { Proton: "CreateEnvironmentAccountConnection" },
  CreateEnvironmentAccountConnectionOutput: { Proton: "CreateEnvironmentAccountConnection" },
  CreateEnvironmentTemplateInput: { Proton: "CreateEnvironmentTemplate" },
  CreateEnvironmentTemplateOutput: { Proton: "CreateEnvironmentTemplate" },
  CreateEnvironmentTemplateVersionInput: { Proton: "CreateEnvironmentTemplateVersion" },
  CreateEnvironmentTemplateVersionOutput: { Proton: "CreateEnvironmentTemplateVersion" },
  CreateServiceInput: { Proton: "CreateService" },
  CreateServiceOutput: { Proton: "CreateService" },
  CreateServiceInstanceInput: { Proton: "CreateServiceInstance" },
  CreateServiceInstanceOutput: { Proton: "CreateServiceInstance" },
  CreateServiceSyncConfigInput: { Proton: "CreateServiceSyncConfig" },
  CreateServiceSyncConfigOutput: { Proton: "CreateServiceSyncConfig" },
  CreateServiceTemplateInput: { Proton: "CreateServiceTemplate" },
  CreateServiceTemplateOutput: { Proton: "CreateServiceTemplate" },
  CreateServiceTemplateVersionInput: { Proton: "CreateServiceTemplateVersion" },
  CreateServiceTemplateVersionOutput: { Proton: "CreateServiceTemplateVersion" },
  CreateTemplateSyncConfigInput: { Proton: "CreateTemplateSyncConfig" },
  CreateTemplateSyncConfigOutput: { Proton: "CreateTemplateSyncConfig" },
  DeleteComponentInput: { Proton: "DeleteComponent" },
  DeleteComponentOutput: { Proton: "DeleteComponent" },
  DeleteDeploymentInput: { Proton: "DeleteDeployment" },
  DeleteDeploymentOutput: { Proton: "DeleteDeployment" },
  DeleteEnvironmentAccountConnectionInput: { Proton: "DeleteEnvironmentAccountConnection" },
  DeleteEnvironmentAccountConnectionOutput: { Proton: "DeleteEnvironmentAccountConnection" },
  DeleteEnvironmentTemplateInput: { Proton: "DeleteEnvironmentTemplate" },
  DeleteEnvironmentTemplateOutput: { Proton: "DeleteEnvironmentTemplate" },
  DeleteEnvironmentTemplateVersionInput: { Proton: "DeleteEnvironmentTemplateVersion" },
  DeleteEnvironmentTemplateVersionOutput: { Proton: "DeleteEnvironmentTemplateVersion" },
  DeleteServiceInput: { Proton: "DeleteService" },
  DeleteServiceOutput: { Proton: "DeleteService" },
  DeleteServiceSyncConfigInput: { Proton: "DeleteServiceSyncConfig" },
  DeleteServiceSyncConfigOutput: { Proton: "DeleteServiceSyncConfig" },
  DeleteServiceTemplateInput: { Proton: "DeleteServiceTemplate" },
  DeleteServiceTemplateOutput: { Proton: "DeleteServiceTemplate" },
  DeleteServiceTemplateVersionInput: { Proton: "DeleteServiceTemplateVersion" },
  DeleteServiceTemplateVersionOutput: { Proton: "DeleteServiceTemplateVersion" },
  DeleteTemplateSyncConfigInput: { Proton: "DeleteTemplateSyncConfig" },
  DeleteTemplateSyncConfigOutput: { Proton: "DeleteTemplateSyncConfig" },
  GetAccountSettingsInput: { Proton: "GetAccountSettings" },
  GetAccountSettingsOutput: { Proton: "GetAccountSettings" },
  GetComponentInput: { Proton: "GetComponent", SsmSap: "GetComponent" },
  GetComponentOutput: { Proton: "GetComponent", SsmSap: "GetComponent" },
  GetEnvironmentAccountConnectionInput: { Proton: "GetEnvironmentAccountConnection" },
  GetEnvironmentAccountConnectionOutput: { Proton: "GetEnvironmentAccountConnection" },
  GetEnvironmentTemplateInput: { Proton: "GetEnvironmentTemplate" },
  GetEnvironmentTemplateOutput: { Proton: "GetEnvironmentTemplate" },
  GetEnvironmentTemplateVersionInput: { Proton: "GetEnvironmentTemplateVersion" },
  GetEnvironmentTemplateVersionOutput: { Proton: "GetEnvironmentTemplateVersion" },
  GetRepositorySyncStatusInput: { Proton: "GetRepositorySyncStatus" },
  GetRepositorySyncStatusOutput: { Proton: "GetRepositorySyncStatus" },
  GetResourcesSummaryInput: { Proton: "GetResourcesSummary" },
  GetResourcesSummaryOutput: { Proton: "GetResourcesSummary" },
  GetServiceInput: { Proton: "GetService" },
  GetServiceOutput: { Proton: "GetService" },
  GetServiceInstanceInput: { Proton: "GetServiceInstance" },
  GetServiceInstanceOutput: { Proton: "GetServiceInstance" },
  GetServiceInstanceSyncStatusInput: { Proton: "GetServiceInstanceSyncStatus" },
  GetServiceInstanceSyncStatusOutput: { Proton: "GetServiceInstanceSyncStatus" },
  GetServiceSyncBlockerSummaryInput: { Proton: "GetServiceSyncBlockerSummary" },
  GetServiceSyncBlockerSummaryOutput: { Proton: "GetServiceSyncBlockerSummary" },
  GetServiceSyncConfigInput: { Proton: "GetServiceSyncConfig" },
  GetServiceSyncConfigOutput: { Proton: "GetServiceSyncConfig" },
  GetServiceTemplateInput: { Proton: "GetServiceTemplate" },
  GetServiceTemplateOutput: { Proton: "GetServiceTemplate" },
  GetServiceTemplateVersionInput: { Proton: "GetServiceTemplateVersion" },
  GetServiceTemplateVersionOutput: { Proton: "GetServiceTemplateVersion" },
  GetTemplateSyncConfigInput: { Proton: "GetTemplateSyncConfig" },
  GetTemplateSyncConfigOutput: { Proton: "GetTemplateSyncConfig" },
  GetTemplateSyncStatusInput: { Proton: "GetTemplateSyncStatus" },
  GetTemplateSyncStatusOutput: { Proton: "GetTemplateSyncStatus" },
  ListComponentOutputsInput: { Proton: "ListComponentOutputs" },
  ListComponentOutputsOutput: { Proton: "ListComponentOutputs" },
  ListComponentProvisionedResourcesInput: { Proton: "ListComponentProvisionedResources" },
  ListComponentProvisionedResourcesOutput: { Proton: "ListComponentProvisionedResources" },
  ListComponentsInput: { Proton: "ListComponents", SsmSap: "ListComponents" },
  ListComponentsOutput: { Proton: "ListComponents", SsmSap: "ListComponents" },
  ListEnvironmentAccountConnectionsInput: { Proton: "ListEnvironmentAccountConnections" },
  ListEnvironmentAccountConnectionsOutput: { Proton: "ListEnvironmentAccountConnections" },
  ListEnvironmentOutputsInput: { Proton: "ListEnvironmentOutputs" },
  ListEnvironmentOutputsOutput: { Proton: "ListEnvironmentOutputs" },
  ListEnvironmentProvisionedResourcesInput: { Proton: "ListEnvironmentProvisionedResources" },
  ListEnvironmentProvisionedResourcesOutput: { Proton: "ListEnvironmentProvisionedResources" },
  ListEnvironmentTemplateVersionsInput: { Proton: "ListEnvironmentTemplateVersions" },
  ListEnvironmentTemplateVersionsOutput: { Proton: "ListEnvironmentTemplateVersions" },
  ListEnvironmentTemplatesInput: { Proton: "ListEnvironmentTemplates" },
  ListEnvironmentTemplatesOutput: { Proton: "ListEnvironmentTemplates" },
  ListRepositorySyncDefinitionsInput: { Proton: "ListRepositorySyncDefinitions" },
  ListRepositorySyncDefinitionsOutput: { Proton: "ListRepositorySyncDefinitions" },
  ListServiceInstanceOutputsInput: { Proton: "ListServiceInstanceOutputs" },
  ListServiceInstanceOutputsOutput: { Proton: "ListServiceInstanceOutputs" },
  ListServiceInstanceProvisionedResourcesInput: {
    Proton: "ListServiceInstanceProvisionedResources",
  },
  ListServiceInstanceProvisionedResourcesOutput: {
    Proton: "ListServiceInstanceProvisionedResources",
  },
  ListServiceInstancesInput: { Proton: "ListServiceInstances" },
  ListServiceInstancesOutput: { Proton: "ListServiceInstances" },
  ListServicePipelineOutputsInput: { Proton: "ListServicePipelineOutputs" },
  ListServicePipelineOutputsOutput: { Proton: "ListServicePipelineOutputs" },
  ListServicePipelineProvisionedResourcesInput: {
    Proton: "ListServicePipelineProvisionedResources",
  },
  ListServicePipelineProvisionedResourcesOutput: {
    Proton: "ListServicePipelineProvisionedResources",
  },
  ListServiceTemplateVersionsInput: { Proton: "ListServiceTemplateVersions" },
  ListServiceTemplateVersionsOutput: { Proton: "ListServiceTemplateVersions" },
  ListServiceTemplatesInput: { Proton: "ListServiceTemplates" },
  ListServiceTemplatesOutput: { Proton: "ListServiceTemplates" },
  ListServicesInput: { Proton: "ListServices" },
  ListServicesOutput: { Proton: "ListServices" },
  NotifyResourceDeploymentStatusChangeInput: { Proton: "NotifyResourceDeploymentStatusChange" },
  NotifyResourceDeploymentStatusChangeOutput: { Proton: "NotifyResourceDeploymentStatusChange" },
  RejectEnvironmentAccountConnectionInput: { Proton: "RejectEnvironmentAccountConnection" },
  RejectEnvironmentAccountConnectionOutput: { Proton: "RejectEnvironmentAccountConnection" },
  UpdateAccountSettingsInput: {
    Proton: "UpdateAccountSettings",
    ResourceGroups: "UpdateAccountSettings",
  },
  UpdateAccountSettingsOutput: {
    Proton: "UpdateAccountSettings",
    ResourceGroups: "UpdateAccountSettings",
  },
  UpdateComponentInput: { Proton: "UpdateComponent" },
  UpdateComponentOutput: { Proton: "UpdateComponent" },
  UpdateEnvironmentAccountConnectionInput: { Proton: "UpdateEnvironmentAccountConnection" },
  UpdateEnvironmentAccountConnectionOutput: { Proton: "UpdateEnvironmentAccountConnection" },
  UpdateEnvironmentTemplateInput: { Proton: "UpdateEnvironmentTemplate" },
  UpdateEnvironmentTemplateOutput: { Proton: "UpdateEnvironmentTemplate" },
  UpdateEnvironmentTemplateVersionInput: { Proton: "UpdateEnvironmentTemplateVersion" },
  UpdateEnvironmentTemplateVersionOutput: { Proton: "UpdateEnvironmentTemplateVersion" },
  UpdateServiceInput: { Proton: "UpdateService" },
  UpdateServiceOutput: { Proton: "UpdateService" },
  UpdateServiceInstanceInput: { Proton: "UpdateServiceInstance" },
  UpdateServiceInstanceOutput: { Proton: "UpdateServiceInstance" },
  UpdateServicePipelineInput: { Proton: "UpdateServicePipeline" },
  UpdateServicePipelineOutput: { Proton: "UpdateServicePipeline" },
  UpdateServiceSyncBlockerInput: { Proton: "UpdateServiceSyncBlocker" },
  UpdateServiceSyncBlockerOutput: { Proton: "UpdateServiceSyncBlocker" },
  UpdateServiceSyncConfigInput: { Proton: "UpdateServiceSyncConfig" },
  UpdateServiceSyncConfigOutput: { Proton: "UpdateServiceSyncConfig" },
  UpdateServiceTemplateInput: { Proton: "UpdateServiceTemplate" },
  UpdateServiceTemplateOutput: { Proton: "UpdateServiceTemplate" },
  UpdateServiceTemplateVersionInput: { Proton: "UpdateServiceTemplateVersion" },
  UpdateServiceTemplateVersionOutput: { Proton: "UpdateServiceTemplateVersion" },
  UpdateTemplateSyncConfigInput: { Proton: "UpdateTemplateSyncConfig" },
  UpdateTemplateSyncConfigOutput: { Proton: "UpdateTemplateSyncConfig" },
  SendCommandResult: { QLDBSession: "SendCommand", SSM: "SendCommand" },
  AddRoleToDBInstanceMessage: { RDS: "AddRoleToDBInstance" },
  AuthorizeDBSecurityGroupIngressMessage: { RDS: "AuthorizeDBSecurityGroupIngress" },
  AuthorizeDBSecurityGroupIngressResult: { RDS: "AuthorizeDBSecurityGroupIngress" },
  BacktrackDBClusterMessage: { RDS: "BacktrackDBCluster" },
  DBClusterBacktrack: { RDS: "BacktrackDBCluster" },
  CancelExportTaskMessage: { RDS: "CancelExportTask" },
  ExportTask: { RDS: "StartExportTask" },
  CopyDBSnapshotMessage: { RDS: "CopyDBSnapshot" },
  CopyDBSnapshotResult: { RDS: "CopyDBSnapshot" },
  CopyOptionGroupMessage: { RDS: "CopyOptionGroup" },
  CopyOptionGroupResult: { RDS: "CopyOptionGroup" },
  CreateCustomDBEngineVersionMessage: { RDS: "CreateCustomDBEngineVersion" },
  DBEngineVersion: { RDS: "ModifyCustomDBEngineVersion" },
  DBClusterEndpoint: { RDS: "ModifyDBClusterEndpoint" },
  CreateDBInstanceReadReplicaMessage: { RDS: "CreateDBInstanceReadReplica" },
  CreateDBInstanceReadReplicaResult: { RDS: "CreateDBInstanceReadReplica" },
  CreateDBSecurityGroupMessage: { RDS: "CreateDBSecurityGroup" },
  CreateDBSecurityGroupResult: { RDS: "CreateDBSecurityGroup" },
  CreateDBSnapshotMessage: { RDS: "CreateDBSnapshot" },
  CreateDBSnapshotResult: { RDS: "CreateDBSnapshot" },
  CreateOptionGroupMessage: { RDS: "CreateOptionGroup" },
  CreateOptionGroupResult: { RDS: "CreateOptionGroup" },
  DeleteCustomDBEngineVersionMessage: { RDS: "DeleteCustomDBEngineVersion" },
  DeleteDBInstanceAutomatedBackupMessage: { RDS: "DeleteDBInstanceAutomatedBackup" },
  DeleteDBInstanceAutomatedBackupResult: { RDS: "DeleteDBInstanceAutomatedBackup" },
  DeleteDBSecurityGroupMessage: { RDS: "DeleteDBSecurityGroup" },
  DeleteDBSnapshotMessage: { RDS: "DeleteDBSnapshot" },
  DeleteDBSnapshotResult: { RDS: "DeleteDBSnapshot" },
  DeleteOptionGroupMessage: { RDS: "DeleteOptionGroup" },
  AccountAttributesMessage: { RDS: "DescribeAccountAttributes" },
  DescribeDBClusterBacktracksMessage: { RDS: "DescribeDBClusterBacktracks" },
  DBClusterBacktrackMessage: { RDS: "DescribeDBClusterBacktracks" },
  DescribeDBInstanceAutomatedBackupsMessage: { RDS: "DescribeDBInstanceAutomatedBackups" },
  DBInstanceAutomatedBackupMessage: { RDS: "DescribeDBInstanceAutomatedBackups" },
  DescribeDBLogFilesMessage: { RDS: "DescribeDBLogFiles" },
  DescribeDBSecurityGroupsMessage: { RDS: "DescribeDBSecurityGroups" },
  DBSecurityGroupMessage: { RDS: "DescribeDBSecurityGroups" },
  DescribeDBSnapshotAttributesMessage: { RDS: "DescribeDBSnapshotAttributes" },
  DescribeDBSnapshotAttributesResult: { RDS: "DescribeDBSnapshotAttributes" },
  DescribeDBSnapshotsMessage: { RDS: "DescribeDBSnapshots" },
  DBSnapshotMessage: { RDS: "DescribeDBSnapshots" },
  DescribeExportTasksMessage: { RDS: "DescribeExportTasks" },
  ExportTasksMessage: { RDS: "DescribeExportTasks" },
  DescribeOptionGroupOptionsMessage: { RDS: "DescribeOptionGroupOptions" },
  OptionGroupOptionsMessage: { RDS: "DescribeOptionGroupOptions" },
  DescribeOptionGroupsMessage: { RDS: "DescribeOptionGroups" },
  OptionGroups: { RDS: "DescribeOptionGroups" },
  DescribeReservedDBInstancesMessage: { RDS: "DescribeReservedDBInstances" },
  ReservedDBInstanceMessage: { RDS: "DescribeReservedDBInstances" },
  DescribeReservedDBInstancesOfferingsMessage: { RDS: "DescribeReservedDBInstancesOfferings" },
  ReservedDBInstancesOfferingMessage: { RDS: "DescribeReservedDBInstancesOfferings" },
  DescribeSourceRegionsMessage: { RDS: "DescribeSourceRegions" },
  SourceRegionMessage: { RDS: "DescribeSourceRegions" },
  DownloadDBLogFilePortionMessage: { RDS: "DownloadDBLogFilePortion" },
  DownloadDBLogFilePortionDetails: { RDS: "DownloadDBLogFilePortion" },
  ModifyCertificatesMessage: { RDS: "ModifyCertificates" },
  ModifyCertificatesResult: { RDS: "ModifyCertificates" },
  ModifyCurrentDBClusterCapacityMessage: { RDS: "ModifyCurrentDBClusterCapacity" },
  DBClusterCapacityInfo: { RDS: "ModifyCurrentDBClusterCapacity" },
  ModifyCustomDBEngineVersionMessage: { RDS: "ModifyCustomDBEngineVersion" },
  ModifyDBSnapshotMessage: { RDS: "ModifyDBSnapshot" },
  ModifyDBSnapshotResult: { RDS: "ModifyDBSnapshot" },
  ModifyDBSnapshotAttributeMessage: { RDS: "ModifyDBSnapshotAttribute" },
  ModifyDBSnapshotAttributeResult: { RDS: "ModifyDBSnapshotAttribute" },
  ModifyOptionGroupMessage: { RDS: "ModifyOptionGroup" },
  ModifyOptionGroupResult: { RDS: "ModifyOptionGroup" },
  PromoteReadReplicaMessage: { RDS: "PromoteReadReplica" },
  PromoteReadReplicaResult: { RDS: "PromoteReadReplica" },
  PurchaseReservedDBInstancesOfferingMessage: { RDS: "PurchaseReservedDBInstancesOffering" },
  PurchaseReservedDBInstancesOfferingResult: { RDS: "PurchaseReservedDBInstancesOffering" },
  RebootDBClusterMessage: { RDS: "RebootDBCluster" },
  RebootDBClusterResult: { RDS: "RebootDBCluster" },
  RemoveRoleFromDBInstanceMessage: { RDS: "RemoveRoleFromDBInstance" },
  RestoreDBClusterFromS3Message: { RDS: "RestoreDBClusterFromS3" },
  RestoreDBClusterFromS3Result: { RDS: "RestoreDBClusterFromS3" },
  RestoreDBInstanceFromDBSnapshotMessage: { RDS: "RestoreDBInstanceFromDBSnapshot" },
  RestoreDBInstanceFromDBSnapshotResult: { RDS: "RestoreDBInstanceFromDBSnapshot" },
  RestoreDBInstanceFromS3Message: { RDS: "RestoreDBInstanceFromS3" },
  RestoreDBInstanceFromS3Result: { RDS: "RestoreDBInstanceFromS3" },
  RestoreDBInstanceToPointInTimeMessage: { RDS: "RestoreDBInstanceToPointInTime" },
  RestoreDBInstanceToPointInTimeResult: { RDS: "RestoreDBInstanceToPointInTime" },
  RevokeDBSecurityGroupIngressMessage: { RDS: "RevokeDBSecurityGroupIngress" },
  RevokeDBSecurityGroupIngressResult: { RDS: "RevokeDBSecurityGroupIngress" },
  StartDBInstanceMessage: { RDS: "StartDBInstance" },
  StartDBInstanceResult: { RDS: "StartDBInstance" },
  StartDBInstanceAutomatedBackupsReplicationMessage: {
    RDS: "StartDBInstanceAutomatedBackupsReplication",
  },
  StartDBInstanceAutomatedBackupsReplicationResult: {
    RDS: "StartDBInstanceAutomatedBackupsReplication",
  },
  StartExportTaskMessage: { RDS: "StartExportTask" },
  StopDBInstanceMessage: { RDS: "StopDBInstance" },
  StopDBInstanceResult: { RDS: "StopDBInstance" },
  StopDBInstanceAutomatedBackupsReplicationMessage: {
    RDS: "StopDBInstanceAutomatedBackupsReplication",
  },
  StopDBInstanceAutomatedBackupsReplicationResult: {
    RDS: "StopDBInstanceAutomatedBackupsReplication",
  },
  SwitchoverReadReplicaMessage: { RDS: "SwitchoverReadReplica" },
  SwitchoverReadReplicaResult: { RDS: "SwitchoverReadReplica" },
  AcceptReservedNodeExchangeInputMessage: { Redshift: "AcceptReservedNodeExchange" },
  AcceptReservedNodeExchangeOutputMessage: { Redshift: "AcceptReservedNodeExchange" },
  PartnerIntegrationInputMessage: { Redshift: "DeletePartner" },
  PartnerIntegrationOutputMessage: { Redshift: "UpdatePartnerStatus" },
  AssociateDataShareConsumerMessage: { Redshift: "AssociateDataShareConsumer" },
  DataShare: { Redshift: "RejectDataShare" },
  AuthorizeClusterSecurityGroupIngressMessage: { Redshift: "AuthorizeClusterSecurityGroupIngress" },
  AuthorizeClusterSecurityGroupIngressResult: { Redshift: "AuthorizeClusterSecurityGroupIngress" },
  AuthorizeDataShareMessage: { Redshift: "AuthorizeDataShare" },
  AuthorizeEndpointAccessMessage: { Redshift: "AuthorizeEndpointAccess" },
  EndpointAuthorization: { Redshift: "RevokeEndpointAccess" },
  AuthorizeSnapshotAccessMessage: { Redshift: "AuthorizeSnapshotAccess" },
  AuthorizeSnapshotAccessResult: { Redshift: "AuthorizeSnapshotAccess" },
  BatchDeleteClusterSnapshotsResult: { Redshift: "BatchDeleteClusterSnapshots" },
  BatchModifyClusterSnapshotsMessage: { Redshift: "BatchModifyClusterSnapshots" },
  BatchModifyClusterSnapshotsOutputMessage: { Redshift: "BatchModifyClusterSnapshots" },
  CancelResizeMessage: { Redshift: "CancelResize" },
  ResizeProgressMessage: { Redshift: "DescribeResize" },
  CopyClusterSnapshotMessage: { Redshift: "CopyClusterSnapshot" },
  CopyClusterSnapshotResult: { Redshift: "CopyClusterSnapshot" },
  CreateAuthenticationProfileMessage: { Redshift: "CreateAuthenticationProfile" },
  CreateAuthenticationProfileResult: { Redshift: "CreateAuthenticationProfile" },
  CreateClusterMessage: { Redshift: "CreateCluster" },
  CreateClusterResult: { Redshift: "CreateCluster", Snowball: "CreateCluster" },
  CreateClusterParameterGroupMessage: { Redshift: "CreateClusterParameterGroup" },
  CreateClusterParameterGroupResult: { Redshift: "CreateClusterParameterGroup" },
  CreateClusterSecurityGroupMessage: { Redshift: "CreateClusterSecurityGroup" },
  CreateClusterSecurityGroupResult: { Redshift: "CreateClusterSecurityGroup" },
  CreateClusterSnapshotMessage: { Redshift: "CreateClusterSnapshot" },
  CreateClusterSnapshotResult: { Redshift: "CreateClusterSnapshot" },
  CreateClusterSubnetGroupMessage: { Redshift: "CreateClusterSubnetGroup" },
  CreateClusterSubnetGroupResult: { Redshift: "CreateClusterSubnetGroup" },
  CreateCustomDomainAssociationMessage: { Redshift: "CreateCustomDomainAssociation" },
  CreateCustomDomainAssociationResult: { Redshift: "CreateCustomDomainAssociation" },
  CreateEndpointAccessMessage: { Redshift: "CreateEndpointAccess" },
  EndpointAccess: { Redshift: "ModifyEndpointAccess" },
  CreateHsmClientCertificateMessage: { Redshift: "CreateHsmClientCertificate" },
  CreateHsmClientCertificateResult: { Redshift: "CreateHsmClientCertificate" },
  CreateHsmConfigurationMessage: { Redshift: "CreateHsmConfiguration" },
  CreateHsmConfigurationResult: { Redshift: "CreateHsmConfiguration" },
  CreateScheduledActionMessage: { Redshift: "CreateScheduledAction" },
  ScheduledAction: { Redshift: "ModifyScheduledAction" },
  CreateSnapshotCopyGrantMessage: { Redshift: "CreateSnapshotCopyGrant" },
  CreateSnapshotCopyGrantResult: { Redshift: "CreateSnapshotCopyGrant" },
  CreateSnapshotScheduleMessage: { Redshift: "CreateSnapshotSchedule" },
  SnapshotSchedule: { Redshift: "ModifySnapshotSchedule" },
  CreateTagsMessage: { Redshift: "CreateTags" },
  CreateUsageLimitMessage: { Redshift: "CreateUsageLimit" },
  UsageLimit: { Redshift: "ModifyUsageLimit" },
  DeauthorizeDataShareMessage: { Redshift: "DeauthorizeDataShare" },
  DeleteAuthenticationProfileMessage: { Redshift: "DeleteAuthenticationProfile" },
  DeleteAuthenticationProfileResult: { Redshift: "DeleteAuthenticationProfile" },
  DeleteClusterMessage: { Redshift: "DeleteCluster" },
  DeleteClusterResult: { Redshift: "DeleteCluster" },
  DeleteClusterParameterGroupMessage: { Redshift: "DeleteClusterParameterGroup" },
  DeleteClusterSecurityGroupMessage: { Redshift: "DeleteClusterSecurityGroup" },
  DeleteClusterSnapshotMessage: { Redshift: "DeleteClusterSnapshot" },
  DeleteClusterSnapshotResult: { Redshift: "DeleteClusterSnapshot" },
  DeleteClusterSubnetGroupMessage: { Redshift: "DeleteClusterSubnetGroup" },
  DeleteCustomDomainAssociationMessage: { Redshift: "DeleteCustomDomainAssociation" },
  DeleteEndpointAccessMessage: { Redshift: "DeleteEndpointAccess" },
  DeleteHsmClientCertificateMessage: { Redshift: "DeleteHsmClientCertificate" },
  DeleteHsmConfigurationMessage: { Redshift: "DeleteHsmConfiguration" },
  DeleteScheduledActionMessage: { Redshift: "DeleteScheduledAction" },
  DeleteSnapshotCopyGrantMessage: { Redshift: "DeleteSnapshotCopyGrant" },
  DeleteSnapshotScheduleMessage: { Redshift: "DeleteSnapshotSchedule" },
  DeleteTagsMessage: { Redshift: "DeleteTags" },
  DeleteUsageLimitMessage: { Redshift: "DeleteUsageLimit" },
  AccountAttributeList: { Redshift: "DescribeAccountAttributes" },
  DescribeAuthenticationProfilesMessage: { Redshift: "DescribeAuthenticationProfiles" },
  DescribeAuthenticationProfilesResult: { Redshift: "DescribeAuthenticationProfiles" },
  DescribeClusterDbRevisionsMessage: { Redshift: "DescribeClusterDbRevisions" },
  ClusterDbRevisionsMessage: { Redshift: "DescribeClusterDbRevisions" },
  DescribeClusterParameterGroupsMessage: { Redshift: "DescribeClusterParameterGroups" },
  ClusterParameterGroupsMessage: { Redshift: "DescribeClusterParameterGroups" },
  DescribeClusterParametersMessage: { Redshift: "DescribeClusterParameters" },
  ClusterParameterGroupDetails: { Redshift: "DescribeClusterParameters" },
  DescribeClusterSecurityGroupsMessage: { Redshift: "DescribeClusterSecurityGroups" },
  ClusterSecurityGroupMessage: { Redshift: "DescribeClusterSecurityGroups" },
  DescribeClusterSnapshotsMessage: { Redshift: "DescribeClusterSnapshots" },
  SnapshotMessage: { Redshift: "DescribeClusterSnapshots" },
  DescribeClusterSubnetGroupsMessage: { Redshift: "DescribeClusterSubnetGroups" },
  ClusterSubnetGroupMessage: { Redshift: "DescribeClusterSubnetGroups" },
  DescribeClusterTracksMessage: { Redshift: "DescribeClusterTracks" },
  TrackListMessage: { Redshift: "DescribeClusterTracks" },
  DescribeClusterVersionsMessage: { Redshift: "DescribeClusterVersions" },
  ClusterVersionsMessage: { Redshift: "DescribeClusterVersions" },
  DescribeClustersMessage: { Redshift: "DescribeClusters" },
  ClustersMessage: { Redshift: "DescribeClusters" },
  DescribeCustomDomainAssociationsMessage: { Redshift: "DescribeCustomDomainAssociations" },
  CustomDomainAssociationsMessage: { Redshift: "DescribeCustomDomainAssociations" },
  DescribeDataSharesMessage: { Redshift: "DescribeDataShares" },
  DescribeDataSharesResult: { Redshift: "DescribeDataShares" },
  DescribeDataSharesForConsumerMessage: { Redshift: "DescribeDataSharesForConsumer" },
  DescribeDataSharesForConsumerResult: { Redshift: "DescribeDataSharesForConsumer" },
  DescribeDataSharesForProducerMessage: { Redshift: "DescribeDataSharesForProducer" },
  DescribeDataSharesForProducerResult: { Redshift: "DescribeDataSharesForProducer" },
  DescribeDefaultClusterParametersMessage: { Redshift: "DescribeDefaultClusterParameters" },
  DescribeDefaultClusterParametersResult: { Redshift: "DescribeDefaultClusterParameters" },
  DescribeEndpointAccessMessage: { Redshift: "DescribeEndpointAccess" },
  EndpointAccessList: { Redshift: "DescribeEndpointAccess" },
  DescribeEndpointAuthorizationMessage: { Redshift: "DescribeEndpointAuthorization" },
  EndpointAuthorizationList: { Redshift: "DescribeEndpointAuthorization" },
  DescribeHsmClientCertificatesMessage: { Redshift: "DescribeHsmClientCertificates" },
  HsmClientCertificateMessage: { Redshift: "DescribeHsmClientCertificates" },
  DescribeHsmConfigurationsMessage: { Redshift: "DescribeHsmConfigurations" },
  HsmConfigurationMessage: { Redshift: "DescribeHsmConfigurations" },
  DescribeLoggingStatusMessage: { Redshift: "DescribeLoggingStatus" },
  LoggingStatus: { Redshift: "EnableLogging" },
  DescribeNodeConfigurationOptionsMessage: { Redshift: "DescribeNodeConfigurationOptions" },
  NodeConfigurationOptionsMessage: { Redshift: "DescribeNodeConfigurationOptions" },
  DescribeOrderableClusterOptionsMessage: { Redshift: "DescribeOrderableClusterOptions" },
  OrderableClusterOptionsMessage: { Redshift: "DescribeOrderableClusterOptions" },
  DescribePartnersInputMessage: { Redshift: "DescribePartners" },
  DescribePartnersOutputMessage: { Redshift: "DescribePartners" },
  DescribeReservedNodeExchangeStatusInputMessage: {
    Redshift: "DescribeReservedNodeExchangeStatus",
  },
  DescribeReservedNodeExchangeStatusOutputMessage: {
    Redshift: "DescribeReservedNodeExchangeStatus",
  },
  DescribeReservedNodeOfferingsMessage: { Redshift: "DescribeReservedNodeOfferings" },
  ReservedNodeOfferingsMessage: { Redshift: "DescribeReservedNodeOfferings" },
  DescribeReservedNodesMessage: { Redshift: "DescribeReservedNodes" },
  ReservedNodesMessage: { Redshift: "DescribeReservedNodes" },
  DescribeResizeMessage: { Redshift: "DescribeResize" },
  DescribeScheduledActionsMessage: { Redshift: "DescribeScheduledActions" },
  ScheduledActionsMessage: { Redshift: "DescribeScheduledActions" },
  DescribeSnapshotCopyGrantsMessage: { Redshift: "DescribeSnapshotCopyGrants" },
  SnapshotCopyGrantMessage: { Redshift: "DescribeSnapshotCopyGrants" },
  DescribeSnapshotSchedulesMessage: { Redshift: "DescribeSnapshotSchedules" },
  DescribeSnapshotSchedulesOutputMessage: { Redshift: "DescribeSnapshotSchedules" },
  DescribeTableRestoreStatusMessage: { Redshift: "DescribeTableRestoreStatus" },
  TableRestoreStatusMessage: { Redshift: "DescribeTableRestoreStatus" },
  DescribeTagsMessage: { Redshift: "DescribeTags" },
  TaggedResourceListMessage: { Redshift: "DescribeTags" },
  DescribeUsageLimitsMessage: { Redshift: "DescribeUsageLimits" },
  UsageLimitList: { Redshift: "DescribeUsageLimits" },
  DisableLoggingMessage: { Redshift: "DisableLogging" },
  DisableSnapshotCopyMessage: { Redshift: "DisableSnapshotCopy" },
  DisableSnapshotCopyResult: { Redshift: "DisableSnapshotCopy" },
  DisassociateDataShareConsumerMessage: { Redshift: "DisassociateDataShareConsumer" },
  EnableLoggingMessage: { Redshift: "EnableLogging" },
  EnableSnapshotCopyMessage: { Redshift: "EnableSnapshotCopy" },
  EnableSnapshotCopyResult: { Redshift: "EnableSnapshotCopy" },
  GetClusterCredentialsMessage: { Redshift: "GetClusterCredentials" },
  ClusterCredentials: { Redshift: "GetClusterCredentials" },
  GetClusterCredentialsWithIAMMessage: { Redshift: "GetClusterCredentialsWithIAM" },
  ClusterExtendedCredentials: { Redshift: "GetClusterCredentialsWithIAM" },
  GetReservedNodeExchangeConfigurationOptionsInputMessage: {
    Redshift: "GetReservedNodeExchangeConfigurationOptions",
  },
  GetReservedNodeExchangeConfigurationOptionsOutputMessage: {
    Redshift: "GetReservedNodeExchangeConfigurationOptions",
  },
  GetReservedNodeExchangeOfferingsInputMessage: { Redshift: "GetReservedNodeExchangeOfferings" },
  GetReservedNodeExchangeOfferingsOutputMessage: { Redshift: "GetReservedNodeExchangeOfferings" },
  ModifyAquaInputMessage: { Redshift: "ModifyAquaConfiguration" },
  ModifyAquaOutputMessage: { Redshift: "ModifyAquaConfiguration" },
  ModifyAuthenticationProfileMessage: { Redshift: "ModifyAuthenticationProfile" },
  ModifyAuthenticationProfileResult: { Redshift: "ModifyAuthenticationProfile" },
  ModifyClusterMessage: { Redshift: "ModifyCluster" },
  ModifyClusterResult: { Redshift: "ModifyCluster" },
  ModifyClusterDbRevisionMessage: { Redshift: "ModifyClusterDbRevision" },
  ModifyClusterDbRevisionResult: { Redshift: "ModifyClusterDbRevision" },
  ModifyClusterIamRolesMessage: { Redshift: "ModifyClusterIamRoles" },
  ModifyClusterIamRolesResult: { Redshift: "ModifyClusterIamRoles" },
  ModifyClusterMaintenanceMessage: { Redshift: "ModifyClusterMaintenance" },
  ModifyClusterMaintenanceResult: { Redshift: "ModifyClusterMaintenance" },
  ModifyClusterParameterGroupMessage: { Redshift: "ModifyClusterParameterGroup" },
  ClusterParameterGroupNameMessage: { Redshift: "ResetClusterParameterGroup" },
  ModifyClusterSnapshotMessage: { Redshift: "ModifyClusterSnapshot" },
  ModifyClusterSnapshotResult: { Redshift: "ModifyClusterSnapshot" },
  ModifyClusterSnapshotScheduleMessage: { Redshift: "ModifyClusterSnapshotSchedule" },
  ModifyClusterSubnetGroupMessage: { Redshift: "ModifyClusterSubnetGroup" },
  ModifyClusterSubnetGroupResult: { Redshift: "ModifyClusterSubnetGroup" },
  ModifyCustomDomainAssociationMessage: { Redshift: "ModifyCustomDomainAssociation" },
  ModifyCustomDomainAssociationResult: { Redshift: "ModifyCustomDomainAssociation" },
  ModifyEndpointAccessMessage: { Redshift: "ModifyEndpointAccess" },
  ModifyScheduledActionMessage: { Redshift: "ModifyScheduledAction" },
  ModifySnapshotCopyRetentionPeriodMessage: { Redshift: "ModifySnapshotCopyRetentionPeriod" },
  ModifySnapshotCopyRetentionPeriodResult: { Redshift: "ModifySnapshotCopyRetentionPeriod" },
  ModifySnapshotScheduleMessage: { Redshift: "ModifySnapshotSchedule" },
  ModifyUsageLimitMessage: { Redshift: "ModifyUsageLimit" },
  PauseClusterMessage: { Redshift: "PauseCluster" },
  PauseClusterResult: { Redshift: "PauseCluster" },
  PurchaseReservedNodeOfferingMessage: { Redshift: "PurchaseReservedNodeOffering" },
  PurchaseReservedNodeOfferingResult: { Redshift: "PurchaseReservedNodeOffering" },
  RebootClusterMessage: { Redshift: "RebootCluster" },
  RebootClusterResult: { Redshift: "RebootCluster" },
  RejectDataShareMessage: { Redshift: "RejectDataShare" },
  ResetClusterParameterGroupMessage: { Redshift: "ResetClusterParameterGroup" },
  ResizeClusterMessage: { Redshift: "ResizeCluster" },
  ResizeClusterResult: { Redshift: "ResizeCluster" },
  RestoreFromClusterSnapshotMessage: { Redshift: "RestoreFromClusterSnapshot" },
  RestoreFromClusterSnapshotResult: { Redshift: "RestoreFromClusterSnapshot" },
  RestoreTableFromClusterSnapshotMessage: { Redshift: "RestoreTableFromClusterSnapshot" },
  RestoreTableFromClusterSnapshotResult: { Redshift: "RestoreTableFromClusterSnapshot" },
  ResumeClusterMessage: { Redshift: "ResumeCluster" },
  ResumeClusterResult: { Redshift: "ResumeCluster" },
  RevokeClusterSecurityGroupIngressMessage: { Redshift: "RevokeClusterSecurityGroupIngress" },
  RevokeClusterSecurityGroupIngressResult: { Redshift: "RevokeClusterSecurityGroupIngress" },
  RevokeEndpointAccessMessage: { Redshift: "RevokeEndpointAccess" },
  RevokeSnapshotAccessMessage: { Redshift: "RevokeSnapshotAccess" },
  RevokeSnapshotAccessResult: { Redshift: "RevokeSnapshotAccess" },
  RotateEncryptionKeyMessage: { Redshift: "RotateEncryptionKey" },
  RotateEncryptionKeyResult: { Redshift: "RotateEncryptionKey" },
  UpdatePartnerStatusInputMessage: { Redshift: "UpdatePartnerStatus" },
  AssociateDefaultViewInput: { ResourceExplorer2: "AssociateDefaultView" },
  AssociateDefaultViewOutput: { ResourceExplorer2: "AssociateDefaultView" },
  BatchGetViewInput: { ResourceExplorer2: "BatchGetView" },
  BatchGetViewOutput: { ResourceExplorer2: "BatchGetView" },
  CreateIndexInput: { ResourceExplorer2: "CreateIndex" },
  CreateIndexOutput: { ResourceExplorer2: "CreateIndex" },
  CreateViewInput: { ResourceExplorer2: "CreateView" },
  CreateViewOutput: { ResourceExplorer2: "CreateView" },
  DeleteIndexInput: { ResourceExplorer2: "DeleteIndex" },
  DeleteIndexOutput: { ResourceExplorer2: "DeleteIndex" },
  DeleteViewInput: { ResourceExplorer2: "DeleteView" },
  DeleteViewOutput: { ResourceExplorer2: "DeleteView" },
  GetViewInput: { ResourceExplorer2: "GetView" },
  GetViewOutput: { ResourceExplorer2: "GetView" },
  ListIndexesInput: { ResourceExplorer2: "ListIndexes" },
  ListIndexesOutput: { ResourceExplorer2: "ListIndexes" },
  ListSupportedResourceTypesInput: { ResourceExplorer2: "ListSupportedResourceTypes" },
  ListSupportedResourceTypesOutput: { ResourceExplorer2: "ListSupportedResourceTypes" },
  ListViewsInput: { ResourceExplorer2: "ListViews" },
  ListViewsOutput: { ResourceExplorer2: "ListViews" },
  SearchInput: { ResourceExplorer2: "Search" },
  SearchOutput: { ResourceExplorer2: "Search" },
  UpdateIndexTypeInput: { ResourceExplorer2: "UpdateIndexType" },
  UpdateIndexTypeOutput: { ResourceExplorer2: "UpdateIndexType" },
  UpdateViewInput: { ResourceExplorer2: "UpdateView" },
  UpdateViewOutput: { ResourceExplorer2: "UpdateView" },
  CreateGroupInput: { ResourceGroups: "CreateGroup" },
  CreateGroupOutput: { ResourceGroups: "CreateGroup" },
  DeleteGroupInput: { ResourceGroups: "DeleteGroup" },
  DeleteGroupOutput: { ResourceGroups: "DeleteGroup" },
  GetGroupInput: { ResourceGroups: "GetGroup" },
  GetGroupOutput: { ResourceGroups: "GetGroup" },
  GetGroupConfigurationInput: { ResourceGroups: "GetGroupConfiguration" },
  GetGroupConfigurationOutput: { ResourceGroups: "GetGroupConfiguration" },
  GetGroupQueryInput: { ResourceGroups: "GetGroupQuery" },
  GetGroupQueryOutput: { ResourceGroups: "GetGroupQuery" },
  GetTagsInput: { ResourceGroups: "GetTags" },
  GetTagsOutput: { ResourceGroups: "GetTags" },
  GroupResourcesInput: { ResourceGroups: "GroupResources" },
  GroupResourcesOutput: { ResourceGroups: "GroupResources" },
  ListGroupResourcesInput: { ResourceGroups: "ListGroupResources" },
  ListGroupResourcesOutput: { ResourceGroups: "ListGroupResources" },
  ListGroupsInput: { ResourceGroups: "ListGroups" },
  ListGroupsOutput: { ResourceGroups: "ListGroups" },
  PutGroupConfigurationInput: { ResourceGroups: "PutGroupConfiguration" },
  PutGroupConfigurationOutput: { ResourceGroups: "PutGroupConfiguration" },
  SearchResourcesInput: { ResourceGroups: "SearchResources" },
  SearchResourcesOutput: { ResourceGroups: "SearchResources" },
  TagInput: { ResourceGroups: "Tag" },
  TagOutput: { ResourceGroups: "Tag" },
  UngroupResourcesInput: { ResourceGroups: "UngroupResources" },
  UngroupResourcesOutput: { ResourceGroups: "UngroupResources" },
  UntagInput: { ResourceGroups: "Untag" },
  UntagOutput: { ResourceGroups: "Untag" },
  UpdateGroupInput: { ResourceGroups: "UpdateGroup" },
  UpdateGroupOutput: { ResourceGroups: "UpdateGroup" },
  UpdateGroupQueryInput: { ResourceGroups: "UpdateGroupQuery" },
  UpdateGroupQueryOutput: { ResourceGroups: "UpdateGroupQuery" },
  DescribeReportCreationInput: { ResourceGroupsTaggingAPI: "DescribeReportCreation" },
  DescribeReportCreationOutput: { ResourceGroupsTaggingAPI: "DescribeReportCreation" },
  GetComplianceSummaryInput: { ResourceGroupsTaggingAPI: "GetComplianceSummary" },
  GetComplianceSummaryOutput: { ResourceGroupsTaggingAPI: "GetComplianceSummary" },
  GetResourcesInput: { ResourceGroupsTaggingAPI: "GetResources" },
  GetResourcesOutput: { ResourceGroupsTaggingAPI: "GetResources" },
  GetTagKeysInput: { ResourceGroupsTaggingAPI: "GetTagKeys" },
  GetTagKeysOutput: { ResourceGroupsTaggingAPI: "GetTagKeys" },
  GetTagValuesInput: { ResourceGroupsTaggingAPI: "GetTagValues" },
  GetTagValuesOutput: { ResourceGroupsTaggingAPI: "GetTagValues" },
  StartReportCreationInput: { ResourceGroupsTaggingAPI: "StartReportCreation" },
  StartReportCreationOutput: { ResourceGroupsTaggingAPI: "StartReportCreation" },
  TagResourcesInput: { ResourceGroupsTaggingAPI: "TagResources" },
  TagResourcesOutput: { ResourceGroupsTaggingAPI: "TagResources" },
  UntagResourcesInput: { ResourceGroupsTaggingAPI: "UntagResources" },
  UntagResourcesOutput: { ResourceGroupsTaggingAPI: "UntagResources" },
  ProfileDetailResponse: { RolesAnywhere: "UpdateProfile" },
  TrustAnchorDetailResponse: { RolesAnywhere: "UpdateTrustAnchor" },
  ScalarCrlRequest: { RolesAnywhere: "GetCrl" },
  CrlDetailResponse: { RolesAnywhere: "UpdateCrl" },
  ScalarProfileRequest: { RolesAnywhere: "GetProfile" },
  ScalarTrustAnchorRequest: { RolesAnywhere: "GetTrustAnchor" },
  ScalarSubjectRequest: { RolesAnywhere: "GetSubject" },
  SubjectDetailResponse: { RolesAnywhere: "GetSubject" },
  ListRequest: { RolesAnywhere: "ListTrustAnchors" },
  AbortMultipartUploadOutput: { S3: "AbortMultipartUpload" },
  CompleteMultipartUploadOutput: { S3: "CompleteMultipartUpload" },
  CopyObjectOutput: { S3: "CopyObject" },
  CreateBucketOutput: { S3: "CreateBucket" },
  CreateMultipartUploadOutput: { S3: "CreateMultipartUpload" },
  DeleteObjectOutput: { S3: "DeleteObject" },
  DeleteObjectTaggingOutput: { S3: "DeleteObjectTagging" },
  DeleteObjectsOutput: { S3: "DeleteObjects" },
  GetBucketAccelerateConfigurationOutput: { S3: "GetBucketAccelerateConfiguration" },
  GetBucketAclOutput: { S3: "GetBucketAcl" },
  GetBucketAnalyticsConfigurationOutput: { S3: "GetBucketAnalyticsConfiguration" },
  GetBucketCorsOutput: { S3: "GetBucketCors" },
  GetBucketEncryptionOutput: { S3: "GetBucketEncryption" },
  GetBucketIntelligentTieringConfigurationOutput: {
    S3: "GetBucketIntelligentTieringConfiguration",
  },
  GetBucketInventoryConfigurationOutput: { S3: "GetBucketInventoryConfiguration" },
  GetBucketLifecycleOutput: { S3: "GetBucketLifecycle" },
  GetBucketLifecycleConfigurationOutput: { S3: "GetBucketLifecycleConfiguration" },
  GetBucketLocationOutput: { S3: "GetBucketLocation" },
  GetBucketLoggingOutput: { S3: "GetBucketLogging" },
  GetBucketMetricsConfigurationOutput: { S3: "GetBucketMetricsConfiguration" },
  GetBucketNotificationConfigurationRequest: { S3: "GetBucketNotification" },
  NotificationConfigurationDeprecated: { S3: "GetBucketNotification" },
  NotificationConfiguration: { S3: "GetBucketNotificationConfiguration" },
  GetBucketOwnershipControlsOutput: { S3: "GetBucketOwnershipControls" },
  GetBucketPolicyOutput: { S3: "GetBucketPolicy" },
  GetBucketPolicyStatusOutput: { S3: "GetBucketPolicyStatus" },
  GetBucketReplicationOutput: { S3: "GetBucketReplication" },
  GetBucketRequestPaymentOutput: { S3: "GetBucketRequestPayment" },
  GetBucketTaggingOutput: { S3: "GetBucketTagging" },
  GetBucketVersioningOutput: { S3: "GetBucketVersioning" },
  GetBucketWebsiteOutput: { S3: "GetBucketWebsite" },
  GetObjectOutput: { S3: "GetObject" },
  GetObjectAclOutput: { S3: "GetObjectAcl" },
  GetObjectAttributesOutput: { S3: "GetObjectAttributes" },
  GetObjectLegalHoldOutput: { S3: "GetObjectLegalHold" },
  GetObjectLockConfigurationOutput: { S3: "GetObjectLockConfiguration" },
  GetObjectRetentionOutput: { S3: "GetObjectRetention" },
  GetObjectTaggingOutput: { S3: "GetObjectTagging" },
  GetObjectTorrentOutput: { S3: "GetObjectTorrent" },
  GetPublicAccessBlockOutput: { S3: "GetPublicAccessBlock", S3Control: "GetPublicAccessBlock" },
  HeadObjectOutput: { S3: "HeadObject" },
  ListBucketAnalyticsConfigurationsOutput: { S3: "ListBucketAnalyticsConfigurations" },
  ListBucketIntelligentTieringConfigurationsOutput: {
    S3: "ListBucketIntelligentTieringConfigurations",
  },
  ListBucketInventoryConfigurationsOutput: { S3: "ListBucketInventoryConfigurations" },
  ListBucketMetricsConfigurationsOutput: { S3: "ListBucketMetricsConfigurations" },
  ListObjectVersionsOutput: { S3: "ListObjectVersions" },
  ListObjectsV2Output: { S3: "ListObjectsV2" },
  PutObjectAclOutput: { S3: "PutObjectAcl" },
  PutObjectLegalHoldOutput: { S3: "PutObjectLegalHold" },
  PutObjectLockConfigurationOutput: { S3: "PutObjectLockConfiguration" },
  PutObjectRetentionOutput: { S3: "PutObjectRetention" },
  PutObjectTaggingOutput: { S3: "PutObjectTagging" },
  RestoreObjectOutput: { S3: "RestoreObject" },
  SelectObjectContentOutput: { S3: "SelectObjectContent" },
  UploadPartOutput: { S3: "UploadPart" },
  UploadPartCopyOutput: { S3: "UploadPartCopy" },
  CreateAccessPointResult: { S3Control: "CreateAccessPoint" },
  CreateAccessPointForObjectLambdaResult: { S3Control: "CreateAccessPointForObjectLambda" },
  CreateJobResult: { S3Control: "CreateJob", Snowball: "CreateJob" },
  CreateMultiRegionAccessPointResult: { S3Control: "CreateMultiRegionAccessPoint" },
  DeleteJobTaggingResult: { S3Control: "DeleteJobTagging" },
  DeleteMultiRegionAccessPointResult: { S3Control: "DeleteMultiRegionAccessPoint" },
  DeleteStorageLensConfigurationTaggingResult: {
    S3Control: "DeleteStorageLensConfigurationTagging",
  },
  DescribeJobResult: { S3Control: "DescribeJob", Snowball: "DescribeJob" },
  DescribeMultiRegionAccessPointOperationResult: {
    S3Control: "DescribeMultiRegionAccessPointOperation",
  },
  GetAccessPointResult: { S3Control: "GetAccessPoint" },
  GetAccessPointConfigurationForObjectLambdaResult: {
    S3Control: "GetAccessPointConfigurationForObjectLambda",
  },
  GetAccessPointForObjectLambdaResult: { S3Control: "GetAccessPointForObjectLambda" },
  GetAccessPointPolicyResult: { S3Control: "GetAccessPointPolicy" },
  GetAccessPointPolicyForObjectLambdaResult: { S3Control: "GetAccessPointPolicyForObjectLambda" },
  GetAccessPointPolicyStatusResult: { S3Control: "GetAccessPointPolicyStatus" },
  GetAccessPointPolicyStatusForObjectLambdaResult: {
    S3Control: "GetAccessPointPolicyStatusForObjectLambda",
  },
  GetBucketResult: { S3Control: "GetBucket" },
  GetBucketLifecycleConfigurationResult: { S3Control: "GetBucketLifecycleConfiguration" },
  GetBucketPolicyResult: { S3Control: "GetBucketPolicy" },
  GetBucketReplicationResult: { S3Control: "GetBucketReplication" },
  GetBucketTaggingResult: { S3Control: "GetBucketTagging" },
  GetBucketVersioningResult: { S3Control: "GetBucketVersioning" },
  GetJobTaggingResult: { S3Control: "GetJobTagging" },
  GetMultiRegionAccessPointResult: { S3Control: "GetMultiRegionAccessPoint" },
  GetMultiRegionAccessPointPolicyResult: { S3Control: "GetMultiRegionAccessPointPolicy" },
  GetMultiRegionAccessPointPolicyStatusResult: {
    S3Control: "GetMultiRegionAccessPointPolicyStatus",
  },
  GetMultiRegionAccessPointRoutesResult: { S3Control: "GetMultiRegionAccessPointRoutes" },
  GetStorageLensConfigurationResult: { S3Control: "GetStorageLensConfiguration" },
  GetStorageLensConfigurationTaggingResult: { S3Control: "GetStorageLensConfigurationTagging" },
  ListAccessPointsResult: { S3Control: "ListAccessPoints" },
  ListAccessPointsForObjectLambdaResult: { S3Control: "ListAccessPointsForObjectLambda" },
  ListMultiRegionAccessPointsResult: { S3Control: "ListMultiRegionAccessPoints" },
  ListRegionalBucketsResult: { S3Control: "ListRegionalBuckets" },
  ListStorageLensConfigurationsResult: { S3Control: "ListStorageLensConfigurations" },
  PutJobTaggingResult: { S3Control: "PutJobTagging" },
  PutMultiRegionAccessPointPolicyResult: { S3Control: "PutMultiRegionAccessPointPolicy" },
  PutStorageLensConfigurationTaggingResult: { S3Control: "PutStorageLensConfigurationTagging" },
  SubmitMultiRegionAccessPointRoutesResult: { S3Control: "SubmitMultiRegionAccessPointRoutes" },
  UpdateJobPriorityResult: { S3Control: "UpdateJobPriority" },
  UpdateJobStatusResult: { S3Control: "UpdateJobStatus" },
  CreateEndpointResult: { S3Outposts: "CreateEndpoint" },
  ListEndpointsResult: { S3Outposts: "ListEndpoints" },
  ListOutpostsWithS3Result: { S3Outposts: "ListOutpostsWithS3" },
  ListSharedEndpointsResult: { S3Outposts: "ListSharedEndpoints" },
  AddPermissionInput: { SNS: "AddPermission" },
  CheckIfPhoneNumberIsOptedOutInput: { SNS: "CheckIfPhoneNumberIsOptedOut" },
  ConfirmSubscriptionInput: { SNS: "ConfirmSubscription" },
  CreatePlatformApplicationInput: { SNS: "CreatePlatformApplication" },
  CreatePlatformEndpointInput: { SNS: "CreatePlatformEndpoint" },
  CreateEndpointResponse: { SNS: "CreatePlatformEndpoint" },
  CreateSMSSandboxPhoneNumberInput: { SNS: "CreateSMSSandboxPhoneNumber" },
  CreateSMSSandboxPhoneNumberResult: { SNS: "CreateSMSSandboxPhoneNumber" },
  CreateTopicInput: { SNS: "CreateTopic" },
  DeleteEndpointInput: { SNS: "DeleteEndpoint", SageMaker: "DeleteEndpoint" },
  DeletePlatformApplicationInput: { SNS: "DeletePlatformApplication" },
  DeleteSMSSandboxPhoneNumberInput: { SNS: "DeleteSMSSandboxPhoneNumber" },
  DeleteSMSSandboxPhoneNumberResult: { SNS: "DeleteSMSSandboxPhoneNumber" },
  DeleteTopicInput: { SNS: "DeleteTopic" },
  GetDataProtectionPolicyInput: { SNS: "GetDataProtectionPolicy" },
  GetEndpointAttributesInput: { SNS: "GetEndpointAttributes" },
  GetPlatformApplicationAttributesInput: { SNS: "GetPlatformApplicationAttributes" },
  GetSMSAttributesInput: { SNS: "GetSMSAttributes" },
  GetSMSSandboxAccountStatusInput: { SNS: "GetSMSSandboxAccountStatus" },
  GetSMSSandboxAccountStatusResult: { SNS: "GetSMSSandboxAccountStatus" },
  GetSubscriptionAttributesInput: { SNS: "GetSubscriptionAttributes" },
  GetTopicAttributesInput: { SNS: "GetTopicAttributes" },
  ListEndpointsByPlatformApplicationInput: { SNS: "ListEndpointsByPlatformApplication" },
  ListOriginationNumbersResult: { SNS: "ListOriginationNumbers" },
  ListPhoneNumbersOptedOutInput: { SNS: "ListPhoneNumbersOptedOut" },
  ListPlatformApplicationsInput: { SNS: "ListPlatformApplications" },
  ListSMSSandboxPhoneNumbersInput: { SNS: "ListSMSSandboxPhoneNumbers" },
  ListSMSSandboxPhoneNumbersResult: { SNS: "ListSMSSandboxPhoneNumbers" },
  ListSubscriptionsInput: { SNS: "ListSubscriptions" },
  ListSubscriptionsByTopicInput: { SNS: "ListSubscriptionsByTopic" },
  ListTopicsInput: { SNS: "ListTopics" },
  OptInPhoneNumberInput: { SNS: "OptInPhoneNumber" },
  PublishInput: { SNS: "Publish" },
  PublishBatchInput: { SNS: "PublishBatch" },
  PutDataProtectionPolicyInput: { SNS: "PutDataProtectionPolicy" },
  RemovePermissionInput: { SNS: "RemovePermission" },
  SetEndpointAttributesInput: { SNS: "SetEndpointAttributes" },
  SetPlatformApplicationAttributesInput: { SNS: "SetPlatformApplicationAttributes" },
  SetSMSAttributesInput: { SNS: "SetSMSAttributes" },
  SetSubscriptionAttributesInput: { SNS: "SetSubscriptionAttributes" },
  SetTopicAttributesInput: { SNS: "SetTopicAttributes" },
  SubscribeInput: { SNS: "Subscribe" },
  UnsubscribeInput: { SNS: "Unsubscribe" },
  VerifySMSSandboxPhoneNumberInput: { SNS: "VerifySMSSandboxPhoneNumber" },
  VerifySMSSandboxPhoneNumberResult: { SNS: "VerifySMSSandboxPhoneNumber" },
  CancelMessageMoveTaskResult: { SQS: "CancelMessageMoveTask" },
  ChangeMessageVisibilityBatchResult: { SQS: "ChangeMessageVisibilityBatch" },
  CreateQueueResult: { SQS: "CreateQueue" },
  DeleteMessageBatchResult: { SQS: "DeleteMessageBatch" },
  GetQueueAttributesResult: { SQS: "GetQueueAttributes" },
  GetQueueUrlResult: { SQS: "GetQueueUrl" },
  ListDeadLetterSourceQueuesResult: { SQS: "ListDeadLetterSourceQueues" },
  ListMessageMoveTasksResult: { SQS: "ListMessageMoveTasks" },
  ListQueueTagsResult: { SQS: "ListQueueTags" },
  ListQueuesResult: { SQS: "ListQueues" },
  ReceiveMessageResult: { SQS: "ReceiveMessage" },
  SendMessageResult: { SQS: "SendMessage" },
  SendMessageBatchResult: { SQS: "SendMessageBatch" },
  StartMessageMoveTaskResult: { SQS: "StartMessageMoveTask" },
  CancelCommandResult: { SSM: "CancelCommand" },
  CancelMaintenanceWindowExecutionResult: { SSM: "CancelMaintenanceWindowExecution" },
  CreateActivationResult: { SSM: "CreateActivation" },
  CreateAssociationResult: { SSM: "CreateAssociation" },
  CreateAssociationBatchResult: { SSM: "CreateAssociationBatch" },
  CreateDocumentResult: { SSM: "CreateDocument" },
  CreateMaintenanceWindowResult: { SSM: "CreateMaintenanceWindow" },
  CreateOpsMetadataResult: { SSM: "CreateOpsMetadata" },
  CreatePatchBaselineResult: { SSM: "CreatePatchBaseline" },
  CreateResourceDataSyncResult: { SSM: "CreateResourceDataSync" },
  DeleteActivationResult: { SSM: "DeleteActivation" },
  DeleteAssociationResult: { SSM: "DeleteAssociation" },
  DeleteDocumentResult: { SSM: "DeleteDocument" },
  DeleteInventoryResult: { SSM: "DeleteInventory" },
  DeleteMaintenanceWindowResult: { SSM: "DeleteMaintenanceWindow" },
  DeleteOpsMetadataResult: { SSM: "DeleteOpsMetadata" },
  DeleteParameterResult: { SSM: "DeleteParameter" },
  DeleteParametersResult: { SSM: "DeleteParameters" },
  DeletePatchBaselineResult: { SSM: "DeletePatchBaseline" },
  DeleteResourceDataSyncResult: { SSM: "DeleteResourceDataSync" },
  DeregisterManagedInstanceResult: { SSM: "DeregisterManagedInstance" },
  DeregisterPatchBaselineForPatchGroupResult: { SSM: "DeregisterPatchBaselineForPatchGroup" },
  DeregisterTargetFromMaintenanceWindowResult: { SSM: "DeregisterTargetFromMaintenanceWindow" },
  DeregisterTaskFromMaintenanceWindowResult: { SSM: "DeregisterTaskFromMaintenanceWindow" },
  DescribeActivationsResult: { SSM: "DescribeActivations" },
  DescribeAssociationResult: { SSM: "DescribeAssociation" },
  DescribeAssociationExecutionTargetsResult: { SSM: "DescribeAssociationExecutionTargets" },
  DescribeAssociationExecutionsResult: { SSM: "DescribeAssociationExecutions" },
  DescribeAutomationExecutionsResult: { SSM: "DescribeAutomationExecutions" },
  DescribeAutomationStepExecutionsResult: { SSM: "DescribeAutomationStepExecutions" },
  DescribeAvailablePatchesResult: { SSM: "DescribeAvailablePatches" },
  DescribeDocumentResult: { SSM: "DescribeDocument" },
  DescribeEffectiveInstanceAssociationsResult: { SSM: "DescribeEffectiveInstanceAssociations" },
  DescribeEffectivePatchesForPatchBaselineResult: {
    SSM: "DescribeEffectivePatchesForPatchBaseline",
  },
  DescribeInstanceAssociationsStatusResult: { SSM: "DescribeInstanceAssociationsStatus" },
  DescribeInstanceInformationResult: { SSM: "DescribeInstanceInformation" },
  DescribeInstancePatchStatesResult: { SSM: "DescribeInstancePatchStates" },
  DescribeInstancePatchStatesForPatchGroupResult: {
    SSM: "DescribeInstancePatchStatesForPatchGroup",
  },
  DescribeInstancePatchesResult: { SSM: "DescribeInstancePatches" },
  DescribeInventoryDeletionsResult: { SSM: "DescribeInventoryDeletions" },
  DescribeMaintenanceWindowExecutionTaskInvocationsResult: {
    SSM: "DescribeMaintenanceWindowExecutionTaskInvocations",
  },
  DescribeMaintenanceWindowExecutionTasksResult: { SSM: "DescribeMaintenanceWindowExecutionTasks" },
  DescribeMaintenanceWindowExecutionsResult: { SSM: "DescribeMaintenanceWindowExecutions" },
  DescribeMaintenanceWindowScheduleResult: { SSM: "DescribeMaintenanceWindowSchedule" },
  DescribeMaintenanceWindowTargetsResult: { SSM: "DescribeMaintenanceWindowTargets" },
  DescribeMaintenanceWindowTasksResult: { SSM: "DescribeMaintenanceWindowTasks" },
  DescribeMaintenanceWindowsResult: { SSM: "DescribeMaintenanceWindows" },
  DescribeMaintenanceWindowsForTargetResult: { SSM: "DescribeMaintenanceWindowsForTarget" },
  DescribeParametersResult: { SSM: "DescribeParameters" },
  DescribePatchBaselinesResult: { SSM: "DescribePatchBaselines" },
  DescribePatchGroupStateResult: { SSM: "DescribePatchGroupState" },
  DescribePatchGroupsResult: { SSM: "DescribePatchGroups" },
  DescribePatchPropertiesResult: { SSM: "DescribePatchProperties" },
  GetAutomationExecutionResult: { SSM: "GetAutomationExecution" },
  GetCommandInvocationResult: { SSM: "GetCommandInvocation" },
  GetDefaultPatchBaselineResult: { SSM: "GetDefaultPatchBaseline" },
  GetDeployablePatchSnapshotForInstanceResult: { SSM: "GetDeployablePatchSnapshotForInstance" },
  GetDocumentResult: { SSM: "GetDocument" },
  GetInventoryResult: { SSM: "GetInventory" },
  GetInventorySchemaResult: { SSM: "GetInventorySchema" },
  GetMaintenanceWindowResult: { SSM: "GetMaintenanceWindow" },
  GetMaintenanceWindowExecutionResult: { SSM: "GetMaintenanceWindowExecution" },
  GetMaintenanceWindowExecutionTaskResult: { SSM: "GetMaintenanceWindowExecutionTask" },
  GetMaintenanceWindowExecutionTaskInvocationResult: {
    SSM: "GetMaintenanceWindowExecutionTaskInvocation",
  },
  GetMaintenanceWindowTaskResult: { SSM: "GetMaintenanceWindowTask" },
  GetOpsMetadataResult: { SSM: "GetOpsMetadata" },
  GetOpsSummaryResult: { SSM: "GetOpsSummary" },
  GetParameterResult: { SSM: "GetParameter" },
  GetParameterHistoryResult: { SSM: "GetParameterHistory" },
  GetParametersResult: { SSM: "GetParameters" },
  GetParametersByPathResult: { SSM: "GetParametersByPath" },
  GetPatchBaselineResult: { SSM: "GetPatchBaseline" },
  GetPatchBaselineForPatchGroupResult: { SSM: "GetPatchBaselineForPatchGroup" },
  GetServiceSettingResult: { SSM: "GetServiceSetting" },
  LabelParameterVersionResult: { SSM: "LabelParameterVersion" },
  ListAssociationVersionsResult: { SSM: "ListAssociationVersions" },
  ListAssociationsResult: { SSM: "ListAssociations" },
  ListCommandInvocationsResult: { SSM: "ListCommandInvocations" },
  ListCommandsResult: { SSM: "ListCommands" },
  ListComplianceItemsResult: { SSM: "ListComplianceItems" },
  ListComplianceSummariesResult: { SSM: "ListComplianceSummaries" },
  ListDocumentVersionsResult: { SSM: "ListDocumentVersions" },
  ListDocumentsResult: { SSM: "ListDocuments" },
  ListInventoryEntriesResult: { SSM: "ListInventoryEntries" },
  ListOpsMetadataResult: { SSM: "ListOpsMetadata" },
  ListResourceComplianceSummariesResult: { SSM: "ListResourceComplianceSummaries" },
  ListResourceDataSyncResult: { SSM: "ListResourceDataSync" },
  PutComplianceItemsResult: { SSM: "PutComplianceItems" },
  PutInventoryResult: { SSM: "PutInventory" },
  PutParameterResult: { SSM: "PutParameter" },
  RegisterDefaultPatchBaselineResult: { SSM: "RegisterDefaultPatchBaseline" },
  RegisterPatchBaselineForPatchGroupResult: { SSM: "RegisterPatchBaselineForPatchGroup" },
  RegisterTargetWithMaintenanceWindowResult: { SSM: "RegisterTargetWithMaintenanceWindow" },
  RegisterTaskWithMaintenanceWindowResult: { SSM: "RegisterTaskWithMaintenanceWindow" },
  ResetServiceSettingResult: { SSM: "ResetServiceSetting" },
  SendAutomationSignalResult: { SSM: "SendAutomationSignal" },
  StartAssociationsOnceResult: { SSM: "StartAssociationsOnce" },
  StartAutomationExecutionResult: { SSM: "StartAutomationExecution" },
  StartChangeRequestExecutionResult: { SSM: "StartChangeRequestExecution" },
  StopAutomationExecutionResult: { SSM: "StopAutomationExecution" },
  UnlabelParameterVersionResult: { SSM: "UnlabelParameterVersion" },
  UpdateAssociationResult: { SSM: "UpdateAssociation" },
  UpdateAssociationStatusResult: { SSM: "UpdateAssociationStatus" },
  UpdateDocumentResult: { SSM: "UpdateDocument" },
  UpdateDocumentDefaultVersionResult: { SSM: "UpdateDocumentDefaultVersion" },
  UpdateMaintenanceWindowResult: { SSM: "UpdateMaintenanceWindow" },
  UpdateMaintenanceWindowTargetResult: { SSM: "UpdateMaintenanceWindowTarget" },
  UpdateMaintenanceWindowTaskResult: { SSM: "UpdateMaintenanceWindowTask" },
  UpdateManagedInstanceRoleResult: { SSM: "UpdateManagedInstanceRole" },
  UpdateOpsMetadataResult: { SSM: "UpdateOpsMetadata" },
  UpdatePatchBaselineResult: { SSM: "UpdatePatchBaseline" },
  UpdateResourceDataSyncResult: { SSM: "UpdateResourceDataSync" },
  UpdateServiceSettingResult: { SSM: "UpdateServiceSetting" },
  AcceptPageResult: { SSMContacts: "AcceptPage" },
  ActivateContactChannelResult: { SSMContacts: "ActivateContactChannel" },
  CreateContactResult: { SSMContacts: "CreateContact" },
  CreateContactChannelResult: { SSMContacts: "CreateContactChannel" },
  CreateRotationResult: { SSMContacts: "CreateRotation" },
  CreateRotationOverrideResult: { SSMContacts: "CreateRotationOverride" },
  DeactivateContactChannelResult: { SSMContacts: "DeactivateContactChannel" },
  DeleteContactResult: { SSMContacts: "DeleteContact" },
  DeleteContactChannelResult: { SSMContacts: "DeleteContactChannel" },
  DeleteRotationResult: { SSMContacts: "DeleteRotation" },
  DeleteRotationOverrideResult: { SSMContacts: "DeleteRotationOverride" },
  DescribeEngagementResult: { SSMContacts: "DescribeEngagement" },
  DescribePageResult: { SSMContacts: "DescribePage" },
  GetContactResult: { SSMContacts: "GetContact" },
  GetContactChannelResult: { SSMContacts: "GetContactChannel" },
  GetContactPolicyResult: { SSMContacts: "GetContactPolicy" },
  GetRotationResult: { SSMContacts: "GetRotation" },
  GetRotationOverrideResult: { SSMContacts: "GetRotationOverride" },
  ListContactChannelsResult: { SSMContacts: "ListContactChannels" },
  ListContactsResult: { SSMContacts: "ListContacts" },
  ListEngagementsResult: { SSMContacts: "ListEngagements" },
  ListPageReceiptsResult: { SSMContacts: "ListPageReceipts" },
  ListPageResolutionsResult: { SSMContacts: "ListPageResolutions" },
  ListPagesByContactResult: { SSMContacts: "ListPagesByContact" },
  ListPagesByEngagementResult: { SSMContacts: "ListPagesByEngagement" },
  ListPreviewRotationShiftsResult: { SSMContacts: "ListPreviewRotationShifts" },
  ListRotationOverridesResult: { SSMContacts: "ListRotationOverrides" },
  ListRotationShiftsResult: { SSMContacts: "ListRotationShifts" },
  ListRotationsResult: { SSMContacts: "ListRotations" },
  PutContactPolicyResult: { SSMContacts: "PutContactPolicy" },
  SendActivationCodeResult: { SSMContacts: "SendActivationCode" },
  StartEngagementResult: { SSMContacts: "StartEngagement" },
  StopEngagementResult: { SSMContacts: "StopEngagement" },
  UpdateContactResult: { SSMContacts: "UpdateContact" },
  UpdateContactChannelResult: { SSMContacts: "UpdateContactChannel" },
  UpdateRotationResult: { SSMContacts: "UpdateRotation" },
  CreateReplicationSetInput: { SSMIncidents: "CreateReplicationSet" },
  CreateReplicationSetOutput: { SSMIncidents: "CreateReplicationSet" },
  CreateResponsePlanInput: { SSMIncidents: "CreateResponsePlan" },
  CreateResponsePlanOutput: { SSMIncidents: "CreateResponsePlan" },
  CreateTimelineEventInput: { SSMIncidents: "CreateTimelineEvent" },
  CreateTimelineEventOutput: { SSMIncidents: "CreateTimelineEvent" },
  DeleteIncidentRecordInput: { SSMIncidents: "DeleteIncidentRecord" },
  DeleteIncidentRecordOutput: { SSMIncidents: "DeleteIncidentRecord" },
  DeleteReplicationSetInput: { SSMIncidents: "DeleteReplicationSet" },
  DeleteReplicationSetOutput: { SSMIncidents: "DeleteReplicationSet" },
  DeleteResponsePlanInput: { SSMIncidents: "DeleteResponsePlan" },
  DeleteResponsePlanOutput: { SSMIncidents: "DeleteResponsePlan" },
  DeleteTimelineEventInput: { SSMIncidents: "DeleteTimelineEvent" },
  DeleteTimelineEventOutput: { SSMIncidents: "DeleteTimelineEvent" },
  GetIncidentRecordInput: { SSMIncidents: "GetIncidentRecord" },
  GetIncidentRecordOutput: { SSMIncidents: "GetIncidentRecord" },
  GetReplicationSetInput: { SSMIncidents: "GetReplicationSet" },
  GetReplicationSetOutput: { SSMIncidents: "GetReplicationSet" },
  GetResourcePoliciesInput: { SSMIncidents: "GetResourcePolicies" },
  GetResourcePoliciesOutput: { SSMIncidents: "GetResourcePolicies" },
  GetResponsePlanInput: { SSMIncidents: "GetResponsePlan" },
  GetResponsePlanOutput: { SSMIncidents: "GetResponsePlan" },
  GetTimelineEventInput: { SSMIncidents: "GetTimelineEvent" },
  GetTimelineEventOutput: { SSMIncidents: "GetTimelineEvent" },
  ListIncidentRecordsInput: { SSMIncidents: "ListIncidentRecords" },
  ListIncidentRecordsOutput: { SSMIncidents: "ListIncidentRecords" },
  ListRelatedItemsInput: { SSMIncidents: "ListRelatedItems" },
  ListRelatedItemsOutput: { SSMIncidents: "ListRelatedItems" },
  ListReplicationSetsInput: { SSMIncidents: "ListReplicationSets" },
  ListReplicationSetsOutput: { SSMIncidents: "ListReplicationSets" },
  ListResponsePlansInput: { SSMIncidents: "ListResponsePlans" },
  ListResponsePlansOutput: { SSMIncidents: "ListResponsePlans" },
  ListTimelineEventsInput: { SSMIncidents: "ListTimelineEvents" },
  ListTimelineEventsOutput: { SSMIncidents: "ListTimelineEvents" },
  StartIncidentInput: { SSMIncidents: "StartIncident" },
  StartIncidentOutput: { SSMIncidents: "StartIncident" },
  UpdateDeletionProtectionInput: { SSMIncidents: "UpdateDeletionProtection" },
  UpdateDeletionProtectionOutput: { SSMIncidents: "UpdateDeletionProtection" },
  UpdateIncidentRecordInput: { SSMIncidents: "UpdateIncidentRecord" },
  UpdateIncidentRecordOutput: { SSMIncidents: "UpdateIncidentRecord" },
  UpdateRelatedItemsInput: { SSMIncidents: "UpdateRelatedItems" },
  UpdateRelatedItemsOutput: { SSMIncidents: "UpdateRelatedItems" },
  UpdateReplicationSetInput: { SSMIncidents: "UpdateReplicationSet" },
  UpdateReplicationSetOutput: { SSMIncidents: "UpdateReplicationSet" },
  UpdateResponsePlanInput: { SSMIncidents: "UpdateResponsePlan" },
  UpdateResponsePlanOutput: { SSMIncidents: "UpdateResponsePlan" },
  UpdateTimelineEventInput: { SSMIncidents: "UpdateTimelineEvent" },
  UpdateTimelineEventOutput: { SSMIncidents: "UpdateTimelineEvent" },
  CountClosedWorkflowExecutionsInput: { SWF: "CountClosedWorkflowExecutions" },
  WorkflowExecutionCount: { SWF: "CountOpenWorkflowExecutions" },
  CountOpenWorkflowExecutionsInput: { SWF: "CountOpenWorkflowExecutions" },
  CountPendingActivityTasksInput: { SWF: "CountPendingActivityTasks" },
  PendingTaskCount: { SWF: "CountPendingDecisionTasks" },
  CountPendingDecisionTasksInput: { SWF: "CountPendingDecisionTasks" },
  DeprecateActivityTypeInput: { SWF: "DeprecateActivityType" },
  DeprecateDomainInput: { SWF: "DeprecateDomain" },
  DeprecateWorkflowTypeInput: { SWF: "DeprecateWorkflowType" },
  DescribeActivityTypeInput: { SWF: "DescribeActivityType" },
  ActivityTypeDetail: { SWF: "DescribeActivityType" },
  DescribeDomainInput: { SWF: "DescribeDomain" },
  DomainDetail: { SWF: "DescribeDomain" },
  DescribeWorkflowExecutionInput: { SWF: "DescribeWorkflowExecution" },
  WorkflowExecutionDetail: { SWF: "DescribeWorkflowExecution" },
  DescribeWorkflowTypeInput: { SWF: "DescribeWorkflowType" },
  WorkflowTypeDetail: { SWF: "DescribeWorkflowType" },
  GetWorkflowExecutionHistoryInput: { SWF: "GetWorkflowExecutionHistory" },
  History: { SWF: "GetWorkflowExecutionHistory" },
  ListActivityTypesInput: { SWF: "ListActivityTypes" },
  ActivityTypeInfos: { SWF: "ListActivityTypes" },
  ListClosedWorkflowExecutionsInput: { SWF: "ListClosedWorkflowExecutions" },
  WorkflowExecutionInfos: { SWF: "ListOpenWorkflowExecutions" },
  ListDomainsInput: { SWF: "ListDomains" },
  DomainInfos: { SWF: "ListDomains" },
  ListOpenWorkflowExecutionsInput: { SWF: "ListOpenWorkflowExecutions" },
  ListWorkflowTypesInput: { SWF: "ListWorkflowTypes" },
  WorkflowTypeInfos: { SWF: "ListWorkflowTypes" },
  PollForActivityTaskInput: { SWF: "PollForActivityTask" },
  ActivityTask: { SWF: "PollForActivityTask" },
  PollForDecisionTaskInput: { SWF: "PollForDecisionTask" },
  DecisionTask: { SWF: "PollForDecisionTask" },
  RecordActivityTaskHeartbeatInput: { SWF: "RecordActivityTaskHeartbeat" },
  ActivityTaskStatus: { SWF: "RecordActivityTaskHeartbeat" },
  RegisterActivityTypeInput: { SWF: "RegisterActivityType" },
  RegisterDomainInput: { SWF: "RegisterDomain" },
  RegisterWorkflowTypeInput: { SWF: "RegisterWorkflowType" },
  RequestCancelWorkflowExecutionInput: { SWF: "RequestCancelWorkflowExecution" },
  RespondActivityTaskCanceledInput: { SWF: "RespondActivityTaskCanceled" },
  RespondActivityTaskCompletedInput: { SWF: "RespondActivityTaskCompleted" },
  RespondActivityTaskFailedInput: { SWF: "RespondActivityTaskFailed" },
  RespondDecisionTaskCompletedInput: { SWF: "RespondDecisionTaskCompleted" },
  SignalWorkflowExecutionInput: { SWF: "SignalWorkflowExecution" },
  StartWorkflowExecutionInput: { SWF: "StartWorkflowExecution" },
  Run: { SWF: "StartWorkflowExecution" },
  TerminateWorkflowExecutionInput: { SWF: "TerminateWorkflowExecution" },
  UndeprecateActivityTypeInput: { SWF: "UndeprecateActivityType" },
  UndeprecateDomainInput: { SWF: "UndeprecateDomain" },
  UndeprecateWorkflowTypeInput: { SWF: "UndeprecateWorkflowType" },
  BatchDescribeModelPackageInput: { SageMaker: "BatchDescribeModelPackage" },
  BatchDescribeModelPackageOutput: { SageMaker: "BatchDescribeModelPackage" },
  CreateAlgorithmInput: { SageMaker: "CreateAlgorithm" },
  CreateAlgorithmOutput: { SageMaker: "CreateAlgorithm" },
  CreateCodeRepositoryInput: { SageMaker: "CreateCodeRepository" },
  CreateCodeRepositoryOutput: { SageMaker: "CreateCodeRepository" },
  CreateEndpointInput: { SageMaker: "CreateEndpoint" },
  CreateEndpointOutput: { SageMaker: "CreateEndpoint" },
  CreateEndpointConfigInput: { SageMaker: "CreateEndpointConfig" },
  CreateEndpointConfigOutput: { SageMaker: "CreateEndpointConfig" },
  CreateModelInput: { SageMaker: "CreateModel" },
  CreateModelOutput: { SageMaker: "CreateModel" },
  CreateModelPackageInput: { SageMaker: "CreateModelPackage" },
  CreateModelPackageOutput: { SageMaker: "CreateModelPackage" },
  CreateModelPackageGroupInput: { SageMaker: "CreateModelPackageGroup" },
  CreateModelPackageGroupOutput: { SageMaker: "CreateModelPackageGroup" },
  CreateNotebookInstanceInput: { SageMaker: "CreateNotebookInstance" },
  CreateNotebookInstanceOutput: { SageMaker: "CreateNotebookInstance" },
  CreateNotebookInstanceLifecycleConfigInput: {
    SageMaker: "CreateNotebookInstanceLifecycleConfig",
  },
  CreateNotebookInstanceLifecycleConfigOutput: {
    SageMaker: "CreateNotebookInstanceLifecycleConfig",
  },
  CreatePresignedNotebookInstanceUrlInput: { SageMaker: "CreatePresignedNotebookInstanceUrl" },
  CreatePresignedNotebookInstanceUrlOutput: { SageMaker: "CreatePresignedNotebookInstanceUrl" },
  DeleteAlgorithmInput: { SageMaker: "DeleteAlgorithm" },
  DeleteCodeRepositoryInput: { SageMaker: "DeleteCodeRepository" },
  DeleteEndpointConfigInput: { SageMaker: "DeleteEndpointConfig" },
  DeleteModelInput: { SageMaker: "DeleteModel" },
  DeleteModelPackageInput: { SageMaker: "DeleteModelPackage" },
  DeleteModelPackageGroupInput: { SageMaker: "DeleteModelPackageGroup" },
  DeleteModelPackageGroupPolicyInput: { SageMaker: "DeleteModelPackageGroupPolicy" },
  DeleteNotebookInstanceInput: { SageMaker: "DeleteNotebookInstance" },
  DeleteNotebookInstanceLifecycleConfigInput: {
    SageMaker: "DeleteNotebookInstanceLifecycleConfig",
  },
  DescribeAlgorithmInput: { SageMaker: "DescribeAlgorithm" },
  DescribeAlgorithmOutput: { SageMaker: "DescribeAlgorithm" },
  DescribeCodeRepositoryInput: { SageMaker: "DescribeCodeRepository" },
  DescribeCodeRepositoryOutput: { SageMaker: "DescribeCodeRepository" },
  DescribeEndpointInput: { SageMaker: "DescribeEndpoint" },
  DescribeEndpointOutput: { SageMaker: "DescribeEndpoint" },
  DescribeEndpointConfigInput: { SageMaker: "DescribeEndpointConfig" },
  DescribeEndpointConfigOutput: { SageMaker: "DescribeEndpointConfig" },
  DescribeModelInput: { SageMaker: "DescribeModel" },
  DescribeModelOutput: { SageMaker: "DescribeModel" },
  DescribeModelPackageInput: { SageMaker: "DescribeModelPackage" },
  DescribeModelPackageOutput: { SageMaker: "DescribeModelPackage" },
  DescribeModelPackageGroupInput: { SageMaker: "DescribeModelPackageGroup" },
  DescribeModelPackageGroupOutput: { SageMaker: "DescribeModelPackageGroup" },
  DescribeNotebookInstanceInput: { SageMaker: "DescribeNotebookInstance" },
  DescribeNotebookInstanceOutput: { SageMaker: "DescribeNotebookInstance" },
  DescribeNotebookInstanceLifecycleConfigInput: {
    SageMaker: "DescribeNotebookInstanceLifecycleConfig",
  },
  DescribeNotebookInstanceLifecycleConfigOutput: {
    SageMaker: "DescribeNotebookInstanceLifecycleConfig",
  },
  DescribeProjectInput: { SageMaker: "DescribeProject" },
  DescribeProjectOutput: { SageMaker: "DescribeProject" },
  DisableSagemakerServicecatalogPortfolioInput: {
    SageMaker: "DisableSagemakerServicecatalogPortfolio",
  },
  DisableSagemakerServicecatalogPortfolioOutput: {
    SageMaker: "DisableSagemakerServicecatalogPortfolio",
  },
  EnableSagemakerServicecatalogPortfolioInput: {
    SageMaker: "EnableSagemakerServicecatalogPortfolio",
  },
  EnableSagemakerServicecatalogPortfolioOutput: {
    SageMaker: "EnableSagemakerServicecatalogPortfolio",
  },
  GetModelPackageGroupPolicyInput: { SageMaker: "GetModelPackageGroupPolicy" },
  GetModelPackageGroupPolicyOutput: { SageMaker: "GetModelPackageGroupPolicy" },
  GetSagemakerServicecatalogPortfolioStatusInput: {
    SageMaker: "GetSagemakerServicecatalogPortfolioStatus",
  },
  GetSagemakerServicecatalogPortfolioStatusOutput: {
    SageMaker: "GetSagemakerServicecatalogPortfolioStatus",
  },
  ListAlgorithmsInput: { SageMaker: "ListAlgorithms" },
  ListAlgorithmsOutput: { SageMaker: "ListAlgorithms" },
  ListCodeRepositoriesInput: { SageMaker: "ListCodeRepositories" },
  ListCodeRepositoriesOutput: { SageMaker: "ListCodeRepositories" },
  ListEndpointConfigsInput: { SageMaker: "ListEndpointConfigs" },
  ListEndpointConfigsOutput: { SageMaker: "ListEndpointConfigs" },
  ListEndpointsInput: { SageMaker: "ListEndpoints" },
  ListEndpointsOutput: { SageMaker: "ListEndpoints" },
  ListModelPackageGroupsInput: { SageMaker: "ListModelPackageGroups" },
  ListModelPackageGroupsOutput: { SageMaker: "ListModelPackageGroups" },
  ListModelPackagesInput: { SageMaker: "ListModelPackages" },
  ListModelPackagesOutput: { SageMaker: "ListModelPackages" },
  ListModelsInput: { SageMaker: "ListModels" },
  ListModelsOutput: { SageMaker: "ListModels" },
  ListNotebookInstanceLifecycleConfigsInput: { SageMaker: "ListNotebookInstanceLifecycleConfigs" },
  ListNotebookInstanceLifecycleConfigsOutput: { SageMaker: "ListNotebookInstanceLifecycleConfigs" },
  ListNotebookInstancesInput: { SageMaker: "ListNotebookInstances" },
  ListNotebookInstancesOutput: { SageMaker: "ListNotebookInstances" },
  PutModelPackageGroupPolicyInput: { SageMaker: "PutModelPackageGroupPolicy" },
  PutModelPackageGroupPolicyOutput: { SageMaker: "PutModelPackageGroupPolicy" },
  StartNotebookInstanceInput: { SageMaker: "StartNotebookInstance" },
  StopNotebookInstanceInput: { SageMaker: "StopNotebookInstance" },
  UpdateCodeRepositoryInput: { SageMaker: "UpdateCodeRepository" },
  UpdateCodeRepositoryOutput: { SageMaker: "UpdateCodeRepository" },
  UpdateEndpointInput: { SageMaker: "UpdateEndpoint" },
  UpdateEndpointOutput: { SageMaker: "UpdateEndpoint" },
  UpdateEndpointWeightsAndCapacitiesInput: { SageMaker: "UpdateEndpointWeightsAndCapacities" },
  UpdateEndpointWeightsAndCapacitiesOutput: { SageMaker: "UpdateEndpointWeightsAndCapacities" },
  UpdateModelPackageInput: { SageMaker: "UpdateModelPackage" },
  UpdateModelPackageOutput: { SageMaker: "UpdateModelPackage" },
  UpdateNotebookInstanceInput: { SageMaker: "UpdateNotebookInstance" },
  UpdateNotebookInstanceOutput: { SageMaker: "UpdateNotebookInstance" },
  UpdateNotebookInstanceLifecycleConfigInput: {
    SageMaker: "UpdateNotebookInstanceLifecycleConfig",
  },
  UpdateNotebookInstanceLifecycleConfigOutput: {
    SageMaker: "UpdateNotebookInstanceLifecycleConfig",
  },
  DeleteEarthObservationJobInput: { SageMakerGeospatial: "DeleteEarthObservationJob" },
  DeleteEarthObservationJobOutput: { SageMakerGeospatial: "DeleteEarthObservationJob" },
  DeleteVectorEnrichmentJobInput: { SageMakerGeospatial: "DeleteVectorEnrichmentJob" },
  DeleteVectorEnrichmentJobOutput: { SageMakerGeospatial: "DeleteVectorEnrichmentJob" },
  ExportEarthObservationJobInput: { SageMakerGeospatial: "ExportEarthObservationJob" },
  ExportEarthObservationJobOutput: { SageMakerGeospatial: "ExportEarthObservationJob" },
  ExportVectorEnrichmentJobInput: { SageMakerGeospatial: "ExportVectorEnrichmentJob" },
  ExportVectorEnrichmentJobOutput: { SageMakerGeospatial: "ExportVectorEnrichmentJob" },
  GetEarthObservationJobInput: { SageMakerGeospatial: "GetEarthObservationJob" },
  GetEarthObservationJobOutput: { SageMakerGeospatial: "GetEarthObservationJob" },
  GetRasterDataCollectionInput: { SageMakerGeospatial: "GetRasterDataCollection" },
  GetRasterDataCollectionOutput: { SageMakerGeospatial: "GetRasterDataCollection" },
  GetTileInput: { SageMakerGeospatial: "GetTile" },
  GetTileOutput: { SageMakerGeospatial: "GetTile" },
  GetVectorEnrichmentJobInput: { SageMakerGeospatial: "GetVectorEnrichmentJob" },
  GetVectorEnrichmentJobOutput: { SageMakerGeospatial: "GetVectorEnrichmentJob" },
  ListEarthObservationJobInput: { SageMakerGeospatial: "ListEarthObservationJobs" },
  ListEarthObservationJobOutput: { SageMakerGeospatial: "ListEarthObservationJobs" },
  ListRasterDataCollectionsInput: { SageMakerGeospatial: "ListRasterDataCollections" },
  ListRasterDataCollectionsOutput: { SageMakerGeospatial: "ListRasterDataCollections" },
  ListVectorEnrichmentJobInput: { SageMakerGeospatial: "ListVectorEnrichmentJobs" },
  ListVectorEnrichmentJobOutput: { SageMakerGeospatial: "ListVectorEnrichmentJobs" },
  SearchRasterDataCollectionInput: { SageMakerGeospatial: "SearchRasterDataCollection" },
  SearchRasterDataCollectionOutput: { SageMakerGeospatial: "SearchRasterDataCollection" },
  StartEarthObservationJobInput: { SageMakerGeospatial: "StartEarthObservationJob" },
  StartEarthObservationJobOutput: { SageMakerGeospatial: "StartEarthObservationJob" },
  StartVectorEnrichmentJobInput: { SageMakerGeospatial: "StartVectorEnrichmentJob" },
  StartVectorEnrichmentJobOutput: { SageMakerGeospatial: "StartVectorEnrichmentJob" },
  StopEarthObservationJobInput: { SageMakerGeospatial: "StopEarthObservationJob" },
  StopEarthObservationJobOutput: { SageMakerGeospatial: "StopEarthObservationJob" },
  StopVectorEnrichmentJobInput: { SageMakerGeospatial: "StopVectorEnrichmentJob" },
  StopVectorEnrichmentJobOutput: { SageMakerGeospatial: "StopVectorEnrichmentJob" },
  InvokeEndpointInput: { SageMakerRuntime: "InvokeEndpoint" },
  InvokeEndpointOutput: { SageMakerRuntime: "InvokeEndpoint" },
  InvokeEndpointAsyncInput: { SageMakerRuntime: "InvokeEndpointAsync" },
  InvokeEndpointAsyncOutput: { SageMakerRuntime: "InvokeEndpointAsync" },
  GetDeploymentsResult: { SagemakerEdge: "GetDeployments" },
  GetDeviceRegistrationResult: { SagemakerEdge: "GetDeviceRegistration" },
  CreateScheduleInput: { Scheduler: "CreateSchedule" },
  CreateScheduleOutput: { Scheduler: "CreateSchedule" },
  CreateScheduleGroupInput: { Scheduler: "CreateScheduleGroup" },
  CreateScheduleGroupOutput: { Scheduler: "CreateScheduleGroup" },
  DeleteScheduleInput: { Scheduler: "DeleteSchedule" },
  DeleteScheduleOutput: { Scheduler: "DeleteSchedule" },
  DeleteScheduleGroupInput: { Scheduler: "DeleteScheduleGroup" },
  DeleteScheduleGroupOutput: { Scheduler: "DeleteScheduleGroup" },
  GetScheduleInput: { Scheduler: "GetSchedule" },
  GetScheduleOutput: { Scheduler: "GetSchedule" },
  GetScheduleGroupInput: { Scheduler: "GetScheduleGroup" },
  GetScheduleGroupOutput: { Scheduler: "GetScheduleGroup" },
  ListScheduleGroupsInput: { Scheduler: "ListScheduleGroups" },
  ListScheduleGroupsOutput: { Scheduler: "ListScheduleGroups" },
  ListSchedulesInput: { Scheduler: "ListSchedules" },
  ListSchedulesOutput: { Scheduler: "ListSchedules" },
  UpdateScheduleInput: { Scheduler: "UpdateSchedule" },
  UpdateScheduleOutput: { Scheduler: "UpdateSchedule" },
  AcceptPortfolioShareInput: { ServiceCatalog: "AcceptPortfolioShare" },
  AcceptPortfolioShareOutput: { ServiceCatalog: "AcceptPortfolioShare" },
  AssociateBudgetWithResourceInput: { ServiceCatalog: "AssociateBudgetWithResource" },
  AssociateBudgetWithResourceOutput: { ServiceCatalog: "AssociateBudgetWithResource" },
  AssociatePrincipalWithPortfolioInput: { ServiceCatalog: "AssociatePrincipalWithPortfolio" },
  AssociatePrincipalWithPortfolioOutput: { ServiceCatalog: "AssociatePrincipalWithPortfolio" },
  AssociateProductWithPortfolioInput: { ServiceCatalog: "AssociateProductWithPortfolio" },
  AssociateProductWithPortfolioOutput: { ServiceCatalog: "AssociateProductWithPortfolio" },
  AssociateServiceActionWithProvisioningArtifactInput: {
    ServiceCatalog: "AssociateServiceActionWithProvisioningArtifact",
  },
  AssociateServiceActionWithProvisioningArtifactOutput: {
    ServiceCatalog: "AssociateServiceActionWithProvisioningArtifact",
  },
  AssociateTagOptionWithResourceInput: { ServiceCatalog: "AssociateTagOptionWithResource" },
  AssociateTagOptionWithResourceOutput: { ServiceCatalog: "AssociateTagOptionWithResource" },
  BatchAssociateServiceActionWithProvisioningArtifactInput: {
    ServiceCatalog: "BatchAssociateServiceActionWithProvisioningArtifact",
  },
  BatchAssociateServiceActionWithProvisioningArtifactOutput: {
    ServiceCatalog: "BatchAssociateServiceActionWithProvisioningArtifact",
  },
  BatchDisassociateServiceActionFromProvisioningArtifactInput: {
    ServiceCatalog: "BatchDisassociateServiceActionFromProvisioningArtifact",
  },
  BatchDisassociateServiceActionFromProvisioningArtifactOutput: {
    ServiceCatalog: "BatchDisassociateServiceActionFromProvisioningArtifact",
  },
  CopyProductInput: { ServiceCatalog: "CopyProduct" },
  CopyProductOutput: { ServiceCatalog: "CopyProduct" },
  CreateConstraintInput: { ServiceCatalog: "CreateConstraint" },
  CreateConstraintOutput: { ServiceCatalog: "CreateConstraint" },
  CreatePortfolioInput: { ServiceCatalog: "CreatePortfolio" },
  CreatePortfolioOutput: { ServiceCatalog: "CreatePortfolio" },
  CreatePortfolioShareInput: { ServiceCatalog: "CreatePortfolioShare" },
  CreatePortfolioShareOutput: { ServiceCatalog: "CreatePortfolioShare" },
  CreateProductInput: { ServiceCatalog: "CreateProduct" },
  CreateProductOutput: { ServiceCatalog: "CreateProduct" },
  CreateProvisionedProductPlanInput: { ServiceCatalog: "CreateProvisionedProductPlan" },
  CreateProvisionedProductPlanOutput: { ServiceCatalog: "CreateProvisionedProductPlan" },
  CreateProvisioningArtifactInput: { ServiceCatalog: "CreateProvisioningArtifact" },
  CreateProvisioningArtifactOutput: { ServiceCatalog: "CreateProvisioningArtifact" },
  CreateServiceActionInput: { ServiceCatalog: "CreateServiceAction" },
  CreateServiceActionOutput: { ServiceCatalog: "CreateServiceAction" },
  CreateTagOptionInput: { ServiceCatalog: "CreateTagOption" },
  CreateTagOptionOutput: { ServiceCatalog: "CreateTagOption" },
  DeleteConstraintInput: { ServiceCatalog: "DeleteConstraint" },
  DeleteConstraintOutput: { ServiceCatalog: "DeleteConstraint" },
  DeletePortfolioInput: { ServiceCatalog: "DeletePortfolio" },
  DeletePortfolioOutput: { ServiceCatalog: "DeletePortfolio" },
  DeletePortfolioShareInput: { ServiceCatalog: "DeletePortfolioShare" },
  DeletePortfolioShareOutput: { ServiceCatalog: "DeletePortfolioShare" },
  DeleteProductInput: { ServiceCatalog: "DeleteProduct" },
  DeleteProductOutput: { ServiceCatalog: "DeleteProduct" },
  DeleteProvisionedProductPlanInput: { ServiceCatalog: "DeleteProvisionedProductPlan" },
  DeleteProvisionedProductPlanOutput: { ServiceCatalog: "DeleteProvisionedProductPlan" },
  DeleteProvisioningArtifactInput: { ServiceCatalog: "DeleteProvisioningArtifact" },
  DeleteProvisioningArtifactOutput: { ServiceCatalog: "DeleteProvisioningArtifact" },
  DeleteServiceActionInput: { ServiceCatalog: "DeleteServiceAction" },
  DeleteServiceActionOutput: { ServiceCatalog: "DeleteServiceAction" },
  DeleteTagOptionInput: { ServiceCatalog: "DeleteTagOption" },
  DeleteTagOptionOutput: { ServiceCatalog: "DeleteTagOption" },
  DescribeConstraintInput: { ServiceCatalog: "DescribeConstraint" },
  DescribeConstraintOutput: { ServiceCatalog: "DescribeConstraint" },
  DescribeCopyProductStatusInput: { ServiceCatalog: "DescribeCopyProductStatus" },
  DescribeCopyProductStatusOutput: { ServiceCatalog: "DescribeCopyProductStatus" },
  DescribePortfolioInput: { ServiceCatalog: "DescribePortfolio" },
  DescribePortfolioOutput: { ServiceCatalog: "DescribePortfolio" },
  DescribePortfolioShareStatusInput: { ServiceCatalog: "DescribePortfolioShareStatus" },
  DescribePortfolioShareStatusOutput: { ServiceCatalog: "DescribePortfolioShareStatus" },
  DescribePortfolioSharesInput: { ServiceCatalog: "DescribePortfolioShares" },
  DescribePortfolioSharesOutput: { ServiceCatalog: "DescribePortfolioShares" },
  DescribeProductInput: { ServiceCatalog: "DescribeProduct" },
  DescribeProductOutput: { ServiceCatalog: "DescribeProduct" },
  DescribeProductAsAdminInput: { ServiceCatalog: "DescribeProductAsAdmin" },
  DescribeProductAsAdminOutput: { ServiceCatalog: "DescribeProductAsAdmin" },
  DescribeProductViewInput: { ServiceCatalog: "DescribeProductView" },
  DescribeProductViewOutput: { ServiceCatalog: "DescribeProductView" },
  DescribeProvisionedProductInput: { ServiceCatalog: "DescribeProvisionedProduct" },
  DescribeProvisionedProductOutput: { ServiceCatalog: "DescribeProvisionedProduct" },
  DescribeProvisionedProductPlanInput: { ServiceCatalog: "DescribeProvisionedProductPlan" },
  DescribeProvisionedProductPlanOutput: { ServiceCatalog: "DescribeProvisionedProductPlan" },
  DescribeProvisioningArtifactInput: { ServiceCatalog: "DescribeProvisioningArtifact" },
  DescribeProvisioningArtifactOutput: { ServiceCatalog: "DescribeProvisioningArtifact" },
  DescribeProvisioningParametersInput: { ServiceCatalog: "DescribeProvisioningParameters" },
  DescribeProvisioningParametersOutput: { ServiceCatalog: "DescribeProvisioningParameters" },
  DescribeRecordInput: { ServiceCatalog: "DescribeRecord" },
  DescribeRecordOutput: { ServiceCatalog: "DescribeRecord" },
  DescribeServiceActionInput: { ServiceCatalog: "DescribeServiceAction" },
  DescribeServiceActionOutput: { ServiceCatalog: "DescribeServiceAction" },
  DescribeServiceActionExecutionParametersInput: {
    ServiceCatalog: "DescribeServiceActionExecutionParameters",
  },
  DescribeServiceActionExecutionParametersOutput: {
    ServiceCatalog: "DescribeServiceActionExecutionParameters",
  },
  DescribeTagOptionInput: { ServiceCatalog: "DescribeTagOption" },
  DescribeTagOptionOutput: { ServiceCatalog: "DescribeTagOption" },
  DisableAWSOrganizationsAccessInput: { ServiceCatalog: "DisableAWSOrganizationsAccess" },
  DisableAWSOrganizationsAccessOutput: { ServiceCatalog: "DisableAWSOrganizationsAccess" },
  DisassociateBudgetFromResourceInput: { ServiceCatalog: "DisassociateBudgetFromResource" },
  DisassociateBudgetFromResourceOutput: { ServiceCatalog: "DisassociateBudgetFromResource" },
  DisassociatePrincipalFromPortfolioInput: { ServiceCatalog: "DisassociatePrincipalFromPortfolio" },
  DisassociatePrincipalFromPortfolioOutput: {
    ServiceCatalog: "DisassociatePrincipalFromPortfolio",
  },
  DisassociateProductFromPortfolioInput: { ServiceCatalog: "DisassociateProductFromPortfolio" },
  DisassociateProductFromPortfolioOutput: { ServiceCatalog: "DisassociateProductFromPortfolio" },
  DisassociateServiceActionFromProvisioningArtifactInput: {
    ServiceCatalog: "DisassociateServiceActionFromProvisioningArtifact",
  },
  DisassociateServiceActionFromProvisioningArtifactOutput: {
    ServiceCatalog: "DisassociateServiceActionFromProvisioningArtifact",
  },
  DisassociateTagOptionFromResourceInput: { ServiceCatalog: "DisassociateTagOptionFromResource" },
  DisassociateTagOptionFromResourceOutput: { ServiceCatalog: "DisassociateTagOptionFromResource" },
  EnableAWSOrganizationsAccessInput: { ServiceCatalog: "EnableAWSOrganizationsAccess" },
  EnableAWSOrganizationsAccessOutput: { ServiceCatalog: "EnableAWSOrganizationsAccess" },
  ExecuteProvisionedProductPlanInput: { ServiceCatalog: "ExecuteProvisionedProductPlan" },
  ExecuteProvisionedProductPlanOutput: { ServiceCatalog: "ExecuteProvisionedProductPlan" },
  ExecuteProvisionedProductServiceActionInput: {
    ServiceCatalog: "ExecuteProvisionedProductServiceAction",
  },
  ExecuteProvisionedProductServiceActionOutput: {
    ServiceCatalog: "ExecuteProvisionedProductServiceAction",
  },
  GetAWSOrganizationsAccessStatusInput: { ServiceCatalog: "GetAWSOrganizationsAccessStatus" },
  GetAWSOrganizationsAccessStatusOutput: { ServiceCatalog: "GetAWSOrganizationsAccessStatus" },
  GetProvisionedProductOutputsInput: { ServiceCatalog: "GetProvisionedProductOutputs" },
  GetProvisionedProductOutputsOutput: { ServiceCatalog: "GetProvisionedProductOutputs" },
  ImportAsProvisionedProductInput: { ServiceCatalog: "ImportAsProvisionedProduct" },
  ImportAsProvisionedProductOutput: { ServiceCatalog: "ImportAsProvisionedProduct" },
  ListAcceptedPortfolioSharesInput: { ServiceCatalog: "ListAcceptedPortfolioShares" },
  ListAcceptedPortfolioSharesOutput: { ServiceCatalog: "ListAcceptedPortfolioShares" },
  ListBudgetsForResourceInput: { ServiceCatalog: "ListBudgetsForResource" },
  ListBudgetsForResourceOutput: { ServiceCatalog: "ListBudgetsForResource" },
  ListConstraintsForPortfolioInput: { ServiceCatalog: "ListConstraintsForPortfolio" },
  ListConstraintsForPortfolioOutput: { ServiceCatalog: "ListConstraintsForPortfolio" },
  ListLaunchPathsInput: { ServiceCatalog: "ListLaunchPaths" },
  ListLaunchPathsOutput: { ServiceCatalog: "ListLaunchPaths" },
  ListOrganizationPortfolioAccessInput: { ServiceCatalog: "ListOrganizationPortfolioAccess" },
  ListOrganizationPortfolioAccessOutput: { ServiceCatalog: "ListOrganizationPortfolioAccess" },
  ListPortfolioAccessInput: { ServiceCatalog: "ListPortfolioAccess" },
  ListPortfolioAccessOutput: { ServiceCatalog: "ListPortfolioAccess" },
  ListPortfoliosInput: { ServiceCatalog: "ListPortfolios" },
  ListPortfoliosOutput: { ServiceCatalog: "ListPortfolios" },
  ListPortfoliosForProductInput: { ServiceCatalog: "ListPortfoliosForProduct" },
  ListPortfoliosForProductOutput: { ServiceCatalog: "ListPortfoliosForProduct" },
  ListPrincipalsForPortfolioInput: { ServiceCatalog: "ListPrincipalsForPortfolio" },
  ListPrincipalsForPortfolioOutput: { ServiceCatalog: "ListPrincipalsForPortfolio" },
  ListProvisionedProductPlansInput: { ServiceCatalog: "ListProvisionedProductPlans" },
  ListProvisionedProductPlansOutput: { ServiceCatalog: "ListProvisionedProductPlans" },
  ListProvisioningArtifactsInput: { ServiceCatalog: "ListProvisioningArtifacts" },
  ListProvisioningArtifactsOutput: { ServiceCatalog: "ListProvisioningArtifacts" },
  ListProvisioningArtifactsForServiceActionInput: {
    ServiceCatalog: "ListProvisioningArtifactsForServiceAction",
  },
  ListProvisioningArtifactsForServiceActionOutput: {
    ServiceCatalog: "ListProvisioningArtifactsForServiceAction",
  },
  ListRecordHistoryInput: { ServiceCatalog: "ListRecordHistory" },
  ListRecordHistoryOutput: { ServiceCatalog: "ListRecordHistory" },
  ListResourcesForTagOptionInput: { ServiceCatalog: "ListResourcesForTagOption" },
  ListResourcesForTagOptionOutput: { ServiceCatalog: "ListResourcesForTagOption" },
  ListServiceActionsInput: { ServiceCatalog: "ListServiceActions" },
  ListServiceActionsOutput: { ServiceCatalog: "ListServiceActions" },
  ListServiceActionsForProvisioningArtifactInput: {
    ServiceCatalog: "ListServiceActionsForProvisioningArtifact",
  },
  ListServiceActionsForProvisioningArtifactOutput: {
    ServiceCatalog: "ListServiceActionsForProvisioningArtifact",
  },
  ListStackInstancesForProvisionedProductInput: {
    ServiceCatalog: "ListStackInstancesForProvisionedProduct",
  },
  ListStackInstancesForProvisionedProductOutput: {
    ServiceCatalog: "ListStackInstancesForProvisionedProduct",
  },
  ListTagOptionsInput: { ServiceCatalog: "ListTagOptions" },
  ListTagOptionsOutput: { ServiceCatalog: "ListTagOptions" },
  NotifyProvisionProductEngineWorkflowResultInput: {
    ServiceCatalog: "NotifyProvisionProductEngineWorkflowResult",
  },
  NotifyProvisionProductEngineWorkflowResultOutput: {
    ServiceCatalog: "NotifyProvisionProductEngineWorkflowResult",
  },
  NotifyTerminateProvisionedProductEngineWorkflowResultInput: {
    ServiceCatalog: "NotifyTerminateProvisionedProductEngineWorkflowResult",
  },
  NotifyTerminateProvisionedProductEngineWorkflowResultOutput: {
    ServiceCatalog: "NotifyTerminateProvisionedProductEngineWorkflowResult",
  },
  NotifyUpdateProvisionedProductEngineWorkflowResultInput: {
    ServiceCatalog: "NotifyUpdateProvisionedProductEngineWorkflowResult",
  },
  NotifyUpdateProvisionedProductEngineWorkflowResultOutput: {
    ServiceCatalog: "NotifyUpdateProvisionedProductEngineWorkflowResult",
  },
  ProvisionProductInput: { ServiceCatalog: "ProvisionProduct" },
  ProvisionProductOutput: { ServiceCatalog: "ProvisionProduct" },
  RejectPortfolioShareInput: { ServiceCatalog: "RejectPortfolioShare" },
  RejectPortfolioShareOutput: { ServiceCatalog: "RejectPortfolioShare" },
  ScanProvisionedProductsInput: { ServiceCatalog: "ScanProvisionedProducts" },
  ScanProvisionedProductsOutput: { ServiceCatalog: "ScanProvisionedProducts" },
  SearchProductsInput: { ServiceCatalog: "SearchProducts" },
  SearchProductsOutput: { ServiceCatalog: "SearchProducts" },
  SearchProductsAsAdminInput: { ServiceCatalog: "SearchProductsAsAdmin" },
  SearchProductsAsAdminOutput: { ServiceCatalog: "SearchProductsAsAdmin" },
  SearchProvisionedProductsInput: { ServiceCatalog: "SearchProvisionedProducts" },
  SearchProvisionedProductsOutput: { ServiceCatalog: "SearchProvisionedProducts" },
  TerminateProvisionedProductInput: { ServiceCatalog: "TerminateProvisionedProduct" },
  TerminateProvisionedProductOutput: { ServiceCatalog: "TerminateProvisionedProduct" },
  UpdateConstraintInput: { ServiceCatalog: "UpdateConstraint" },
  UpdateConstraintOutput: { ServiceCatalog: "UpdateConstraint" },
  UpdatePortfolioInput: { ServiceCatalog: "UpdatePortfolio" },
  UpdatePortfolioOutput: { ServiceCatalog: "UpdatePortfolio" },
  UpdatePortfolioShareInput: { ServiceCatalog: "UpdatePortfolioShare" },
  UpdatePortfolioShareOutput: { ServiceCatalog: "UpdatePortfolioShare" },
  UpdateProductInput: { ServiceCatalog: "UpdateProduct" },
  UpdateProductOutput: { ServiceCatalog: "UpdateProduct" },
  UpdateProvisionedProductInput: { ServiceCatalog: "UpdateProvisionedProduct" },
  UpdateProvisionedProductOutput: { ServiceCatalog: "UpdateProvisionedProduct" },
  UpdateProvisionedProductPropertiesInput: { ServiceCatalog: "UpdateProvisionedProductProperties" },
  UpdateProvisionedProductPropertiesOutput: {
    ServiceCatalog: "UpdateProvisionedProductProperties",
  },
  UpdateProvisioningArtifactInput: { ServiceCatalog: "UpdateProvisioningArtifact" },
  UpdateProvisioningArtifactOutput: { ServiceCatalog: "UpdateProvisioningArtifact" },
  UpdateServiceActionInput: { ServiceCatalog: "UpdateServiceAction" },
  UpdateServiceActionOutput: { ServiceCatalog: "UpdateServiceAction" },
  UpdateTagOptionInput: { ServiceCatalog: "UpdateTagOption" },
  UpdateTagOptionOutput: { ServiceCatalog: "UpdateTagOption" },
  CreateSnapshotInput: { SimSpaceWeaver: "CreateSnapshot", StorageGateway: "CreateSnapshot" },
  CreateSnapshotOutput: { SimSpaceWeaver: "CreateSnapshot", StorageGateway: "CreateSnapshot" },
  DeleteAppInput: { SimSpaceWeaver: "DeleteApp" },
  DeleteAppOutput: { SimSpaceWeaver: "DeleteApp" },
  DeleteSimulationInput: { SimSpaceWeaver: "DeleteSimulation" },
  DeleteSimulationOutput: { SimSpaceWeaver: "DeleteSimulation" },
  DescribeAppInput: { SimSpaceWeaver: "DescribeApp" },
  DescribeAppOutput: { SimSpaceWeaver: "DescribeApp" },
  DescribeSimulationInput: { SimSpaceWeaver: "DescribeSimulation" },
  DescribeSimulationOutput: { SimSpaceWeaver: "DescribeSimulation" },
  ListAppsInput: { SimSpaceWeaver: "ListApps" },
  ListAppsOutput: { SimSpaceWeaver: "ListApps" },
  ListSimulationsInput: { SimSpaceWeaver: "ListSimulations" },
  ListSimulationsOutput: { SimSpaceWeaver: "ListSimulations" },
  StartAppInput: { SimSpaceWeaver: "StartApp" },
  StartAppOutput: { SimSpaceWeaver: "StartApp" },
  StartClockInput: { SimSpaceWeaver: "StartClock" },
  StartClockOutput: { SimSpaceWeaver: "StartClock" },
  StartSimulationInput: { SimSpaceWeaver: "StartSimulation" },
  StartSimulationOutput: { SimSpaceWeaver: "StartSimulation" },
  StopAppInput: { SimSpaceWeaver: "StopApp" },
  StopAppOutput: { SimSpaceWeaver: "StopApp" },
  StopClockInput: { SimSpaceWeaver: "StopClock" },
  StopClockOutput: { SimSpaceWeaver: "StopClock" },
  StopSimulationInput: { SimSpaceWeaver: "StopSimulation" },
  StopSimulationOutput: { SimSpaceWeaver: "StopSimulation" },
  CancelTaskInput: { SnowDeviceManagement: "CancelTask" },
  CancelTaskOutput: { SnowDeviceManagement: "CancelTask" },
  CreateTaskInput: { SnowDeviceManagement: "CreateTask" },
  CreateTaskOutput: { SnowDeviceManagement: "CreateTask" },
  DescribeDeviceInput: { SnowDeviceManagement: "DescribeDevice" },
  DescribeDeviceOutput: { SnowDeviceManagement: "DescribeDevice" },
  DescribeDeviceEc2Input: { SnowDeviceManagement: "DescribeDeviceEc2Instances" },
  DescribeDeviceEc2Output: { SnowDeviceManagement: "DescribeDeviceEc2Instances" },
  DescribeExecutionInput: {
    SnowDeviceManagement: "DescribeExecution",
    StepFunctions: "DescribeExecution",
  },
  DescribeExecutionOutput: {
    SnowDeviceManagement: "DescribeExecution",
    StepFunctions: "DescribeExecution",
  },
  DescribeTaskInput: { SnowDeviceManagement: "DescribeTask" },
  DescribeTaskOutput: { SnowDeviceManagement: "DescribeTask" },
  ListDeviceResourcesInput: { SnowDeviceManagement: "ListDeviceResources" },
  ListDeviceResourcesOutput: { SnowDeviceManagement: "ListDeviceResources" },
  ListDevicesInput: { SnowDeviceManagement: "ListDevices" },
  ListDevicesOutput: { SnowDeviceManagement: "ListDevices" },
  ListExecutionsInput: { SnowDeviceManagement: "ListExecutions", StepFunctions: "ListExecutions" },
  ListExecutionsOutput: { SnowDeviceManagement: "ListExecutions", StepFunctions: "ListExecutions" },
  ListTasksInput: { SnowDeviceManagement: "ListTasks" },
  ListTasksOutput: { SnowDeviceManagement: "ListTasks" },
  CancelClusterResult: { Snowball: "CancelCluster" },
  CancelJobResult: { Snowball: "CancelJob" },
  CreateAddressResult: { Snowball: "CreateAddress" },
  CreateLongTermPricingResult: { Snowball: "CreateLongTermPricing" },
  CreateReturnShippingLabelResult: { Snowball: "CreateReturnShippingLabel" },
  DescribeAddressResult: { Snowball: "DescribeAddress" },
  DescribeClusterResult: { Snowball: "DescribeCluster" },
  DescribeReturnShippingLabelResult: { Snowball: "DescribeReturnShippingLabel" },
  GetJobManifestResult: { Snowball: "GetJobManifest" },
  GetJobUnlockCodeResult: { Snowball: "GetJobUnlockCode" },
  GetSnowballUsageResult: { Snowball: "GetSnowballUsage" },
  GetSoftwareUpdatesResult: { Snowball: "GetSoftwareUpdates" },
  ListClusterJobsResult: { Snowball: "ListClusterJobs" },
  ListClustersResult: { Snowball: "ListClusters" },
  ListCompatibleImagesResult: { Snowball: "ListCompatibleImages" },
  ListLongTermPricingResult: { Snowball: "ListLongTermPricing" },
  ListPickupLocationsResult: { Snowball: "ListPickupLocations" },
  ListServiceVersionsResult: { Snowball: "ListServiceVersions" },
  UpdateClusterResult: { Snowball: "UpdateCluster" },
  UpdateJobResult: { Snowball: "UpdateJob" },
  UpdateJobShipmentStateResult: { Snowball: "UpdateJobShipmentState" },
  UpdateLongTermPricingResult: { Snowball: "UpdateLongTermPricing" },
  DeleteResourcePermissionInput: { SsmSap: "DeleteResourcePermission" },
  DeleteResourcePermissionOutput: { SsmSap: "DeleteResourcePermission" },
  DeregisterApplicationInput: { SsmSap: "DeregisterApplication" },
  DeregisterApplicationOutput: { SsmSap: "DeregisterApplication" },
  GetOperationInput: { SsmSap: "GetOperation" },
  GetOperationOutput: { SsmSap: "GetOperation" },
  GetResourcePermissionInput: { SsmSap: "GetResourcePermission" },
  GetResourcePermissionOutput: { SsmSap: "GetResourcePermission" },
  ListOperationsInput: { SsmSap: "ListOperations" },
  ListOperationsOutput: { SsmSap: "ListOperations" },
  PutResourcePermissionInput: { SsmSap: "PutResourcePermission" },
  PutResourcePermissionOutput: { SsmSap: "PutResourcePermission" },
  RegisterApplicationInput: { SsmSap: "RegisterApplication" },
  RegisterApplicationOutput: { SsmSap: "RegisterApplication" },
  StartApplicationRefreshInput: { SsmSap: "StartApplicationRefresh" },
  StartApplicationRefreshOutput: { SsmSap: "StartApplicationRefresh" },
  UpdateApplicationSettingsInput: { SsmSap: "UpdateApplicationSettings" },
  UpdateApplicationSettingsOutput: { SsmSap: "UpdateApplicationSettings" },
  CreateActivityInput: { StepFunctions: "CreateActivity" },
  CreateActivityOutput: { StepFunctions: "CreateActivity" },
  CreateStateMachineInput: { StepFunctions: "CreateStateMachine" },
  CreateStateMachineOutput: { StepFunctions: "CreateStateMachine" },
  CreateStateMachineAliasInput: { StepFunctions: "CreateStateMachineAlias" },
  CreateStateMachineAliasOutput: { StepFunctions: "CreateStateMachineAlias" },
  DeleteActivityInput: { StepFunctions: "DeleteActivity" },
  DeleteActivityOutput: { StepFunctions: "DeleteActivity" },
  DeleteStateMachineInput: { StepFunctions: "DeleteStateMachine" },
  DeleteStateMachineOutput: { StepFunctions: "DeleteStateMachine" },
  DeleteStateMachineAliasInput: { StepFunctions: "DeleteStateMachineAlias" },
  DeleteStateMachineAliasOutput: { StepFunctions: "DeleteStateMachineAlias" },
  DeleteStateMachineVersionInput: { StepFunctions: "DeleteStateMachineVersion" },
  DeleteStateMachineVersionOutput: { StepFunctions: "DeleteStateMachineVersion" },
  DescribeActivityInput: { StepFunctions: "DescribeActivity" },
  DescribeActivityOutput: { StepFunctions: "DescribeActivity" },
  DescribeMapRunInput: { StepFunctions: "DescribeMapRun" },
  DescribeMapRunOutput: { StepFunctions: "DescribeMapRun" },
  DescribeStateMachineInput: { StepFunctions: "DescribeStateMachine" },
  DescribeStateMachineOutput: { StepFunctions: "DescribeStateMachine" },
  DescribeStateMachineAliasInput: { StepFunctions: "DescribeStateMachineAlias" },
  DescribeStateMachineAliasOutput: { StepFunctions: "DescribeStateMachineAlias" },
  DescribeStateMachineForExecutionInput: { StepFunctions: "DescribeStateMachineForExecution" },
  DescribeStateMachineForExecutionOutput: { StepFunctions: "DescribeStateMachineForExecution" },
  GetActivityTaskInput: { StepFunctions: "GetActivityTask" },
  GetActivityTaskOutput: { StepFunctions: "GetActivityTask" },
  GetExecutionHistoryInput: { StepFunctions: "GetExecutionHistory" },
  GetExecutionHistoryOutput: { StepFunctions: "GetExecutionHistory" },
  ListActivitiesInput: { StepFunctions: "ListActivities" },
  ListActivitiesOutput: { StepFunctions: "ListActivities" },
  ListMapRunsInput: { StepFunctions: "ListMapRuns" },
  ListMapRunsOutput: { StepFunctions: "ListMapRuns" },
  ListStateMachineAliasesInput: { StepFunctions: "ListStateMachineAliases" },
  ListStateMachineAliasesOutput: { StepFunctions: "ListStateMachineAliases" },
  ListStateMachineVersionsInput: { StepFunctions: "ListStateMachineVersions" },
  ListStateMachineVersionsOutput: { StepFunctions: "ListStateMachineVersions" },
  ListStateMachinesInput: { StepFunctions: "ListStateMachines" },
  ListStateMachinesOutput: { StepFunctions: "ListStateMachines" },
  PublishStateMachineVersionInput: { StepFunctions: "PublishStateMachineVersion" },
  PublishStateMachineVersionOutput: { StepFunctions: "PublishStateMachineVersion" },
  SendTaskFailureInput: { StepFunctions: "SendTaskFailure" },
  SendTaskFailureOutput: { StepFunctions: "SendTaskFailure" },
  SendTaskHeartbeatInput: { StepFunctions: "SendTaskHeartbeat" },
  SendTaskHeartbeatOutput: { StepFunctions: "SendTaskHeartbeat" },
  SendTaskSuccessInput: { StepFunctions: "SendTaskSuccess" },
  SendTaskSuccessOutput: { StepFunctions: "SendTaskSuccess" },
  StartExecutionInput: { StepFunctions: "StartExecution" },
  StartExecutionOutput: { StepFunctions: "StartExecution" },
  StartSyncExecutionInput: { StepFunctions: "StartSyncExecution" },
  StartSyncExecutionOutput: { StepFunctions: "StartSyncExecution" },
  StopExecutionInput: { StepFunctions: "StopExecution" },
  StopExecutionOutput: { StepFunctions: "StopExecution" },
  UpdateMapRunInput: { StepFunctions: "UpdateMapRun" },
  UpdateMapRunOutput: { StepFunctions: "UpdateMapRun" },
  UpdateStateMachineInput: { StepFunctions: "UpdateStateMachine" },
  UpdateStateMachineOutput: { StepFunctions: "UpdateStateMachine" },
  UpdateStateMachineAliasInput: { StepFunctions: "UpdateStateMachineAlias" },
  UpdateStateMachineAliasOutput: { StepFunctions: "UpdateStateMachineAlias" },
  ActivateGatewayInput: { StorageGateway: "ActivateGateway" },
  ActivateGatewayOutput: { StorageGateway: "ActivateGateway" },
  AddCacheInput: { StorageGateway: "AddCache" },
  AddCacheOutput: { StorageGateway: "AddCache" },
  AddTagsToResourceInput: { StorageGateway: "AddTagsToResource" },
  AddTagsToResourceOutput: { StorageGateway: "AddTagsToResource" },
  AddUploadBufferInput: { StorageGateway: "AddUploadBuffer" },
  AddUploadBufferOutput: { StorageGateway: "AddUploadBuffer" },
  AddWorkingStorageInput: { StorageGateway: "AddWorkingStorage" },
  AddWorkingStorageOutput: { StorageGateway: "AddWorkingStorage" },
  AssignTapePoolInput: { StorageGateway: "AssignTapePool" },
  AssignTapePoolOutput: { StorageGateway: "AssignTapePool" },
  AssociateFileSystemInput: { StorageGateway: "AssociateFileSystem" },
  AssociateFileSystemOutput: { StorageGateway: "AssociateFileSystem" },
  AttachVolumeInput: { StorageGateway: "AttachVolume" },
  AttachVolumeOutput: { StorageGateway: "AttachVolume" },
  CancelArchivalInput: { StorageGateway: "CancelArchival" },
  CancelArchivalOutput: { StorageGateway: "CancelArchival" },
  CancelRetrievalInput: { StorageGateway: "CancelRetrieval" },
  CancelRetrievalOutput: { StorageGateway: "CancelRetrieval" },
  CreateCachediSCSIVolumeInput: { StorageGateway: "CreateCachediSCSIVolume" },
  CreateCachediSCSIVolumeOutput: { StorageGateway: "CreateCachediSCSIVolume" },
  CreateNFSFileShareInput: { StorageGateway: "CreateNFSFileShare" },
  CreateNFSFileShareOutput: { StorageGateway: "CreateNFSFileShare" },
  CreateSMBFileShareInput: { StorageGateway: "CreateSMBFileShare" },
  CreateSMBFileShareOutput: { StorageGateway: "CreateSMBFileShare" },
  CreateSnapshotFromVolumeRecoveryPointInput: {
    StorageGateway: "CreateSnapshotFromVolumeRecoveryPoint",
  },
  CreateSnapshotFromVolumeRecoveryPointOutput: {
    StorageGateway: "CreateSnapshotFromVolumeRecoveryPoint",
  },
  CreateStorediSCSIVolumeInput: { StorageGateway: "CreateStorediSCSIVolume" },
  CreateStorediSCSIVolumeOutput: { StorageGateway: "CreateStorediSCSIVolume" },
  CreateTapePoolInput: { StorageGateway: "CreateTapePool" },
  CreateTapePoolOutput: { StorageGateway: "CreateTapePool" },
  CreateTapeWithBarcodeInput: { StorageGateway: "CreateTapeWithBarcode" },
  CreateTapeWithBarcodeOutput: { StorageGateway: "CreateTapeWithBarcode" },
  CreateTapesInput: { StorageGateway: "CreateTapes" },
  CreateTapesOutput: { StorageGateway: "CreateTapes" },
  DeleteAutomaticTapeCreationPolicyInput: { StorageGateway: "DeleteAutomaticTapeCreationPolicy" },
  DeleteAutomaticTapeCreationPolicyOutput: { StorageGateway: "DeleteAutomaticTapeCreationPolicy" },
  DeleteBandwidthRateLimitInput: { StorageGateway: "DeleteBandwidthRateLimit" },
  DeleteBandwidthRateLimitOutput: { StorageGateway: "DeleteBandwidthRateLimit" },
  DeleteChapCredentialsInput: { StorageGateway: "DeleteChapCredentials" },
  DeleteChapCredentialsOutput: { StorageGateway: "DeleteChapCredentials" },
  DeleteFileShareInput: { StorageGateway: "DeleteFileShare" },
  DeleteFileShareOutput: { StorageGateway: "DeleteFileShare" },
  DeleteSnapshotScheduleInput: { StorageGateway: "DeleteSnapshotSchedule" },
  DeleteSnapshotScheduleOutput: { StorageGateway: "DeleteSnapshotSchedule" },
  DeleteTapeInput: { StorageGateway: "DeleteTape" },
  DeleteTapeOutput: { StorageGateway: "DeleteTape" },
  DeleteTapeArchiveInput: { StorageGateway: "DeleteTapeArchive" },
  DeleteTapeArchiveOutput: { StorageGateway: "DeleteTapeArchive" },
  DeleteTapePoolInput: { StorageGateway: "DeleteTapePool" },
  DeleteTapePoolOutput: { StorageGateway: "DeleteTapePool" },
  DeleteVolumeInput: { StorageGateway: "DeleteVolume" },
  DeleteVolumeOutput: { StorageGateway: "DeleteVolume" },
  DescribeAvailabilityMonitorTestInput: { StorageGateway: "DescribeAvailabilityMonitorTest" },
  DescribeAvailabilityMonitorTestOutput: { StorageGateway: "DescribeAvailabilityMonitorTest" },
  DescribeBandwidthRateLimitInput: { StorageGateway: "DescribeBandwidthRateLimit" },
  DescribeBandwidthRateLimitOutput: { StorageGateway: "DescribeBandwidthRateLimit" },
  DescribeBandwidthRateLimitScheduleInput: { StorageGateway: "DescribeBandwidthRateLimitSchedule" },
  DescribeBandwidthRateLimitScheduleOutput: {
    StorageGateway: "DescribeBandwidthRateLimitSchedule",
  },
  DescribeCacheInput: { StorageGateway: "DescribeCache" },
  DescribeCacheOutput: { StorageGateway: "DescribeCache" },
  DescribeCachediSCSIVolumesInput: { StorageGateway: "DescribeCachediSCSIVolumes" },
  DescribeCachediSCSIVolumesOutput: { StorageGateway: "DescribeCachediSCSIVolumes" },
  DescribeChapCredentialsInput: { StorageGateway: "DescribeChapCredentials" },
  DescribeChapCredentialsOutput: { StorageGateway: "DescribeChapCredentials" },
  DescribeFileSystemAssociationsInput: { StorageGateway: "DescribeFileSystemAssociations" },
  DescribeFileSystemAssociationsOutput: { StorageGateway: "DescribeFileSystemAssociations" },
  DescribeGatewayInformationInput: { StorageGateway: "DescribeGatewayInformation" },
  DescribeGatewayInformationOutput: { StorageGateway: "DescribeGatewayInformation" },
  DescribeMaintenanceStartTimeInput: { StorageGateway: "DescribeMaintenanceStartTime" },
  DescribeMaintenanceStartTimeOutput: { StorageGateway: "DescribeMaintenanceStartTime" },
  DescribeNFSFileSharesInput: { StorageGateway: "DescribeNFSFileShares" },
  DescribeNFSFileSharesOutput: { StorageGateway: "DescribeNFSFileShares" },
  DescribeSMBFileSharesInput: { StorageGateway: "DescribeSMBFileShares" },
  DescribeSMBFileSharesOutput: { StorageGateway: "DescribeSMBFileShares" },
  DescribeSMBSettingsInput: { StorageGateway: "DescribeSMBSettings" },
  DescribeSMBSettingsOutput: { StorageGateway: "DescribeSMBSettings" },
  DescribeSnapshotScheduleInput: { StorageGateway: "DescribeSnapshotSchedule" },
  DescribeSnapshotScheduleOutput: { StorageGateway: "DescribeSnapshotSchedule" },
  DescribeStorediSCSIVolumesInput: { StorageGateway: "DescribeStorediSCSIVolumes" },
  DescribeStorediSCSIVolumesOutput: { StorageGateway: "DescribeStorediSCSIVolumes" },
  DescribeTapeArchivesInput: { StorageGateway: "DescribeTapeArchives" },
  DescribeTapeArchivesOutput: { StorageGateway: "DescribeTapeArchives" },
  DescribeTapeRecoveryPointsInput: { StorageGateway: "DescribeTapeRecoveryPoints" },
  DescribeTapeRecoveryPointsOutput: { StorageGateway: "DescribeTapeRecoveryPoints" },
  DescribeTapesInput: { StorageGateway: "DescribeTapes" },
  DescribeTapesOutput: { StorageGateway: "DescribeTapes" },
  DescribeUploadBufferInput: { StorageGateway: "DescribeUploadBuffer" },
  DescribeUploadBufferOutput: { StorageGateway: "DescribeUploadBuffer" },
  DescribeVTLDevicesInput: { StorageGateway: "DescribeVTLDevices" },
  DescribeVTLDevicesOutput: { StorageGateway: "DescribeVTLDevices" },
  DescribeWorkingStorageInput: { StorageGateway: "DescribeWorkingStorage" },
  DescribeWorkingStorageOutput: { StorageGateway: "DescribeWorkingStorage" },
  DetachVolumeInput: { StorageGateway: "DetachVolume" },
  DetachVolumeOutput: { StorageGateway: "DetachVolume" },
  DisableGatewayInput: { StorageGateway: "DisableGateway" },
  DisableGatewayOutput: { StorageGateway: "DisableGateway" },
  DisassociateFileSystemInput: { StorageGateway: "DisassociateFileSystem" },
  DisassociateFileSystemOutput: { StorageGateway: "DisassociateFileSystem" },
  JoinDomainInput: { StorageGateway: "JoinDomain" },
  JoinDomainOutput: { StorageGateway: "JoinDomain" },
  ListAutomaticTapeCreationPoliciesInput: { StorageGateway: "ListAutomaticTapeCreationPolicies" },
  ListAutomaticTapeCreationPoliciesOutput: { StorageGateway: "ListAutomaticTapeCreationPolicies" },
  ListFileSharesInput: { StorageGateway: "ListFileShares" },
  ListFileSharesOutput: { StorageGateway: "ListFileShares" },
  ListFileSystemAssociationsInput: { StorageGateway: "ListFileSystemAssociations" },
  ListFileSystemAssociationsOutput: { StorageGateway: "ListFileSystemAssociations" },
  ListLocalDisksInput: { StorageGateway: "ListLocalDisks" },
  ListLocalDisksOutput: { StorageGateway: "ListLocalDisks" },
  ListTapePoolsInput: { StorageGateway: "ListTapePools" },
  ListTapePoolsOutput: { StorageGateway: "ListTapePools" },
  ListTapesInput: { StorageGateway: "ListTapes" },
  ListTapesOutput: { StorageGateway: "ListTapes" },
  ListVolumeInitiatorsInput: { StorageGateway: "ListVolumeInitiators" },
  ListVolumeInitiatorsOutput: { StorageGateway: "ListVolumeInitiators" },
  ListVolumeRecoveryPointsInput: { StorageGateway: "ListVolumeRecoveryPoints" },
  ListVolumeRecoveryPointsOutput: { StorageGateway: "ListVolumeRecoveryPoints" },
  ListVolumesInput: { StorageGateway: "ListVolumes" },
  ListVolumesOutput: { StorageGateway: "ListVolumes" },
  NotifyWhenUploadedInput: { StorageGateway: "NotifyWhenUploaded" },
  NotifyWhenUploadedOutput: { StorageGateway: "NotifyWhenUploaded" },
  RefreshCacheInput: { StorageGateway: "RefreshCache" },
  RefreshCacheOutput: { StorageGateway: "RefreshCache" },
  RemoveTagsFromResourceInput: { StorageGateway: "RemoveTagsFromResource" },
  RemoveTagsFromResourceOutput: { StorageGateway: "RemoveTagsFromResource" },
  ResetCacheInput: { StorageGateway: "ResetCache" },
  ResetCacheOutput: { StorageGateway: "ResetCache" },
  RetrieveTapeArchiveInput: { StorageGateway: "RetrieveTapeArchive" },
  RetrieveTapeArchiveOutput: { StorageGateway: "RetrieveTapeArchive" },
  RetrieveTapeRecoveryPointInput: { StorageGateway: "RetrieveTapeRecoveryPoint" },
  RetrieveTapeRecoveryPointOutput: { StorageGateway: "RetrieveTapeRecoveryPoint" },
  SetLocalConsolePasswordInput: { StorageGateway: "SetLocalConsolePassword" },
  SetLocalConsolePasswordOutput: { StorageGateway: "SetLocalConsolePassword" },
  SetSMBGuestPasswordInput: { StorageGateway: "SetSMBGuestPassword" },
  SetSMBGuestPasswordOutput: { StorageGateway: "SetSMBGuestPassword" },
  ShutdownGatewayInput: { StorageGateway: "ShutdownGateway" },
  ShutdownGatewayOutput: { StorageGateway: "ShutdownGateway" },
  StartAvailabilityMonitorTestInput: { StorageGateway: "StartAvailabilityMonitorTest" },
  StartAvailabilityMonitorTestOutput: { StorageGateway: "StartAvailabilityMonitorTest" },
  StartGatewayInput: { StorageGateway: "StartGateway" },
  StartGatewayOutput: { StorageGateway: "StartGateway" },
  UpdateAutomaticTapeCreationPolicyInput: { StorageGateway: "UpdateAutomaticTapeCreationPolicy" },
  UpdateAutomaticTapeCreationPolicyOutput: { StorageGateway: "UpdateAutomaticTapeCreationPolicy" },
  UpdateBandwidthRateLimitInput: { StorageGateway: "UpdateBandwidthRateLimit" },
  UpdateBandwidthRateLimitOutput: { StorageGateway: "UpdateBandwidthRateLimit" },
  UpdateBandwidthRateLimitScheduleInput: { StorageGateway: "UpdateBandwidthRateLimitSchedule" },
  UpdateBandwidthRateLimitScheduleOutput: { StorageGateway: "UpdateBandwidthRateLimitSchedule" },
  UpdateChapCredentialsInput: { StorageGateway: "UpdateChapCredentials" },
  UpdateChapCredentialsOutput: { StorageGateway: "UpdateChapCredentials" },
  UpdateFileSystemAssociationInput: { StorageGateway: "UpdateFileSystemAssociation" },
  UpdateFileSystemAssociationOutput: { StorageGateway: "UpdateFileSystemAssociation" },
  UpdateMaintenanceStartTimeInput: { StorageGateway: "UpdateMaintenanceStartTime" },
  UpdateMaintenanceStartTimeOutput: { StorageGateway: "UpdateMaintenanceStartTime" },
  UpdateNFSFileShareInput: { StorageGateway: "UpdateNFSFileShare" },
  UpdateNFSFileShareOutput: { StorageGateway: "UpdateNFSFileShare" },
  UpdateSMBFileShareInput: { StorageGateway: "UpdateSMBFileShare" },
  UpdateSMBFileShareOutput: { StorageGateway: "UpdateSMBFileShare" },
  UpdateSMBFileShareVisibilityInput: { StorageGateway: "UpdateSMBFileShareVisibility" },
  UpdateSMBFileShareVisibilityOutput: { StorageGateway: "UpdateSMBFileShareVisibility" },
  UpdateSMBLocalGroupsInput: { StorageGateway: "UpdateSMBLocalGroups" },
  UpdateSMBLocalGroupsOutput: { StorageGateway: "UpdateSMBLocalGroups" },
  UpdateSMBSecurityStrategyInput: { StorageGateway: "UpdateSMBSecurityStrategy" },
  UpdateSMBSecurityStrategyOutput: { StorageGateway: "UpdateSMBSecurityStrategy" },
  UpdateSnapshotScheduleInput: { StorageGateway: "UpdateSnapshotSchedule" },
  UpdateSnapshotScheduleOutput: { StorageGateway: "UpdateSnapshotSchedule" },
  UpdateVTLDeviceTypeInput: { StorageGateway: "UpdateVTLDeviceType" },
  UpdateVTLDeviceTypeOutput: { StorageGateway: "UpdateVTLDeviceType" },
  CreateSlackChannelConfigurationResult: { SupportApp: "CreateSlackChannelConfiguration" },
  DeleteAccountAliasResult: { SupportApp: "DeleteAccountAlias" },
  DeleteSlackChannelConfigurationResult: { SupportApp: "DeleteSlackChannelConfiguration" },
  DeleteSlackWorkspaceConfigurationResult: { SupportApp: "DeleteSlackWorkspaceConfiguration" },
  GetAccountAliasResult: { SupportApp: "GetAccountAlias" },
  ListSlackChannelConfigurationsResult: { SupportApp: "ListSlackChannelConfigurations" },
  ListSlackWorkspaceConfigurationsResult: { SupportApp: "ListSlackWorkspaceConfigurations" },
  PutAccountAliasResult: { SupportApp: "PutAccountAlias" },
  RegisterSlackWorkspaceForOrganizationResult: {
    SupportApp: "RegisterSlackWorkspaceForOrganization",
  },
  UpdateSlackChannelConfigurationResult: { SupportApp: "UpdateSlackChannelConfiguration" },
  CancelSolNetworkOperationInput: { Tnb: "CancelSolNetworkOperation" },
  CreateSolFunctionPackageInput: { Tnb: "CreateSolFunctionPackage" },
  CreateSolFunctionPackageOutput: { Tnb: "CreateSolFunctionPackage" },
  CreateSolNetworkInstanceInput: { Tnb: "CreateSolNetworkInstance" },
  CreateSolNetworkInstanceOutput: { Tnb: "CreateSolNetworkInstance" },
  CreateSolNetworkPackageInput: { Tnb: "CreateSolNetworkPackage" },
  CreateSolNetworkPackageOutput: { Tnb: "CreateSolNetworkPackage" },
  DeleteSolFunctionPackageInput: { Tnb: "DeleteSolFunctionPackage" },
  DeleteSolNetworkInstanceInput: { Tnb: "DeleteSolNetworkInstance" },
  DeleteSolNetworkPackageInput: { Tnb: "DeleteSolNetworkPackage" },
  GetSolFunctionInstanceInput: { Tnb: "GetSolFunctionInstance" },
  GetSolFunctionInstanceOutput: { Tnb: "GetSolFunctionInstance" },
  GetSolFunctionPackageInput: { Tnb: "GetSolFunctionPackage" },
  GetSolFunctionPackageOutput: { Tnb: "GetSolFunctionPackage" },
  GetSolFunctionPackageContentInput: { Tnb: "GetSolFunctionPackageContent" },
  GetSolFunctionPackageContentOutput: { Tnb: "GetSolFunctionPackageContent" },
  GetSolFunctionPackageDescriptorInput: { Tnb: "GetSolFunctionPackageDescriptor" },
  GetSolFunctionPackageDescriptorOutput: { Tnb: "GetSolFunctionPackageDescriptor" },
  GetSolNetworkInstanceInput: { Tnb: "GetSolNetworkInstance" },
  GetSolNetworkInstanceOutput: { Tnb: "GetSolNetworkInstance" },
  GetSolNetworkOperationInput: { Tnb: "GetSolNetworkOperation" },
  GetSolNetworkOperationOutput: { Tnb: "GetSolNetworkOperation" },
  GetSolNetworkPackageInput: { Tnb: "GetSolNetworkPackage" },
  GetSolNetworkPackageOutput: { Tnb: "GetSolNetworkPackage" },
  GetSolNetworkPackageContentInput: { Tnb: "GetSolNetworkPackageContent" },
  GetSolNetworkPackageContentOutput: { Tnb: "GetSolNetworkPackageContent" },
  GetSolNetworkPackageDescriptorInput: { Tnb: "GetSolNetworkPackageDescriptor" },
  GetSolNetworkPackageDescriptorOutput: { Tnb: "GetSolNetworkPackageDescriptor" },
  InstantiateSolNetworkInstanceInput: { Tnb: "InstantiateSolNetworkInstance" },
  InstantiateSolNetworkInstanceOutput: { Tnb: "InstantiateSolNetworkInstance" },
  ListSolFunctionInstancesInput: { Tnb: "ListSolFunctionInstances" },
  ListSolFunctionInstancesOutput: { Tnb: "ListSolFunctionInstances" },
  ListSolFunctionPackagesInput: { Tnb: "ListSolFunctionPackages" },
  ListSolFunctionPackagesOutput: { Tnb: "ListSolFunctionPackages" },
  ListSolNetworkInstancesInput: { Tnb: "ListSolNetworkInstances" },
  ListSolNetworkInstancesOutput: { Tnb: "ListSolNetworkInstances" },
  ListSolNetworkOperationsInput: { Tnb: "ListSolNetworkOperations" },
  ListSolNetworkOperationsOutput: { Tnb: "ListSolNetworkOperations" },
  ListSolNetworkPackagesInput: { Tnb: "ListSolNetworkPackages" },
  ListSolNetworkPackagesOutput: { Tnb: "ListSolNetworkPackages" },
  PutSolFunctionPackageContentInput: { Tnb: "PutSolFunctionPackageContent" },
  PutSolFunctionPackageContentOutput: { Tnb: "PutSolFunctionPackageContent" },
  PutSolNetworkPackageContentInput: { Tnb: "PutSolNetworkPackageContent" },
  PutSolNetworkPackageContentOutput: { Tnb: "PutSolNetworkPackageContent" },
  TerminateSolNetworkInstanceInput: { Tnb: "TerminateSolNetworkInstance" },
  TerminateSolNetworkInstanceOutput: { Tnb: "TerminateSolNetworkInstance" },
  UpdateSolFunctionPackageInput: { Tnb: "UpdateSolFunctionPackage" },
  UpdateSolFunctionPackageOutput: { Tnb: "UpdateSolFunctionPackage" },
  UpdateSolNetworkInstanceInput: { Tnb: "UpdateSolNetworkInstance" },
  UpdateSolNetworkInstanceOutput: { Tnb: "UpdateSolNetworkInstance" },
  UpdateSolNetworkPackageInput: { Tnb: "UpdateSolNetworkPackage" },
  UpdateSolNetworkPackageOutput: { Tnb: "UpdateSolNetworkPackage" },
  ValidateSolFunctionPackageContentInput: { Tnb: "ValidateSolFunctionPackageContent" },
  ValidateSolFunctionPackageContentOutput: { Tnb: "ValidateSolFunctionPackageContent" },
  ValidateSolNetworkPackageContentInput: { Tnb: "ValidateSolNetworkPackageContent" },
  ValidateSolNetworkPackageContentOutput: { Tnb: "ValidateSolNetworkPackageContent" },
  CreateIdentitySourceInput: { VerifiedPermissions: "CreateIdentitySource" },
  CreateIdentitySourceOutput: { VerifiedPermissions: "CreateIdentitySource" },
  CreatePolicyInput: { VerifiedPermissions: "CreatePolicy" },
  CreatePolicyOutput: { VerifiedPermissions: "CreatePolicy" },
  CreatePolicyStoreInput: { VerifiedPermissions: "CreatePolicyStore" },
  CreatePolicyStoreOutput: { VerifiedPermissions: "CreatePolicyStore" },
  CreatePolicyTemplateInput: { VerifiedPermissions: "CreatePolicyTemplate" },
  CreatePolicyTemplateOutput: { VerifiedPermissions: "CreatePolicyTemplate" },
  DeleteIdentitySourceInput: { VerifiedPermissions: "DeleteIdentitySource" },
  DeleteIdentitySourceOutput: { VerifiedPermissions: "DeleteIdentitySource" },
  DeletePolicyInput: { VerifiedPermissions: "DeletePolicy" },
  DeletePolicyOutput: { VerifiedPermissions: "DeletePolicy" },
  DeletePolicyStoreInput: { VerifiedPermissions: "DeletePolicyStore" },
  DeletePolicyStoreOutput: { VerifiedPermissions: "DeletePolicyStore" },
  DeletePolicyTemplateInput: { VerifiedPermissions: "DeletePolicyTemplate" },
  DeletePolicyTemplateOutput: { VerifiedPermissions: "DeletePolicyTemplate" },
  GetIdentitySourceInput: { VerifiedPermissions: "GetIdentitySource" },
  GetIdentitySourceOutput: { VerifiedPermissions: "GetIdentitySource" },
  GetPolicyInput: { VerifiedPermissions: "GetPolicy" },
  GetPolicyOutput: { VerifiedPermissions: "GetPolicy" },
  GetPolicyStoreInput: { VerifiedPermissions: "GetPolicyStore" },
  GetPolicyStoreOutput: { VerifiedPermissions: "GetPolicyStore" },
  GetPolicyTemplateInput: { VerifiedPermissions: "GetPolicyTemplate" },
  GetPolicyTemplateOutput: { VerifiedPermissions: "GetPolicyTemplate" },
  IsAuthorizedInput: { VerifiedPermissions: "IsAuthorized" },
  IsAuthorizedOutput: { VerifiedPermissions: "IsAuthorized" },
  IsAuthorizedWithTokenInput: { VerifiedPermissions: "IsAuthorizedWithToken" },
  IsAuthorizedWithTokenOutput: { VerifiedPermissions: "IsAuthorizedWithToken" },
  ListIdentitySourcesInput: { VerifiedPermissions: "ListIdentitySources" },
  ListIdentitySourcesOutput: { VerifiedPermissions: "ListIdentitySources" },
  ListPoliciesInput: { VerifiedPermissions: "ListPolicies" },
  ListPoliciesOutput: { VerifiedPermissions: "ListPolicies" },
  ListPolicyStoresInput: { VerifiedPermissions: "ListPolicyStores" },
  ListPolicyStoresOutput: { VerifiedPermissions: "ListPolicyStores" },
  ListPolicyTemplatesInput: { VerifiedPermissions: "ListPolicyTemplates" },
  ListPolicyTemplatesOutput: { VerifiedPermissions: "ListPolicyTemplates" },
  PutSchemaInput: { VerifiedPermissions: "PutSchema" },
  PutSchemaOutput: { VerifiedPermissions: "PutSchema" },
  UpdateIdentitySourceInput: { VerifiedPermissions: "UpdateIdentitySource" },
  UpdateIdentitySourceOutput: { VerifiedPermissions: "UpdateIdentitySource" },
  UpdatePolicyInput: { VerifiedPermissions: "UpdatePolicy" },
  UpdatePolicyOutput: { VerifiedPermissions: "UpdatePolicy" },
  UpdatePolicyStoreInput: { VerifiedPermissions: "UpdatePolicyStore" },
  UpdatePolicyStoreOutput: { VerifiedPermissions: "UpdatePolicyStore" },
  UpdatePolicyTemplateInput: { VerifiedPermissions: "UpdatePolicyTemplate" },
  UpdatePolicyTemplateOutput: { VerifiedPermissions: "UpdatePolicyTemplate" },
  AssociateLensesInput: { WellArchitected: "AssociateLenses" },
  AssociateProfilesInput: { WellArchitected: "AssociateProfiles" },
  CreateLensShareInput: { WellArchitected: "CreateLensShare" },
  CreateLensShareOutput: { WellArchitected: "CreateLensShare" },
  CreateLensVersionInput: { WellArchitected: "CreateLensVersion" },
  CreateLensVersionOutput: { WellArchitected: "CreateLensVersion" },
  CreateMilestoneInput: { WellArchitected: "CreateMilestone" },
  CreateMilestoneOutput: { WellArchitected: "CreateMilestone" },
  CreateProfileInput: { WellArchitected: "CreateProfile" },
  CreateProfileOutput: { WellArchitected: "CreateProfile" },
  CreateProfileShareInput: { WellArchitected: "CreateProfileShare" },
  CreateProfileShareOutput: { WellArchitected: "CreateProfileShare" },
  CreateWorkloadInput: { WellArchitected: "CreateWorkload" },
  CreateWorkloadOutput: { WellArchitected: "CreateWorkload" },
  CreateWorkloadShareInput: { WellArchitected: "CreateWorkloadShare" },
  CreateWorkloadShareOutput: { WellArchitected: "CreateWorkloadShare" },
  DeleteLensInput: { WellArchitected: "DeleteLens" },
  DeleteLensShareInput: { WellArchitected: "DeleteLensShare" },
  DeleteProfileInput: { WellArchitected: "DeleteProfile" },
  DeleteProfileShareInput: { WellArchitected: "DeleteProfileShare" },
  DeleteWorkloadInput: { WellArchitected: "DeleteWorkload" },
  DeleteWorkloadShareInput: { WellArchitected: "DeleteWorkloadShare" },
  DisassociateLensesInput: { WellArchitected: "DisassociateLenses" },
  DisassociateProfilesInput: { WellArchitected: "DisassociateProfiles" },
  ExportLensInput: { WellArchitected: "ExportLens" },
  ExportLensOutput: { WellArchitected: "ExportLens" },
  GetAnswerInput: { WellArchitected: "GetAnswer" },
  GetAnswerOutput: { WellArchitected: "GetAnswer" },
  GetConsolidatedReportInput: { WellArchitected: "GetConsolidatedReport" },
  GetConsolidatedReportOutput: { WellArchitected: "GetConsolidatedReport" },
  GetLensInput: { WellArchitected: "GetLens" },
  GetLensOutput: { WellArchitected: "GetLens" },
  GetLensReviewInput: { WellArchitected: "GetLensReview" },
  GetLensReviewOutput: { WellArchitected: "GetLensReview" },
  GetLensReviewReportInput: { WellArchitected: "GetLensReviewReport" },
  GetLensReviewReportOutput: { WellArchitected: "GetLensReviewReport" },
  GetLensVersionDifferenceInput: { WellArchitected: "GetLensVersionDifference" },
  GetLensVersionDifferenceOutput: { WellArchitected: "GetLensVersionDifference" },
  GetMilestoneInput: { WellArchitected: "GetMilestone" },
  GetMilestoneOutput: { WellArchitected: "GetMilestone" },
  GetProfileInput: { WellArchitected: "GetProfile" },
  GetProfileOutput: { WellArchitected: "GetProfile" },
  GetProfileTemplateInput: { WellArchitected: "GetProfileTemplate" },
  GetProfileTemplateOutput: { WellArchitected: "GetProfileTemplate" },
  GetWorkloadInput: { WellArchitected: "GetWorkload" },
  GetWorkloadOutput: { WellArchitected: "GetWorkload" },
  ImportLensInput: { WellArchitected: "ImportLens" },
  ImportLensOutput: { WellArchitected: "ImportLens" },
  ListAnswersInput: { WellArchitected: "ListAnswers" },
  ListAnswersOutput: { WellArchitected: "ListAnswers" },
  ListCheckDetailsInput: { WellArchitected: "ListCheckDetails" },
  ListCheckDetailsOutput: { WellArchitected: "ListCheckDetails" },
  ListCheckSummariesInput: { WellArchitected: "ListCheckSummaries" },
  ListCheckSummariesOutput: { WellArchitected: "ListCheckSummaries" },
  ListLensReviewImprovementsInput: { WellArchitected: "ListLensReviewImprovements" },
  ListLensReviewImprovementsOutput: { WellArchitected: "ListLensReviewImprovements" },
  ListLensReviewsInput: { WellArchitected: "ListLensReviews" },
  ListLensReviewsOutput: { WellArchitected: "ListLensReviews" },
  ListLensSharesInput: { WellArchitected: "ListLensShares" },
  ListLensSharesOutput: { WellArchitected: "ListLensShares" },
  ListLensesInput: { WellArchitected: "ListLenses" },
  ListLensesOutput: { WellArchitected: "ListLenses" },
  ListMilestonesInput: { WellArchitected: "ListMilestones" },
  ListMilestonesOutput: { WellArchitected: "ListMilestones" },
  ListNotificationsInput: { WellArchitected: "ListNotifications" },
  ListNotificationsOutput: { WellArchitected: "ListNotifications" },
  ListProfileNotificationsInput: { WellArchitected: "ListProfileNotifications" },
  ListProfileNotificationsOutput: { WellArchitected: "ListProfileNotifications" },
  ListProfileSharesInput: { WellArchitected: "ListProfileShares" },
  ListProfileSharesOutput: { WellArchitected: "ListProfileShares" },
  ListProfilesInput: { WellArchitected: "ListProfiles" },
  ListProfilesOutput: { WellArchitected: "ListProfiles" },
  ListShareInvitationsInput: { WellArchitected: "ListShareInvitations" },
  ListShareInvitationsOutput: { WellArchitected: "ListShareInvitations" },
  ListWorkloadSharesInput: { WellArchitected: "ListWorkloadShares" },
  ListWorkloadSharesOutput: { WellArchitected: "ListWorkloadShares" },
  ListWorkloadsInput: { WellArchitected: "ListWorkloads" },
  ListWorkloadsOutput: { WellArchitected: "ListWorkloads" },
  UpdateAnswerInput: { WellArchitected: "UpdateAnswer" },
  UpdateAnswerOutput: { WellArchitected: "UpdateAnswer" },
  UpdateLensReviewInput: { WellArchitected: "UpdateLensReview" },
  UpdateLensReviewOutput: { WellArchitected: "UpdateLensReview" },
  UpdateProfileInput: { WellArchitected: "UpdateProfile" },
  UpdateProfileOutput: { WellArchitected: "UpdateProfile" },
  UpdateShareInvitationInput: { WellArchitected: "UpdateShareInvitation" },
  UpdateShareInvitationOutput: { WellArchitected: "UpdateShareInvitation" },
  UpdateWorkloadInput: { WellArchitected: "UpdateWorkload" },
  UpdateWorkloadOutput: { WellArchitected: "UpdateWorkload" },
  UpdateWorkloadShareInput: { WellArchitected: "UpdateWorkloadShare" },
  UpdateWorkloadShareOutput: { WellArchitected: "UpdateWorkloadShare" },
  UpgradeLensReviewInput: { WellArchitected: "UpgradeLensReview" },
  UpgradeProfileVersionInput: { WellArchitected: "UpgradeProfileVersion" },
  AssociateConnectionAliasResult: { WorkSpaces: "AssociateConnectionAlias" },
  AssociateIpGroupsResult: { WorkSpaces: "AssociateIpGroups" },
  AuthorizeIpRulesResult: { WorkSpaces: "AuthorizeIpRules" },
  CopyWorkspaceImageResult: { WorkSpaces: "CopyWorkspaceImage" },
  CreateConnectClientAddInResult: { WorkSpaces: "CreateConnectClientAddIn" },
  CreateConnectionAliasResult: { WorkSpaces: "CreateConnectionAlias" },
  CreateIpGroupResult: { WorkSpaces: "CreateIpGroup" },
  CreateStandbyWorkspacesResult: { WorkSpaces: "CreateStandbyWorkspaces" },
  CreateTagsResult: { WorkSpaces: "CreateTags" },
  CreateUpdatedWorkspaceImageResult: { WorkSpaces: "CreateUpdatedWorkspaceImage" },
  CreateWorkspaceBundleResult: { WorkSpaces: "CreateWorkspaceBundle" },
  CreateWorkspaceImageResult: { WorkSpaces: "CreateWorkspaceImage" },
  CreateWorkspacesResult: { WorkSpaces: "CreateWorkspaces" },
  DeleteClientBrandingResult: { WorkSpaces: "DeleteClientBranding" },
  DeleteConnectClientAddInResult: { WorkSpaces: "DeleteConnectClientAddIn" },
  DeleteConnectionAliasResult: { WorkSpaces: "DeleteConnectionAlias" },
  DeleteIpGroupResult: { WorkSpaces: "DeleteIpGroup" },
  DeleteTagsResult: { WorkSpaces: "DeleteTags" },
  DeleteWorkspaceBundleResult: { WorkSpaces: "DeleteWorkspaceBundle" },
  DeleteWorkspaceImageResult: { WorkSpaces: "DeleteWorkspaceImage" },
  DeregisterWorkspaceDirectoryResult: { WorkSpaces: "DeregisterWorkspaceDirectory" },
  DescribeAccountResult: { WorkSpaces: "DescribeAccount" },
  DescribeAccountModificationsResult: { WorkSpaces: "DescribeAccountModifications" },
  DescribeClientBrandingResult: { WorkSpaces: "DescribeClientBranding" },
  DescribeClientPropertiesResult: { WorkSpaces: "DescribeClientProperties" },
  DescribeConnectClientAddInsResult: { WorkSpaces: "DescribeConnectClientAddIns" },
  DescribeConnectionAliasPermissionsResult: { WorkSpaces: "DescribeConnectionAliasPermissions" },
  DescribeConnectionAliasesResult: { WorkSpaces: "DescribeConnectionAliases" },
  DescribeIpGroupsResult: { WorkSpaces: "DescribeIpGroups" },
  DescribeWorkspaceBundlesResult: { WorkSpaces: "DescribeWorkspaceBundles" },
  DescribeWorkspaceDirectoriesResult: { WorkSpaces: "DescribeWorkspaceDirectories" },
  DescribeWorkspaceImagePermissionsResult: { WorkSpaces: "DescribeWorkspaceImagePermissions" },
  DescribeWorkspaceImagesResult: { WorkSpaces: "DescribeWorkspaceImages" },
  DescribeWorkspaceSnapshotsResult: { WorkSpaces: "DescribeWorkspaceSnapshots" },
  DescribeWorkspacesResult: { WorkSpaces: "DescribeWorkspaces" },
  DescribeWorkspacesConnectionStatusResult: { WorkSpaces: "DescribeWorkspacesConnectionStatus" },
  DisassociateConnectionAliasResult: { WorkSpaces: "DisassociateConnectionAlias" },
  DisassociateIpGroupsResult: { WorkSpaces: "DisassociateIpGroups" },
  ImportClientBrandingResult: { WorkSpaces: "ImportClientBranding" },
  ImportWorkspaceImageResult: { WorkSpaces: "ImportWorkspaceImage" },
  ListAvailableManagementCidrRangesResult: { WorkSpaces: "ListAvailableManagementCidrRanges" },
  MigrateWorkspaceResult: { WorkSpaces: "MigrateWorkspace" },
  ModifyAccountResult: { WorkSpaces: "ModifyAccount" },
  ModifyCertificateBasedAuthPropertiesResult: {
    WorkSpaces: "ModifyCertificateBasedAuthProperties",
  },
  ModifyClientPropertiesResult: { WorkSpaces: "ModifyClientProperties" },
  ModifySamlPropertiesResult: { WorkSpaces: "ModifySamlProperties" },
  ModifySelfservicePermissionsResult: { WorkSpaces: "ModifySelfservicePermissions" },
  ModifyWorkspaceAccessPropertiesResult: { WorkSpaces: "ModifyWorkspaceAccessProperties" },
  ModifyWorkspaceCreationPropertiesResult: { WorkSpaces: "ModifyWorkspaceCreationProperties" },
  ModifyWorkspacePropertiesResult: { WorkSpaces: "ModifyWorkspaceProperties" },
  ModifyWorkspaceStateResult: { WorkSpaces: "ModifyWorkspaceState" },
  RebootWorkspacesResult: { WorkSpaces: "RebootWorkspaces" },
  RebuildWorkspacesResult: { WorkSpaces: "RebuildWorkspaces" },
  RegisterWorkspaceDirectoryResult: { WorkSpaces: "RegisterWorkspaceDirectory" },
  RestoreWorkspaceResult: { WorkSpaces: "RestoreWorkspace" },
  RevokeIpRulesResult: { WorkSpaces: "RevokeIpRules" },
  StartWorkspacesResult: { WorkSpaces: "StartWorkspaces" },
  StopWorkspacesResult: { WorkSpaces: "StopWorkspaces" },
  TerminateWorkspacesResult: { WorkSpaces: "TerminateWorkspaces" },
  UpdateConnectClientAddInResult: { WorkSpaces: "UpdateConnectClientAddIn" },
  UpdateConnectionAliasPermissionResult: { WorkSpaces: "UpdateConnectionAliasPermission" },
  UpdateRulesOfIpGroupResult: { WorkSpaces: "UpdateRulesOfIpGroup" },
  UpdateWorkspaceBundleResult: { WorkSpaces: "UpdateWorkspaceBundle" },
  UpdateWorkspaceImagePermissionResult: { WorkSpaces: "UpdateWorkspaceImagePermission" },
  BatchGetTracesResult: { XRay: "BatchGetTraces" },
  CreateGroupResult: { XRay: "CreateGroup" },
  CreateSamplingRuleResult: { XRay: "CreateSamplingRule" },
  DeleteGroupResult: { XRay: "DeleteGroup" },
  DeleteResourcePolicyResult: { XRay: "DeleteResourcePolicy" },
  DeleteSamplingRuleResult: { XRay: "DeleteSamplingRule" },
  GetEncryptionConfigResult: { XRay: "GetEncryptionConfig" },
  GetGroupResult: { XRay: "GetGroup" },
  GetGroupsResult: { XRay: "GetGroups" },
  GetInsightResult: { XRay: "GetInsight" },
  GetInsightEventsResult: { XRay: "GetInsightEvents" },
  GetInsightImpactGraphResult: { XRay: "GetInsightImpactGraph" },
  GetInsightSummariesResult: { XRay: "GetInsightSummaries" },
  GetSamplingRulesResult: { XRay: "GetSamplingRules" },
  GetSamplingStatisticSummariesResult: { XRay: "GetSamplingStatisticSummaries" },
  GetSamplingTargetsResult: { XRay: "GetSamplingTargets" },
  GetServiceGraphResult: { XRay: "GetServiceGraph" },
  GetTimeSeriesServiceStatisticsResult: { XRay: "GetTimeSeriesServiceStatistics" },
  GetTraceGraphResult: { XRay: "GetTraceGraph" },
  GetTraceSummariesResult: { XRay: "GetTraceSummaries" },
  ListResourcePoliciesResult: { XRay: "ListResourcePolicies" },
  PutEncryptionConfigResult: { XRay: "PutEncryptionConfig" },
  PutResourcePolicyResult: { XRay: "PutResourcePolicy" },
  PutTelemetryRecordsResult: { XRay: "PutTelemetryRecords" },
  PutTraceSegmentsResult: { XRay: "PutTraceSegments" },
  UpdateGroupResult: { XRay: "UpdateGroup" },
  UpdateSamplingRuleResult: { XRay: "UpdateSamplingRule" },
};
