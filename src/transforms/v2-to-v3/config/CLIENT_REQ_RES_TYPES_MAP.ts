// This file is generated by scripts/generateReqResTypesMap/index.ts
// Do not edit this file directly. Instead, edit the script and run it to regenerate this file.

/* eslint-disable @typescript-eslint/naming-convention */
export const CLIENT_REQ_RES_TYPES_MAP: Record<string, Record<string, string>> = {
  ApiKey: { APIGateway: "UpdateApiKey" },
  Authorizer: { APIGateway: "UpdateAuthorizer" },
  BasePathMapping: { APIGateway: "UpdateBasePathMapping" },
  Deployment: { APIGateway: "UpdateDeployment", AppConfig: "StopDeployment" },
  DocumentationPart: { APIGateway: "UpdateDocumentationPart" },
  DocumentationVersion: { APIGateway: "UpdateDocumentationVersion" },
  DomainName: { APIGateway: "UpdateDomainName" },
  Model: { APIGateway: "UpdateModel" },
  RequestValidator: { APIGateway: "UpdateRequestValidator" },
  Resource: { APIGateway: "UpdateResource" },
  RestApi: { APIGateway: "UpdateRestApi" },
  Stage: { APIGateway: "UpdateStage" },
  UsagePlan: { APIGateway: "UpdateUsagePlan" },
  UsagePlanKey: { APIGateway: "GetUsagePlanKey" },
  VpcLink: { APIGateway: "UpdateVpcLink" },
  ClientCertificate: { APIGateway: "UpdateClientCertificate" },
  Account: { APIGateway: "UpdateAccount" },
  ApiKeys: { APIGateway: "GetApiKeys" },
  Authorizers: { APIGateway: "GetAuthorizers" },
  BasePathMappings: { APIGateway: "GetBasePathMappings" },
  ClientCertificates: { APIGateway: "GetClientCertificates" },
  Deployments: { APIGateway: "GetDeployments", AppConfig: "ListDeployments" },
  DocumentationParts: { APIGateway: "GetDocumentationParts" },
  DocumentationVersions: { APIGateway: "GetDocumentationVersions" },
  DomainNames: { APIGateway: "GetDomainNames" },
  ExportResponse: { APIGateway: "GetExport" },
  GatewayResponse: { APIGateway: "UpdateGatewayResponse" },
  GatewayResponses: { APIGateway: "GetGatewayResponses" },
  Integration: { APIGateway: "UpdateIntegration" },
  IntegrationResponse: { APIGateway: "UpdateIntegrationResponse" },
  Method: { APIGateway: "UpdateMethod" },
  MethodResponse: { APIGateway: "UpdateMethodResponse" },
  Template: { APIGateway: "GetModelTemplate" },
  Models: { APIGateway: "GetModels" },
  RequestValidators: { APIGateway: "GetRequestValidators" },
  Resources: { APIGateway: "GetResources" },
  RestApis: { APIGateway: "GetRestApis" },
  SdkResponse: { APIGateway: "GetSdk" },
  SdkType: { APIGateway: "GetSdkType" },
  SdkTypes: { APIGateway: "GetSdkTypes" },
  Stages: { APIGateway: "GetStages" },
  Tags: { APIGateway: "GetTags" },
  Usage: { APIGateway: "UpdateUsage" },
  UsagePlanKeys: { APIGateway: "GetUsagePlanKeys" },
  UsagePlans: { APIGateway: "GetUsagePlans" },
  VpcLinks: { APIGateway: "GetVpcLinks" },
  ApiKeyIds: { APIGateway: "ImportApiKeys" },
  DocumentationPartIds: { APIGateway: "ImportDocumentationParts" },
  ZonalShift: { ARCZonalShift: "UpdateZonalShift" },
  CreateAppResult: { Amplify: "CreateApp", OpsWorks: "CreateApp" },
  CreateBackendEnvironmentResult: { Amplify: "CreateBackendEnvironment" },
  CreateBranchResult: { Amplify: "CreateBranch" },
  CreateDeploymentResult: { Amplify: "CreateDeployment", OpsWorks: "CreateDeployment" },
  CreateDomainAssociationResult: { Amplify: "CreateDomainAssociation" },
  CreateWebhookResult: { Amplify: "CreateWebhook" },
  DeleteAppResult: { Amplify: "DeleteApp" },
  DeleteBackendEnvironmentResult: { Amplify: "DeleteBackendEnvironment" },
  DeleteBranchResult: { Amplify: "DeleteBranch" },
  DeleteDomainAssociationResult: { Amplify: "DeleteDomainAssociation" },
  DeleteJobResult: { Amplify: "DeleteJob" },
  DeleteWebhookResult: { Amplify: "DeleteWebhook" },
  GenerateAccessLogsResult: { Amplify: "GenerateAccessLogs" },
  GetAppResult: { Amplify: "GetApp" },
  GetArtifactUrlResult: { Amplify: "GetArtifactUrl" },
  GetBackendEnvironmentResult: { Amplify: "GetBackendEnvironment" },
  GetBranchResult: { Amplify: "GetBranch" },
  GetDomainAssociationResult: { Amplify: "GetDomainAssociation" },
  GetJobResult: { Amplify: "GetJob", DeviceFarm: "GetJob" },
  GetWebhookResult: { Amplify: "GetWebhook" },
  ListAppsResult: { Amplify: "ListApps" },
  ListArtifactsResult: { Amplify: "ListArtifacts", DeviceFarm: "ListArtifacts" },
  ListBackendEnvironmentsResult: { Amplify: "ListBackendEnvironments" },
  ListBranchesResult: { Amplify: "ListBranches" },
  ListDomainAssociationsResult: { Amplify: "ListDomainAssociations" },
  ListJobsResult: {
    Amplify: "ListJobs",
    DeviceFarm: "ListJobs",
    S3Control: "ListJobs",
    Snowball: "ListJobs",
  },
  ListWebhooksResult: { Amplify: "ListWebhooks" },
  StartDeploymentResult: { Amplify: "StartDeployment" },
  StartJobResult: { Amplify: "StartJob" },
  StopJobResult: { Amplify: "StopJob", DeviceFarm: "StopJob" },
  UpdateAppResult: { Amplify: "UpdateApp" },
  UpdateBranchResult: { Amplify: "UpdateBranch" },
  UpdateDomainAssociationResult: { Amplify: "UpdateDomainAssociation" },
  UpdateWebhookResult: { Amplify: "UpdateWebhook" },
  CreateIntegrationResult: { ApiGatewayV2: "CreateIntegration" },
  CreateRouteResult: { ApiGatewayV2: "CreateRoute", EC2: "CreateRoute" },
  GetIntegrationResult: { ApiGatewayV2: "GetIntegration" },
  GetRouteResult: { ApiGatewayV2: "GetRoute" },
  UpdateIntegrationResult: { ApiGatewayV2: "UpdateIntegration" },
  UpdateRouteResult: { ApiGatewayV2: "UpdateRoute" },
  Application: { AppConfig: "UpdateApplication", Mgn: "UpdateApplication" },
  ConfigurationProfile: { AppConfig: "UpdateConfigurationProfile" },
  DeploymentStrategy: { AppConfig: "UpdateDeploymentStrategy" },
  Environment: { AppConfig: "UpdateEnvironment" },
  Extension: { AppConfig: "UpdateExtension" },
  ExtensionAssociation: { AppConfig: "UpdateExtensionAssociation" },
  HostedConfigurationVersion: { AppConfig: "GetHostedConfigurationVersion" },
  Configuration: { AppConfig: "GetConfiguration" },
  Applications: { AppConfig: "ListApplications" },
  ConfigurationProfiles: { AppConfig: "ListConfigurationProfiles" },
  DeploymentStrategies: { AppConfig: "ListDeploymentStrategies" },
  Environments: { AppConfig: "ListEnvironments" },
  ExtensionAssociations: { AppConfig: "ListExtensionAssociations" },
  Extensions: { AppConfig: "ListExtensions" },
  HostedConfigurationVersions: { AppConfig: "ListHostedConfigurationVersions" },
  ResourceTags: { AppConfig: "ListTagsForResource" },
  AssociateAppBlockBuilderAppBlockResult: { AppStream: "AssociateAppBlockBuilderAppBlock" },
  AssociateApplicationFleetResult: { AppStream: "AssociateApplicationFleet" },
  AssociateApplicationToEntitlementResult: { AppStream: "AssociateApplicationToEntitlement" },
  AssociateFleetResult: { AppStream: "AssociateFleet" },
  BatchAssociateUserStackResult: { AppStream: "BatchAssociateUserStack" },
  BatchDisassociateUserStackResult: { AppStream: "BatchDisassociateUserStack" },
  CreateAppBlockResult: { AppStream: "CreateAppBlock" },
  CreateAppBlockBuilderResult: { AppStream: "CreateAppBlockBuilder" },
  CreateAppBlockBuilderStreamingURLResult: { AppStream: "CreateAppBlockBuilderStreamingURL" },
  CreateApplicationResult: { AppStream: "CreateApplication" },
  CreateDirectoryConfigResult: { AppStream: "CreateDirectoryConfig" },
  CreateEntitlementResult: { AppStream: "CreateEntitlement" },
  CreateFleetResult: { AppStream: "CreateFleet", EC2: "CreateFleet" },
  CreateImageBuilderResult: { AppStream: "CreateImageBuilder" },
  CreateImageBuilderStreamingURLResult: { AppStream: "CreateImageBuilderStreamingURL" },
  CreateStackResult: { AppStream: "CreateStack", OpsWorks: "CreateStack" },
  CreateStreamingURLResult: { AppStream: "CreateStreamingURL" },
  CreateUpdatedImageResult: { AppStream: "CreateUpdatedImage" },
  CreateUsageReportSubscriptionResult: { AppStream: "CreateUsageReportSubscription" },
  CreateUserResult: { AppStream: "CreateUser" },
  DeleteAppBlockResult: { AppStream: "DeleteAppBlock" },
  DeleteAppBlockBuilderResult: { AppStream: "DeleteAppBlockBuilder" },
  DeleteApplicationResult: { AppStream: "DeleteApplication" },
  DeleteDirectoryConfigResult: { AppStream: "DeleteDirectoryConfig" },
  DeleteEntitlementResult: { AppStream: "DeleteEntitlement" },
  DeleteFleetResult: { AppStream: "DeleteFleet" },
  DeleteImageResult: { AppStream: "DeleteImage" },
  DeleteImageBuilderResult: { AppStream: "DeleteImageBuilder" },
  DeleteImagePermissionsResult: { AppStream: "DeleteImagePermissions" },
  DeleteStackResult: { AppStream: "DeleteStack" },
  DeleteUsageReportSubscriptionResult: { AppStream: "DeleteUsageReportSubscription" },
  DeleteUserResult: { AppStream: "DeleteUser" },
  DescribeAppBlockBuilderAppBlockAssociationsResult: {
    AppStream: "DescribeAppBlockBuilderAppBlockAssociations",
  },
  DescribeAppBlockBuildersResult: { AppStream: "DescribeAppBlockBuilders" },
  DescribeAppBlocksResult: { AppStream: "DescribeAppBlocks" },
  DescribeApplicationFleetAssociationsResult: { AppStream: "DescribeApplicationFleetAssociations" },
  DescribeApplicationsResult: { AppStream: "DescribeApplications" },
  DescribeDirectoryConfigsResult: { AppStream: "DescribeDirectoryConfigs" },
  DescribeEntitlementsResult: { AppStream: "DescribeEntitlements" },
  DescribeFleetsResult: { AppStream: "DescribeFleets", EC2: "DescribeFleets" },
  DescribeImageBuildersResult: { AppStream: "DescribeImageBuilders" },
  DescribeImagePermissionsResult: { AppStream: "DescribeImagePermissions" },
  DescribeImagesResult: { AppStream: "DescribeImages", EC2: "DescribeImages" },
  DescribeSessionsResult: { AppStream: "DescribeSessions" },
  DescribeStacksResult: { AppStream: "DescribeStacks", OpsWorks: "DescribeStacks" },
  DescribeUsageReportSubscriptionsResult: { AppStream: "DescribeUsageReportSubscriptions" },
  DescribeUserStackAssociationsResult: { AppStream: "DescribeUserStackAssociations" },
  DescribeUsersResult: { AppStream: "DescribeUsers", ElastiCache: "DescribeUsers" },
  DisableUserResult: { AppStream: "DisableUser" },
  DisassociateAppBlockBuilderAppBlockResult: { AppStream: "DisassociateAppBlockBuilderAppBlock" },
  DisassociateApplicationFleetResult: { AppStream: "DisassociateApplicationFleet" },
  DisassociateApplicationFromEntitlementResult: {
    AppStream: "DisassociateApplicationFromEntitlement",
  },
  DisassociateFleetResult: { AppStream: "DisassociateFleet" },
  EnableUserResult: { AppStream: "EnableUser" },
  ExpireSessionResult: { AppStream: "ExpireSession" },
  ListAssociatedFleetsResult: { AppStream: "ListAssociatedFleets" },
  ListAssociatedStacksResult: { AppStream: "ListAssociatedStacks" },
  ListEntitledApplicationsResult: { AppStream: "ListEntitledApplications" },
  StartAppBlockBuilderResult: { AppStream: "StartAppBlockBuilder" },
  StartFleetResult: { AppStream: "StartFleet" },
  StartImageBuilderResult: { AppStream: "StartImageBuilder" },
  StopAppBlockBuilderResult: { AppStream: "StopAppBlockBuilder" },
  StopFleetResult: { AppStream: "StopFleet" },
  StopImageBuilderResult: { AppStream: "StopImageBuilder" },
  UpdateAppBlockBuilderResult: { AppStream: "UpdateAppBlockBuilder" },
  UpdateApplicationResult: { AppStream: "UpdateApplication" },
  UpdateDirectoryConfigResult: { AppStream: "UpdateDirectoryConfig" },
  UpdateEntitlementResult: { AppStream: "UpdateEntitlement" },
  UpdateFleetResult: { AppStream: "UpdateFleet" },
  UpdateImagePermissionsResult: { AppStream: "UpdateImagePermissions" },
  UpdateStackResult: { AppStream: "UpdateStack" },
  DeleteReportDefinitionResult: { ApplicationCostProfiler: "DeleteReportDefinition" },
  GetReportDefinitionResult: { ApplicationCostProfiler: "GetReportDefinition" },
  ImportApplicationUsageResult: { ApplicationCostProfiler: "ImportApplicationUsage" },
  ListReportDefinitionsResult: { ApplicationCostProfiler: "ListReportDefinitions" },
  PutReportDefinitionResult: { ApplicationCostProfiler: "PutReportDefinition" },
  UpdateReportDefinitionResult: { ApplicationCostProfiler: "UpdateReportDefinition" },
  AttachInstancesQuery: { AutoScaling: "AttachInstances" },
  AttachLoadBalancerTargetGroupsType: { AutoScaling: "AttachLoadBalancerTargetGroups" },
  AttachLoadBalancerTargetGroupsResultType: { AutoScaling: "AttachLoadBalancerTargetGroups" },
  AttachLoadBalancersType: { AutoScaling: "AttachLoadBalancers" },
  AttachLoadBalancersResultType: { AutoScaling: "AttachLoadBalancers" },
  AttachTrafficSourcesType: { AutoScaling: "AttachTrafficSources" },
  AttachTrafficSourcesResultType: { AutoScaling: "AttachTrafficSources" },
  BatchDeleteScheduledActionType: { AutoScaling: "BatchDeleteScheduledAction" },
  BatchDeleteScheduledActionAnswer: { AutoScaling: "BatchDeleteScheduledAction" },
  BatchPutScheduledUpdateGroupActionType: { AutoScaling: "BatchPutScheduledUpdateGroupAction" },
  BatchPutScheduledUpdateGroupActionAnswer: { AutoScaling: "BatchPutScheduledUpdateGroupAction" },
  CancelInstanceRefreshType: { AutoScaling: "CancelInstanceRefresh" },
  CancelInstanceRefreshAnswer: { AutoScaling: "CancelInstanceRefresh" },
  CompleteLifecycleActionType: { AutoScaling: "CompleteLifecycleAction" },
  CompleteLifecycleActionAnswer: { AutoScaling: "CompleteLifecycleAction" },
  CreateAutoScalingGroupType: { AutoScaling: "CreateAutoScalingGroup" },
  CreateLaunchConfigurationType: { AutoScaling: "CreateLaunchConfiguration" },
  CreateOrUpdateTagsType: { AutoScaling: "CreateOrUpdateTags" },
  DeleteAutoScalingGroupType: { AutoScaling: "DeleteAutoScalingGroup" },
  LaunchConfigurationNameType: { AutoScaling: "DeleteLaunchConfiguration" },
  DeleteLifecycleHookType: { AutoScaling: "DeleteLifecycleHook" },
  DeleteLifecycleHookAnswer: { AutoScaling: "DeleteLifecycleHook" },
  DeleteNotificationConfigurationType: { AutoScaling: "DeleteNotificationConfiguration" },
  DeletePolicyType: { AutoScaling: "DeletePolicy" },
  DeleteScheduledActionType: { AutoScaling: "DeleteScheduledAction" },
  DeleteTagsType: { AutoScaling: "DeleteTags" },
  DeleteWarmPoolType: { AutoScaling: "DeleteWarmPool" },
  DeleteWarmPoolAnswer: { AutoScaling: "DeleteWarmPool" },
  AutoScalingGroupNamesType: { AutoScaling: "DescribeAutoScalingGroups" },
  AutoScalingGroupsType: { AutoScaling: "DescribeAutoScalingGroups" },
  DescribeAutoScalingInstancesType: { AutoScaling: "DescribeAutoScalingInstances" },
  AutoScalingInstancesType: { AutoScaling: "DescribeAutoScalingInstances" },
  DescribeInstanceRefreshesType: { AutoScaling: "DescribeInstanceRefreshes" },
  DescribeInstanceRefreshesAnswer: { AutoScaling: "DescribeInstanceRefreshes" },
  LaunchConfigurationNamesType: { AutoScaling: "DescribeLaunchConfigurations" },
  LaunchConfigurationsType: { AutoScaling: "DescribeLaunchConfigurations" },
  DescribeLifecycleHooksType: { AutoScaling: "DescribeLifecycleHooks" },
  DescribeLifecycleHooksAnswer: { AutoScaling: "DescribeLifecycleHooks" },
  DescribeNotificationConfigurationsType: { AutoScaling: "DescribeNotificationConfigurations" },
  DescribeNotificationConfigurationsAnswer: { AutoScaling: "DescribeNotificationConfigurations" },
  DescribePoliciesType: { AutoScaling: "DescribePolicies" },
  PoliciesType: { AutoScaling: "DescribePolicies" },
  DescribeScalingActivitiesType: { AutoScaling: "DescribeScalingActivities" },
  ActivitiesType: { AutoScaling: "DescribeScalingActivities" },
  DescribeScheduledActionsType: { AutoScaling: "DescribeScheduledActions" },
  ScheduledActionsType: { AutoScaling: "DescribeScheduledActions" },
  DescribeTagsType: { AutoScaling: "DescribeTags" },
  TagsType: { AutoScaling: "DescribeTags" },
  DescribeWarmPoolType: { AutoScaling: "DescribeWarmPool" },
  DescribeWarmPoolAnswer: { AutoScaling: "DescribeWarmPool" },
  DetachInstancesQuery: { AutoScaling: "DetachInstances" },
  DetachInstancesAnswer: { AutoScaling: "DetachInstances" },
  DetachLoadBalancerTargetGroupsType: { AutoScaling: "DetachLoadBalancerTargetGroups" },
  DetachLoadBalancerTargetGroupsResultType: { AutoScaling: "DetachLoadBalancerTargetGroups" },
  DetachLoadBalancersType: { AutoScaling: "DetachLoadBalancers" },
  DetachLoadBalancersResultType: { AutoScaling: "DetachLoadBalancers" },
  DetachTrafficSourcesType: { AutoScaling: "DetachTrafficSources" },
  DetachTrafficSourcesResultType: { AutoScaling: "DetachTrafficSources" },
  DisableMetricsCollectionQuery: { AutoScaling: "DisableMetricsCollection" },
  EnableMetricsCollectionQuery: { AutoScaling: "EnableMetricsCollection" },
  EnterStandbyQuery: { AutoScaling: "EnterStandby" },
  EnterStandbyAnswer: { AutoScaling: "EnterStandby" },
  ExecutePolicyType: { AutoScaling: "ExecutePolicy" },
  ExitStandbyQuery: { AutoScaling: "ExitStandby" },
  ExitStandbyAnswer: { AutoScaling: "ExitStandby" },
  GetPredictiveScalingForecastType: { AutoScaling: "GetPredictiveScalingForecast" },
  GetPredictiveScalingForecastAnswer: { AutoScaling: "GetPredictiveScalingForecast" },
  PutLifecycleHookType: { AutoScaling: "PutLifecycleHook" },
  PutLifecycleHookAnswer: { AutoScaling: "PutLifecycleHook" },
  PutNotificationConfigurationType: { AutoScaling: "PutNotificationConfiguration" },
  PutScalingPolicyType: { AutoScaling: "PutScalingPolicy" },
  PolicyARNType: { AutoScaling: "PutScalingPolicy" },
  PutScheduledUpdateGroupActionType: { AutoScaling: "PutScheduledUpdateGroupAction" },
  PutWarmPoolType: { AutoScaling: "PutWarmPool" },
  PutWarmPoolAnswer: { AutoScaling: "PutWarmPool" },
  RecordLifecycleActionHeartbeatType: { AutoScaling: "RecordLifecycleActionHeartbeat" },
  RecordLifecycleActionHeartbeatAnswer: { AutoScaling: "RecordLifecycleActionHeartbeat" },
  ScalingProcessQuery: { AutoScaling: "SuspendProcesses" },
  RollbackInstanceRefreshType: { AutoScaling: "RollbackInstanceRefresh" },
  RollbackInstanceRefreshAnswer: { AutoScaling: "RollbackInstanceRefresh" },
  SetDesiredCapacityType: { AutoScaling: "SetDesiredCapacity" },
  SetInstanceHealthQuery: { AutoScaling: "SetInstanceHealth" },
  SetInstanceProtectionQuery: { AutoScaling: "SetInstanceProtection" },
  SetInstanceProtectionAnswer: { AutoScaling: "SetInstanceProtection" },
  StartInstanceRefreshType: { AutoScaling: "StartInstanceRefresh" },
  StartInstanceRefreshAnswer: { AutoScaling: "StartInstanceRefresh" },
  TerminateInstanceInAutoScalingGroupType: { AutoScaling: "TerminateInstanceInAutoScalingGroup" },
  ActivityType: { AutoScaling: "TerminateInstanceInAutoScalingGroup" },
  UpdateAutoScalingGroupType: { AutoScaling: "UpdateAutoScalingGroup" },
  CreateEnvironmentEC2Result: { Cloud9: "CreateEnvironmentEC2" },
  CreateEnvironmentMembershipResult: { Cloud9: "CreateEnvironmentMembership" },
  DeleteEnvironmentResult: { Cloud9: "DeleteEnvironment" },
  DeleteEnvironmentMembershipResult: { Cloud9: "DeleteEnvironmentMembership" },
  DescribeEnvironmentMembershipsResult: { Cloud9: "DescribeEnvironmentMemberships" },
  DescribeEnvironmentStatusResult: { Cloud9: "DescribeEnvironmentStatus" },
  DescribeEnvironmentsResult: { Cloud9: "DescribeEnvironments" },
  ListEnvironmentsResult: { Cloud9: "ListEnvironments" },
  UpdateEnvironmentResult: { Cloud9: "UpdateEnvironment" },
  UpdateEnvironmentMembershipResult: { Cloud9: "UpdateEnvironmentMembership" },
  CopyDistributionResult: { CloudFront: "CopyDistribution" },
  CreateCachePolicyResult: { CloudFront: "CreateCachePolicy" },
  CreateCloudFrontOriginAccessIdentityResult: {
    CloudFront: "CreateCloudFrontOriginAccessIdentity",
  },
  CreateContinuousDeploymentPolicyResult: { CloudFront: "CreateContinuousDeploymentPolicy" },
  CreateDistributionResult: { CloudFront: "CreateDistribution", Lightsail: "CreateDistribution" },
  CreateDistributionWithTagsResult: { CloudFront: "CreateDistributionWithTags" },
  CreateFieldLevelEncryptionConfigResult: { CloudFront: "CreateFieldLevelEncryptionConfig" },
  CreateFieldLevelEncryptionProfileResult: { CloudFront: "CreateFieldLevelEncryptionProfile" },
  CreateFunctionResult: { CloudFront: "CreateFunction" },
  CreateInvalidationResult: { CloudFront: "CreateInvalidation" },
  CreateKeyGroupResult: { CloudFront: "CreateKeyGroup" },
  CreateMonitoringSubscriptionResult: { CloudFront: "CreateMonitoringSubscription" },
  CreateOriginAccessControlResult: { CloudFront: "CreateOriginAccessControl" },
  CreateOriginRequestPolicyResult: { CloudFront: "CreateOriginRequestPolicy" },
  CreatePublicKeyResult: { CloudFront: "CreatePublicKey" },
  CreateRealtimeLogConfigResult: { CloudFront: "CreateRealtimeLogConfig" },
  CreateResponseHeadersPolicyResult: { CloudFront: "CreateResponseHeadersPolicy" },
  CreateStreamingDistributionResult: { CloudFront: "CreateStreamingDistribution" },
  CreateStreamingDistributionWithTagsResult: { CloudFront: "CreateStreamingDistributionWithTags" },
  DeleteMonitoringSubscriptionResult: { CloudFront: "DeleteMonitoringSubscription" },
  DescribeFunctionResult: { CloudFront: "DescribeFunction" },
  GetCachePolicyResult: { CloudFront: "GetCachePolicy" },
  GetCachePolicyConfigResult: { CloudFront: "GetCachePolicyConfig" },
  GetCloudFrontOriginAccessIdentityResult: { CloudFront: "GetCloudFrontOriginAccessIdentity" },
  GetCloudFrontOriginAccessIdentityConfigResult: {
    CloudFront: "GetCloudFrontOriginAccessIdentityConfig",
  },
  GetContinuousDeploymentPolicyResult: { CloudFront: "GetContinuousDeploymentPolicy" },
  GetContinuousDeploymentPolicyConfigResult: { CloudFront: "GetContinuousDeploymentPolicyConfig" },
  GetDistributionResult: { CloudFront: "GetDistribution" },
  GetDistributionConfigResult: { CloudFront: "GetDistributionConfig" },
  GetFieldLevelEncryptionResult: { CloudFront: "GetFieldLevelEncryption" },
  GetFieldLevelEncryptionConfigResult: { CloudFront: "GetFieldLevelEncryptionConfig" },
  GetFieldLevelEncryptionProfileResult: { CloudFront: "GetFieldLevelEncryptionProfile" },
  GetFieldLevelEncryptionProfileConfigResult: {
    CloudFront: "GetFieldLevelEncryptionProfileConfig",
  },
  GetFunctionResult: { CloudFront: "GetFunction" },
  GetInvalidationResult: { CloudFront: "GetInvalidation" },
  GetKeyGroupResult: { CloudFront: "GetKeyGroup" },
  GetKeyGroupConfigResult: { CloudFront: "GetKeyGroupConfig" },
  GetMonitoringSubscriptionResult: { CloudFront: "GetMonitoringSubscription" },
  GetOriginAccessControlResult: { CloudFront: "GetOriginAccessControl" },
  GetOriginAccessControlConfigResult: { CloudFront: "GetOriginAccessControlConfig" },
  GetOriginRequestPolicyResult: { CloudFront: "GetOriginRequestPolicy" },
  GetOriginRequestPolicyConfigResult: { CloudFront: "GetOriginRequestPolicyConfig" },
  GetPublicKeyResult: { CloudFront: "GetPublicKey" },
  GetPublicKeyConfigResult: { CloudFront: "GetPublicKeyConfig" },
  GetRealtimeLogConfigResult: { CloudFront: "GetRealtimeLogConfig" },
  GetResponseHeadersPolicyResult: { CloudFront: "GetResponseHeadersPolicy" },
  GetResponseHeadersPolicyConfigResult: { CloudFront: "GetResponseHeadersPolicyConfig" },
  GetStreamingDistributionResult: { CloudFront: "GetStreamingDistribution" },
  GetStreamingDistributionConfigResult: { CloudFront: "GetStreamingDistributionConfig" },
  ListCachePoliciesResult: { CloudFront: "ListCachePolicies" },
  ListCloudFrontOriginAccessIdentitiesResult: {
    CloudFront: "ListCloudFrontOriginAccessIdentities",
  },
  ListConflictingAliasesResult: { CloudFront: "ListConflictingAliases" },
  ListContinuousDeploymentPoliciesResult: { CloudFront: "ListContinuousDeploymentPolicies" },
  ListDistributionsResult: { CloudFront: "ListDistributions" },
  ListDistributionsByCachePolicyIdResult: { CloudFront: "ListDistributionsByCachePolicyId" },
  ListDistributionsByKeyGroupResult: { CloudFront: "ListDistributionsByKeyGroup" },
  ListDistributionsByOriginRequestPolicyIdResult: {
    CloudFront: "ListDistributionsByOriginRequestPolicyId",
  },
  ListDistributionsByRealtimeLogConfigResult: {
    CloudFront: "ListDistributionsByRealtimeLogConfig",
  },
  ListDistributionsByResponseHeadersPolicyIdResult: {
    CloudFront: "ListDistributionsByResponseHeadersPolicyId",
  },
  ListDistributionsByWebACLIdResult: { CloudFront: "ListDistributionsByWebACLId" },
  ListFieldLevelEncryptionConfigsResult: { CloudFront: "ListFieldLevelEncryptionConfigs" },
  ListFieldLevelEncryptionProfilesResult: { CloudFront: "ListFieldLevelEncryptionProfiles" },
  ListFunctionsResult: { CloudFront: "ListFunctions" },
  ListInvalidationsResult: { CloudFront: "ListInvalidations" },
  ListKeyGroupsResult: { CloudFront: "ListKeyGroups" },
  ListOriginAccessControlsResult: { CloudFront: "ListOriginAccessControls" },
  ListOriginRequestPoliciesResult: { CloudFront: "ListOriginRequestPolicies" },
  ListPublicKeysResult: { CloudFront: "ListPublicKeys" },
  ListRealtimeLogConfigsResult: { CloudFront: "ListRealtimeLogConfigs" },
  ListResponseHeadersPoliciesResult: { CloudFront: "ListResponseHeadersPolicies" },
  ListStreamingDistributionsResult: { CloudFront: "ListStreamingDistributions" },
  ListTagsForResourceResult: {
    CloudFront: "ListTagsForResource",
    CodeArtifact: "ListTagsForResource",
    CodeStarNotifications: "ListTagsForResource",
    DirectoryService: "ListTagsForResource",
    ElasticInference: "ListTagsForResource",
    FraudDetector: "ListTagsForResource",
    GameSparks: "ListTagsForResource",
    Honeycode: "ListTagsForResource",
    PinpointSMSVoiceV2: "ListTagsForResource",
    SSM: "ListTagsForResource",
    SSMContacts: "ListTagsForResource",
  },
  PublishFunctionResult: { CloudFront: "PublishFunction" },
  TestFunctionResult: { CloudFront: "TestFunction" },
  UpdateCachePolicyResult: { CloudFront: "UpdateCachePolicy" },
  UpdateCloudFrontOriginAccessIdentityResult: {
    CloudFront: "UpdateCloudFrontOriginAccessIdentity",
  },
  UpdateContinuousDeploymentPolicyResult: { CloudFront: "UpdateContinuousDeploymentPolicy" },
  UpdateDistributionResult: { CloudFront: "UpdateDistribution", Lightsail: "UpdateDistribution" },
  UpdateDistributionWithStagingConfigResult: { CloudFront: "UpdateDistributionWithStagingConfig" },
  UpdateFieldLevelEncryptionConfigResult: { CloudFront: "UpdateFieldLevelEncryptionConfig" },
  UpdateFieldLevelEncryptionProfileResult: { CloudFront: "UpdateFieldLevelEncryptionProfile" },
  UpdateFunctionResult: { CloudFront: "UpdateFunction" },
  UpdateKeyGroupResult: { CloudFront: "UpdateKeyGroup" },
  UpdateOriginAccessControlResult: { CloudFront: "UpdateOriginAccessControl" },
  UpdateOriginRequestPolicyResult: { CloudFront: "UpdateOriginRequestPolicy" },
  UpdatePublicKeyResult: { CloudFront: "UpdatePublicKey" },
  UpdateRealtimeLogConfigResult: { CloudFront: "UpdateRealtimeLogConfig" },
  UpdateResponseHeadersPolicyResult: { CloudFront: "UpdateResponseHeadersPolicy" },
  UpdateStreamingDistributionResult: { CloudFront: "UpdateStreamingDistribution" },
  AssociateExternalConnectionResult: { CodeArtifact: "AssociateExternalConnection" },
  CopyPackageVersionsResult: { CodeArtifact: "CopyPackageVersions" },
  CreateDomainResult: { CodeArtifact: "CreateDomain", Lightsail: "CreateDomain" },
  CreateRepositoryResult: { CodeArtifact: "CreateRepository" },
  DeleteDomainResult: { CodeArtifact: "DeleteDomain", Lightsail: "DeleteDomain" },
  DeleteDomainPermissionsPolicyResult: { CodeArtifact: "DeleteDomainPermissionsPolicy" },
  DeletePackageResult: { CodeArtifact: "DeletePackage" },
  DeletePackageVersionsResult: { CodeArtifact: "DeletePackageVersions" },
  DeleteRepositoryResult: { CodeArtifact: "DeleteRepository" },
  DeleteRepositoryPermissionsPolicyResult: { CodeArtifact: "DeleteRepositoryPermissionsPolicy" },
  DescribeDomainResult: { CodeArtifact: "DescribeDomain" },
  DescribePackageResult: { CodeArtifact: "DescribePackage" },
  DescribePackageVersionResult: { CodeArtifact: "DescribePackageVersion" },
  DescribeRepositoryResult: { CodeArtifact: "DescribeRepository" },
  DisassociateExternalConnectionResult: { CodeArtifact: "DisassociateExternalConnection" },
  DisposePackageVersionsResult: { CodeArtifact: "DisposePackageVersions" },
  GetAuthorizationTokenResult: { CodeArtifact: "GetAuthorizationToken" },
  GetDomainPermissionsPolicyResult: { CodeArtifact: "GetDomainPermissionsPolicy" },
  GetPackageVersionAssetResult: { CodeArtifact: "GetPackageVersionAsset" },
  GetPackageVersionReadmeResult: { CodeArtifact: "GetPackageVersionReadme" },
  GetRepositoryEndpointResult: { CodeArtifact: "GetRepositoryEndpoint" },
  GetRepositoryPermissionsPolicyResult: { CodeArtifact: "GetRepositoryPermissionsPolicy" },
  ListDomainsResult: { CodeArtifact: "ListDomains" },
  ListPackageVersionAssetsResult: { CodeArtifact: "ListPackageVersionAssets" },
  ListPackageVersionDependenciesResult: { CodeArtifact: "ListPackageVersionDependencies" },
  ListPackageVersionsResult: { CodeArtifact: "ListPackageVersions" },
  ListPackagesResult: { CodeArtifact: "ListPackages" },
  ListRepositoriesResult: { CodeArtifact: "ListRepositories" },
  ListRepositoriesInDomainResult: { CodeArtifact: "ListRepositoriesInDomain" },
  PublishPackageVersionResult: { CodeArtifact: "PublishPackageVersion" },
  PutDomainPermissionsPolicyResult: { CodeArtifact: "PutDomainPermissionsPolicy" },
  PutPackageOriginConfigurationResult: { CodeArtifact: "PutPackageOriginConfiguration" },
  PutRepositoryPermissionsPolicyResult: { CodeArtifact: "PutRepositoryPermissionsPolicy" },
  TagResourceResult: {
    CodeArtifact: "TagResource",
    CodeStarNotifications: "TagResource",
    ElasticInference: "TagResource",
    FraudDetector: "TagResource",
    GameSparks: "TagResource",
    Honeycode: "TagResource",
    Lightsail: "TagResource",
    PinpointSMSVoiceV2: "TagResource",
    SSMContacts: "TagResource",
  },
  UntagResourceResult: {
    CodeArtifact: "UntagResource",
    CodeStarNotifications: "UntagResource",
    ElasticInference: "UntagResource",
    FraudDetector: "UntagResource",
    GameSparks: "UntagResource",
    Honeycode: "UntagResource",
    Lightsail: "UntagResource",
    PinpointSMSVoiceV2: "UntagResource",
    SSMContacts: "UntagResource",
  },
  UpdatePackageVersionsStatusResult: { CodeArtifact: "UpdatePackageVersionsStatus" },
  UpdateRepositoryResult: { CodeArtifact: "UpdateRepository" },
  AssociateTeamMemberResult: { CodeStar: "AssociateTeamMember" },
  CreateProjectResult: {
    CodeStar: "CreateProject",
    DeviceFarm: "CreateProject",
    Mobile: "CreateProject",
  },
  CreateUserProfileResult: { CodeStar: "CreateUserProfile", OpsWorks: "CreateUserProfile" },
  DeleteProjectResult: {
    CodeStar: "DeleteProject",
    DeviceFarm: "DeleteProject",
    Mobile: "DeleteProject",
  },
  DeleteUserProfileResult: { CodeStar: "DeleteUserProfile" },
  DescribeProjectResult: { CodeStar: "DescribeProject", Mobile: "DescribeProject" },
  DescribeUserProfileResult: { CodeStar: "DescribeUserProfile" },
  DisassociateTeamMemberResult: { CodeStar: "DisassociateTeamMember" },
  ListProjectsResult: {
    CodeStar: "ListProjects",
    DeviceFarm: "ListProjects",
    Mobile: "ListProjects",
  },
  ListResourcesResult: { CodeStar: "ListResources" },
  ListTagsForProjectResult: { CodeStar: "ListTagsForProject" },
  ListTeamMembersResult: { CodeStar: "ListTeamMembers" },
  ListUserProfilesResult: { CodeStar: "ListUserProfiles" },
  TagProjectResult: { CodeStar: "TagProject" },
  UntagProjectResult: { CodeStar: "UntagProject" },
  UpdateProjectResult: {
    CodeStar: "UpdateProject",
    DeviceFarm: "UpdateProject",
    Mobile: "UpdateProject",
  },
  UpdateTeamMemberResult: { CodeStar: "UpdateTeamMember" },
  UpdateUserProfileResult: { CodeStar: "UpdateUserProfile" },
  CreateNotificationRuleResult: { CodeStarNotifications: "CreateNotificationRule" },
  DeleteNotificationRuleResult: { CodeStarNotifications: "DeleteNotificationRule" },
  DeleteTargetResult: { CodeStarNotifications: "DeleteTarget" },
  DescribeNotificationRuleResult: { CodeStarNotifications: "DescribeNotificationRule" },
  ListEventTypesResult: { CodeStarNotifications: "ListEventTypes" },
  ListNotificationRulesResult: { CodeStarNotifications: "ListNotificationRules" },
  ListTargetsResult: { CodeStarNotifications: "ListTargets" },
  SubscribeResult: { CodeStarNotifications: "Subscribe" },
  UnsubscribeResult: { CodeStarNotifications: "Unsubscribe" },
  UpdateNotificationRuleResult: { CodeStarNotifications: "UpdateNotificationRule" },
  IdentityPool: { CognitoIdentity: "UpdateIdentityPool" },
  IdentityDescription: { CognitoIdentity: "DescribeIdentity" },
  ListAgentStatusRequest: { Connect: "ListAgentStatuses" },
  ListAgentStatusResponse: { Connect: "ListAgentStatuses" },
  AddTagsToResourceMessage: {
    DMS: "AddTagsToResource",
    DocDB: "AddTagsToResource",
    ElastiCache: "AddTagsToResource",
    Neptune: "AddTagsToResource",
    RDS: "AddTagsToResource",
  },
  ApplyPendingMaintenanceActionMessage: {
    DMS: "ApplyPendingMaintenanceAction",
    DocDB: "ApplyPendingMaintenanceAction",
    Neptune: "ApplyPendingMaintenanceAction",
    RDS: "ApplyPendingMaintenanceAction",
  },
  CancelReplicationTaskAssessmentRunMessage: { DMS: "CancelReplicationTaskAssessmentRun" },
  CreateEndpointMessage: { DMS: "CreateEndpoint" },
  CreateEventSubscriptionMessage: {
    DMS: "CreateEventSubscription",
    DocDB: "CreateEventSubscription",
    Neptune: "CreateEventSubscription",
    RDS: "CreateEventSubscription",
    Redshift: "CreateEventSubscription",
  },
  CreateReplicationConfigMessage: { DMS: "CreateReplicationConfig" },
  CreateReplicationInstanceMessage: { DMS: "CreateReplicationInstance" },
  CreateReplicationSubnetGroupMessage: { DMS: "CreateReplicationSubnetGroup" },
  CreateReplicationTaskMessage: { DMS: "CreateReplicationTask" },
  DeleteCertificateMessage: { DMS: "DeleteCertificate" },
  DeleteConnectionMessage: { DMS: "DeleteConnection" },
  DeleteEndpointMessage: { DMS: "DeleteEndpoint" },
  DeleteEventSubscriptionMessage: {
    DMS: "DeleteEventSubscription",
    DocDB: "DeleteEventSubscription",
    Neptune: "DeleteEventSubscription",
    RDS: "DeleteEventSubscription",
    Redshift: "DeleteEventSubscription",
  },
  DeleteCollectorRequest: { DMS: "DeleteFleetAdvisorCollector" },
  DeleteReplicationConfigMessage: { DMS: "DeleteReplicationConfig" },
  DeleteReplicationInstanceMessage: { DMS: "DeleteReplicationInstance" },
  DeleteReplicationSubnetGroupMessage: { DMS: "DeleteReplicationSubnetGroup" },
  DeleteReplicationTaskMessage: { DMS: "DeleteReplicationTask" },
  DeleteReplicationTaskAssessmentRunMessage: { DMS: "DeleteReplicationTaskAssessmentRun" },
  DescribeAccountAttributesMessage: {
    DMS: "DescribeAccountAttributes",
    RDS: "DescribeAccountAttributes",
    Redshift: "DescribeAccountAttributes",
  },
  DescribeApplicableIndividualAssessmentsMessage: {
    DMS: "DescribeApplicableIndividualAssessments",
  },
  DescribeCertificatesMessage: {
    DMS: "DescribeCertificates",
    DocDB: "DescribeCertificates",
    RDS: "DescribeCertificates",
  },
  DescribeConnectionsMessage: { DMS: "DescribeConnections" },
  DescribeEndpointSettingsMessage: { DMS: "DescribeEndpointSettings" },
  DescribeEndpointTypesMessage: { DMS: "DescribeEndpointTypes" },
  DescribeEndpointsMessage: { DMS: "DescribeEndpoints" },
  DescribeEventCategoriesMessage: {
    DMS: "DescribeEventCategories",
    DocDB: "DescribeEventCategories",
    Neptune: "DescribeEventCategories",
    RDS: "DescribeEventCategories",
    Redshift: "DescribeEventCategories",
  },
  DescribeEventSubscriptionsMessage: {
    DMS: "DescribeEventSubscriptions",
    DocDB: "DescribeEventSubscriptions",
    Neptune: "DescribeEventSubscriptions",
    RDS: "DescribeEventSubscriptions",
    Redshift: "DescribeEventSubscriptions",
  },
  DescribeEventsMessage: {
    DMS: "DescribeEvents",
    DocDB: "DescribeEvents",
    ElastiCache: "DescribeEvents",
    ElasticBeanstalk: "DescribeEvents",
    Neptune: "DescribeEvents",
    RDS: "DescribeEvents",
    Redshift: "DescribeEvents",
  },
  DescribeOrderableReplicationInstancesMessage: { DMS: "DescribeOrderableReplicationInstances" },
  DescribePendingMaintenanceActionsMessage: {
    DMS: "DescribePendingMaintenanceActions",
    DocDB: "DescribePendingMaintenanceActions",
    Neptune: "DescribePendingMaintenanceActions",
    RDS: "DescribePendingMaintenanceActions",
  },
  DescribeRefreshSchemasStatusMessage: { DMS: "DescribeRefreshSchemasStatus" },
  DescribeReplicationConfigsMessage: { DMS: "DescribeReplicationConfigs" },
  DescribeReplicationInstanceTaskLogsMessage: { DMS: "DescribeReplicationInstanceTaskLogs" },
  DescribeReplicationInstancesMessage: { DMS: "DescribeReplicationInstances" },
  DescribeReplicationSubnetGroupsMessage: { DMS: "DescribeReplicationSubnetGroups" },
  DescribeReplicationTableStatisticsMessage: { DMS: "DescribeReplicationTableStatistics" },
  DescribeReplicationTaskAssessmentResultsMessage: {
    DMS: "DescribeReplicationTaskAssessmentResults",
  },
  DescribeReplicationTaskAssessmentRunsMessage: { DMS: "DescribeReplicationTaskAssessmentRuns" },
  DescribeReplicationTaskIndividualAssessmentsMessage: {
    DMS: "DescribeReplicationTaskIndividualAssessments",
  },
  DescribeReplicationTasksMessage: { DMS: "DescribeReplicationTasks" },
  DescribeReplicationsMessage: { DMS: "DescribeReplications" },
  DescribeSchemasMessage: { DMS: "DescribeSchemas" },
  DescribeTableStatisticsMessage: { DMS: "DescribeTableStatistics" },
  ImportCertificateMessage: { DMS: "ImportCertificate" },
  ListTagsForResourceMessage: {
    DMS: "ListTagsForResource",
    DocDB: "ListTagsForResource",
    ElastiCache: "ListTagsForResource",
    ElasticBeanstalk: "ListTagsForResource",
    Neptune: "ListTagsForResource",
    RDS: "ListTagsForResource",
  },
  ModifyEndpointMessage: { DMS: "ModifyEndpoint" },
  ModifyEventSubscriptionMessage: {
    DMS: "ModifyEventSubscription",
    DocDB: "ModifyEventSubscription",
    Neptune: "ModifyEventSubscription",
    RDS: "ModifyEventSubscription",
    Redshift: "ModifyEventSubscription",
  },
  ModifyReplicationConfigMessage: { DMS: "ModifyReplicationConfig" },
  ModifyReplicationInstanceMessage: { DMS: "ModifyReplicationInstance" },
  ModifyReplicationSubnetGroupMessage: { DMS: "ModifyReplicationSubnetGroup" },
  ModifyReplicationTaskMessage: { DMS: "ModifyReplicationTask" },
  MoveReplicationTaskMessage: { DMS: "MoveReplicationTask" },
  RebootReplicationInstanceMessage: { DMS: "RebootReplicationInstance" },
  RefreshSchemasMessage: { DMS: "RefreshSchemas" },
  ReloadReplicationTablesMessage: { DMS: "ReloadReplicationTables" },
  ReloadTablesMessage: { DMS: "ReloadTables" },
  RemoveTagsFromResourceMessage: {
    DMS: "RemoveTagsFromResource",
    DocDB: "RemoveTagsFromResource",
    ElastiCache: "RemoveTagsFromResource",
    Neptune: "RemoveTagsFromResource",
    RDS: "RemoveTagsFromResource",
  },
  StartReplicationMessage: { DMS: "StartReplication" },
  StartReplicationTaskMessage: { DMS: "StartReplicationTask" },
  StartReplicationTaskAssessmentMessage: { DMS: "StartReplicationTaskAssessment" },
  StartReplicationTaskAssessmentRunMessage: { DMS: "StartReplicationTaskAssessmentRun" },
  StopReplicationMessage: { DMS: "StopReplication" },
  StopReplicationTaskMessage: { DMS: "StopReplicationTask" },
  TestConnectionMessage: { DMS: "TestConnection" },
  UpdateSubscriptionsToEventBridgeMessage: { DMS: "UpdateSubscriptionsToEventBridge" },
  CreateDevicePoolResult: { DeviceFarm: "CreateDevicePool" },
  CreateInstanceProfileResult: { DeviceFarm: "CreateInstanceProfile" },
  CreateNetworkProfileResult: { DeviceFarm: "CreateNetworkProfile" },
  CreateRemoteAccessSessionResult: { DeviceFarm: "CreateRemoteAccessSession" },
  CreateTestGridProjectResult: { DeviceFarm: "CreateTestGridProject" },
  CreateTestGridUrlResult: { DeviceFarm: "CreateTestGridUrl" },
  CreateUploadResult: { DeviceFarm: "CreateUpload" },
  CreateVPCEConfigurationResult: { DeviceFarm: "CreateVPCEConfiguration" },
  DeleteDevicePoolResult: { DeviceFarm: "DeleteDevicePool" },
  DeleteInstanceProfileResult: { DeviceFarm: "DeleteInstanceProfile" },
  DeleteNetworkProfileResult: { DeviceFarm: "DeleteNetworkProfile" },
  DeleteRemoteAccessSessionResult: { DeviceFarm: "DeleteRemoteAccessSession" },
  DeleteRunResult: { DeviceFarm: "DeleteRun" },
  DeleteTestGridProjectResult: { DeviceFarm: "DeleteTestGridProject" },
  DeleteUploadResult: { DeviceFarm: "DeleteUpload" },
  DeleteVPCEConfigurationResult: { DeviceFarm: "DeleteVPCEConfiguration" },
  GetAccountSettingsResult: { DeviceFarm: "GetAccountSettings" },
  GetDeviceResult: { DeviceFarm: "GetDevice" },
  GetDeviceInstanceResult: { DeviceFarm: "GetDeviceInstance" },
  GetDevicePoolResult: { DeviceFarm: "GetDevicePool" },
  GetDevicePoolCompatibilityResult: { DeviceFarm: "GetDevicePoolCompatibility" },
  GetInstanceProfileResult: { DeviceFarm: "GetInstanceProfile" },
  GetNetworkProfileResult: { DeviceFarm: "GetNetworkProfile" },
  GetOfferingStatusResult: { DeviceFarm: "GetOfferingStatus" },
  GetProjectResult: { DeviceFarm: "GetProject" },
  GetRemoteAccessSessionResult: { DeviceFarm: "GetRemoteAccessSession" },
  GetRunResult: { DeviceFarm: "GetRun" },
  GetSuiteResult: { DeviceFarm: "GetSuite" },
  GetTestResult: { DeviceFarm: "GetTest" },
  GetTestGridProjectResult: { DeviceFarm: "GetTestGridProject" },
  GetTestGridSessionResult: { DeviceFarm: "GetTestGridSession" },
  GetUploadResult: { DeviceFarm: "GetUpload" },
  GetVPCEConfigurationResult: { DeviceFarm: "GetVPCEConfiguration" },
  InstallToRemoteAccessSessionResult: { DeviceFarm: "InstallToRemoteAccessSession" },
  ListDeviceInstancesResult: { DeviceFarm: "ListDeviceInstances" },
  ListDevicePoolsResult: { DeviceFarm: "ListDevicePools" },
  ListDevicesResult: { DeviceFarm: "ListDevices" },
  ListInstanceProfilesResult: { DeviceFarm: "ListInstanceProfiles" },
  ListNetworkProfilesResult: { DeviceFarm: "ListNetworkProfiles" },
  ListOfferingPromotionsResult: { DeviceFarm: "ListOfferingPromotions" },
  ListOfferingTransactionsResult: { DeviceFarm: "ListOfferingTransactions" },
  ListOfferingsResult: { DeviceFarm: "ListOfferings" },
  ListRemoteAccessSessionsResult: { DeviceFarm: "ListRemoteAccessSessions" },
  ListRunsResult: { DeviceFarm: "ListRuns" },
  ListSamplesResult: { DeviceFarm: "ListSamples" },
  ListSuitesResult: { DeviceFarm: "ListSuites" },
  ListTestGridProjectsResult: { DeviceFarm: "ListTestGridProjects" },
  ListTestGridSessionActionsResult: { DeviceFarm: "ListTestGridSessionActions" },
  ListTestGridSessionArtifactsResult: { DeviceFarm: "ListTestGridSessionArtifacts" },
  ListTestGridSessionsResult: { DeviceFarm: "ListTestGridSessions" },
  ListTestsResult: { DeviceFarm: "ListTests" },
  ListUniqueProblemsResult: { DeviceFarm: "ListUniqueProblems" },
  ListUploadsResult: { DeviceFarm: "ListUploads" },
  ListVPCEConfigurationsResult: { DeviceFarm: "ListVPCEConfigurations" },
  PurchaseOfferingResult: { DeviceFarm: "PurchaseOffering" },
  RenewOfferingResult: { DeviceFarm: "RenewOffering" },
  ScheduleRunResult: { DeviceFarm: "ScheduleRun" },
  StopRemoteAccessSessionResult: { DeviceFarm: "StopRemoteAccessSession" },
  StopRunResult: { DeviceFarm: "StopRun" },
  UpdateDeviceInstanceResult: { DeviceFarm: "UpdateDeviceInstance" },
  UpdateDevicePoolResult: { DeviceFarm: "UpdateDevicePool" },
  UpdateInstanceProfileResult: { DeviceFarm: "UpdateInstanceProfile" },
  UpdateNetworkProfileResult: { DeviceFarm: "UpdateNetworkProfile" },
  UpdateTestGridProjectResult: { DeviceFarm: "UpdateTestGridProject" },
  UpdateUploadResult: { DeviceFarm: "UpdateUpload" },
  UpdateVPCEConfigurationResult: { DeviceFarm: "UpdateVPCEConfiguration" },
  AcceptDirectConnectGatewayAssociationProposalResult: {
    DirectConnect: "AcceptDirectConnectGatewayAssociationProposal",
  },
  Connection: { DirectConnect: "UpdateConnection" },
  VirtualInterface: { DirectConnect: "UpdateVirtualInterfaceAttributes" },
  AllocateTransitVirtualInterfaceResult: { DirectConnect: "AllocateTransitVirtualInterface" },
  CreateDirectConnectGatewayResult: { DirectConnect: "CreateDirectConnectGateway" },
  CreateDirectConnectGatewayAssociationResult: {
    DirectConnect: "CreateDirectConnectGatewayAssociation",
  },
  CreateDirectConnectGatewayAssociationProposalResult: {
    DirectConnect: "CreateDirectConnectGatewayAssociationProposal",
  },
  Interconnect: { DirectConnect: "CreateInterconnect" },
  Lag: { DirectConnect: "UpdateLag" },
  CreateTransitVirtualInterfaceResult: { DirectConnect: "CreateTransitVirtualInterface" },
  DeleteDirectConnectGatewayResult: { DirectConnect: "DeleteDirectConnectGateway" },
  DeleteDirectConnectGatewayAssociationResult: {
    DirectConnect: "DeleteDirectConnectGatewayAssociation",
  },
  DeleteDirectConnectGatewayAssociationProposalResult: {
    DirectConnect: "DeleteDirectConnectGatewayAssociationProposal",
  },
  Connections: { DirectConnect: "DescribeHostedConnections" },
  DescribeDirectConnectGatewayAssociationProposalsResult: {
    DirectConnect: "DescribeDirectConnectGatewayAssociationProposals",
  },
  DescribeDirectConnectGatewayAssociationsResult: {
    DirectConnect: "DescribeDirectConnectGatewayAssociations",
  },
  DescribeDirectConnectGatewayAttachmentsResult: {
    DirectConnect: "DescribeDirectConnectGatewayAttachments",
  },
  DescribeDirectConnectGatewaysResult: { DirectConnect: "DescribeDirectConnectGateways" },
  Interconnects: { DirectConnect: "DescribeInterconnects" },
  Lags: { DirectConnect: "DescribeLags" },
  Loa: { DirectConnect: "DescribeLoa" },
  VirtualInterfaces: { DirectConnect: "DescribeVirtualInterfaces" },
  UpdateDirectConnectGatewayAssociationResult: {
    DirectConnect: "UpdateDirectConnectGatewayAssociation",
  },
  AcceptSharedDirectoryResult: { DirectoryService: "AcceptSharedDirectory" },
  AddIpRoutesResult: { DirectoryService: "AddIpRoutes" },
  AddRegionResult: { DirectoryService: "AddRegion" },
  AddTagsToResourceResult: { DirectoryService: "AddTagsToResource", SSM: "AddTagsToResource" },
  CancelSchemaExtensionResult: { DirectoryService: "CancelSchemaExtension" },
  ConnectDirectoryResult: { DirectoryService: "ConnectDirectory" },
  CreateAliasResult: { DirectoryService: "CreateAlias" },
  CreateComputerResult: { DirectoryService: "CreateComputer" },
  CreateConditionalForwarderResult: { DirectoryService: "CreateConditionalForwarder" },
  CreateDirectoryResult: { DirectoryService: "CreateDirectory" },
  CreateLogSubscriptionResult: { DirectoryService: "CreateLogSubscription" },
  CreateMicrosoftADResult: { DirectoryService: "CreateMicrosoftAD" },
  CreateSnapshotResult: {
    DirectoryService: "CreateSnapshot",
    ElastiCache: "CreateSnapshot",
    GameSparks: "CreateSnapshot",
  },
  CreateTrustResult: { DirectoryService: "CreateTrust" },
  DeleteConditionalForwarderResult: { DirectoryService: "DeleteConditionalForwarder" },
  DeleteDirectoryResult: { DirectoryService: "DeleteDirectory" },
  DeleteLogSubscriptionResult: { DirectoryService: "DeleteLogSubscription" },
  DeleteSnapshotResult: { DirectoryService: "DeleteSnapshot", ElastiCache: "DeleteSnapshot" },
  DeleteTrustResult: { DirectoryService: "DeleteTrust" },
  DeregisterCertificateResult: { DirectoryService: "DeregisterCertificate" },
  DeregisterEventTopicResult: { DirectoryService: "DeregisterEventTopic" },
  DescribeCertificateResult: { DirectoryService: "DescribeCertificate" },
  DescribeClientAuthenticationSettingsResult: {
    DirectoryService: "DescribeClientAuthenticationSettings",
  },
  DescribeConditionalForwardersResult: { DirectoryService: "DescribeConditionalForwarders" },
  DescribeDirectoriesResult: { DirectoryService: "DescribeDirectories" },
  DescribeDomainControllersResult: { DirectoryService: "DescribeDomainControllers" },
  DescribeEventTopicsResult: { DirectoryService: "DescribeEventTopics" },
  DescribeLDAPSSettingsResult: { DirectoryService: "DescribeLDAPSSettings" },
  DescribeRegionsResult: { DirectoryService: "DescribeRegions", EC2: "DescribeRegions" },
  DescribeSettingsResult: { DirectoryService: "DescribeSettings" },
  DescribeSharedDirectoriesResult: { DirectoryService: "DescribeSharedDirectories" },
  DescribeSnapshotsResult: { DirectoryService: "DescribeSnapshots", EC2: "DescribeSnapshots" },
  DescribeTrustsResult: { DirectoryService: "DescribeTrusts" },
  DescribeUpdateDirectoryResult: { DirectoryService: "DescribeUpdateDirectory" },
  DisableClientAuthenticationResult: { DirectoryService: "DisableClientAuthentication" },
  DisableLDAPSResult: { DirectoryService: "DisableLDAPS" },
  DisableRadiusResult: { DirectoryService: "DisableRadius" },
  DisableSsoResult: { DirectoryService: "DisableSso" },
  EnableClientAuthenticationResult: { DirectoryService: "EnableClientAuthentication" },
  EnableLDAPSResult: { DirectoryService: "EnableLDAPS" },
  EnableRadiusResult: { DirectoryService: "EnableRadius" },
  EnableSsoResult: { DirectoryService: "EnableSso" },
  GetDirectoryLimitsResult: { DirectoryService: "GetDirectoryLimits" },
  GetSnapshotLimitsResult: { DirectoryService: "GetSnapshotLimits" },
  ListCertificatesResult: { DirectoryService: "ListCertificates" },
  ListIpRoutesResult: { DirectoryService: "ListIpRoutes" },
  ListLogSubscriptionsResult: { DirectoryService: "ListLogSubscriptions" },
  ListSchemaExtensionsResult: { DirectoryService: "ListSchemaExtensions" },
  RegisterCertificateResult: { DirectoryService: "RegisterCertificate" },
  RegisterEventTopicResult: { DirectoryService: "RegisterEventTopic" },
  RejectSharedDirectoryResult: { DirectoryService: "RejectSharedDirectory" },
  RemoveIpRoutesResult: { DirectoryService: "RemoveIpRoutes" },
  RemoveRegionResult: { DirectoryService: "RemoveRegion" },
  RemoveTagsFromResourceResult: {
    DirectoryService: "RemoveTagsFromResource",
    SSM: "RemoveTagsFromResource",
  },
  ResetUserPasswordResult: { DirectoryService: "ResetUserPassword" },
  RestoreFromSnapshotResult: { DirectoryService: "RestoreFromSnapshot" },
  ShareDirectoryResult: { DirectoryService: "ShareDirectory" },
  StartSchemaExtensionResult: { DirectoryService: "StartSchemaExtension" },
  UnshareDirectoryResult: { DirectoryService: "UnshareDirectory" },
  UpdateConditionalForwarderResult: { DirectoryService: "UpdateConditionalForwarder" },
  UpdateDirectorySetupResult: { DirectoryService: "UpdateDirectorySetup" },
  UpdateNumberOfDomainControllersResult: { DirectoryService: "UpdateNumberOfDomainControllers" },
  UpdateRadiusResult: { DirectoryService: "UpdateRadius" },
  UpdateSettingsResult: { DirectoryService: "UpdateSettings" },
  UpdateTrustResult: { DirectoryService: "UpdateTrust" },
  VerifyTrustResult: { DirectoryService: "VerifyTrust" },
  AddSourceIdentifierToSubscriptionMessage: {
    DocDB: "AddSourceIdentifierToSubscription",
    Neptune: "AddSourceIdentifierToSubscription",
    RDS: "AddSourceIdentifierToSubscription",
  },
  AddSourceIdentifierToSubscriptionResult: {
    DocDB: "AddSourceIdentifierToSubscription",
    Neptune: "AddSourceIdentifierToSubscription",
    RDS: "AddSourceIdentifierToSubscription",
  },
  ApplyPendingMaintenanceActionResult: {
    DocDB: "ApplyPendingMaintenanceAction",
    Neptune: "ApplyPendingMaintenanceAction",
    RDS: "ApplyPendingMaintenanceAction",
  },
  CopyDBClusterParameterGroupMessage: {
    DocDB: "CopyDBClusterParameterGroup",
    Neptune: "CopyDBClusterParameterGroup",
    RDS: "CopyDBClusterParameterGroup",
  },
  CopyDBClusterParameterGroupResult: {
    DocDB: "CopyDBClusterParameterGroup",
    Neptune: "CopyDBClusterParameterGroup",
    RDS: "CopyDBClusterParameterGroup",
  },
  CopyDBClusterSnapshotMessage: {
    DocDB: "CopyDBClusterSnapshot",
    Neptune: "CopyDBClusterSnapshot",
    RDS: "CopyDBClusterSnapshot",
  },
  CopyDBClusterSnapshotResult: {
    DocDB: "CopyDBClusterSnapshot",
    Neptune: "CopyDBClusterSnapshot",
    RDS: "CopyDBClusterSnapshot",
  },
  CreateDBClusterMessage: {
    DocDB: "CreateDBCluster",
    Neptune: "CreateDBCluster",
    RDS: "CreateDBCluster",
  },
  CreateDBClusterResult: {
    DocDB: "CreateDBCluster",
    Neptune: "CreateDBCluster",
    RDS: "CreateDBCluster",
  },
  CreateDBClusterParameterGroupMessage: {
    DocDB: "CreateDBClusterParameterGroup",
    Neptune: "CreateDBClusterParameterGroup",
    RDS: "CreateDBClusterParameterGroup",
  },
  CreateDBClusterParameterGroupResult: {
    DocDB: "CreateDBClusterParameterGroup",
    Neptune: "CreateDBClusterParameterGroup",
    RDS: "CreateDBClusterParameterGroup",
  },
  CreateDBClusterSnapshotMessage: {
    DocDB: "CreateDBClusterSnapshot",
    Neptune: "CreateDBClusterSnapshot",
    RDS: "CreateDBClusterSnapshot",
  },
  CreateDBClusterSnapshotResult: {
    DocDB: "CreateDBClusterSnapshot",
    Neptune: "CreateDBClusterSnapshot",
    RDS: "CreateDBClusterSnapshot",
  },
  CreateDBInstanceMessage: {
    DocDB: "CreateDBInstance",
    Neptune: "CreateDBInstance",
    RDS: "CreateDBInstance",
  },
  CreateDBInstanceResult: {
    DocDB: "CreateDBInstance",
    Neptune: "CreateDBInstance",
    RDS: "CreateDBInstance",
  },
  CreateDBSubnetGroupMessage: {
    DocDB: "CreateDBSubnetGroup",
    Neptune: "CreateDBSubnetGroup",
    RDS: "CreateDBSubnetGroup",
  },
  CreateDBSubnetGroupResult: {
    DocDB: "CreateDBSubnetGroup",
    Neptune: "CreateDBSubnetGroup",
    RDS: "CreateDBSubnetGroup",
  },
  CreateEventSubscriptionResult: {
    DocDB: "CreateEventSubscription",
    Neptune: "CreateEventSubscription",
    RDS: "CreateEventSubscription",
    Redshift: "CreateEventSubscription",
  },
  CreateGlobalClusterMessage: {
    DocDB: "CreateGlobalCluster",
    Neptune: "CreateGlobalCluster",
    RDS: "CreateGlobalCluster",
  },
  CreateGlobalClusterResult: {
    DocDB: "CreateGlobalCluster",
    Neptune: "CreateGlobalCluster",
    RDS: "CreateGlobalCluster",
  },
  DeleteDBClusterMessage: {
    DocDB: "DeleteDBCluster",
    Neptune: "DeleteDBCluster",
    RDS: "DeleteDBCluster",
  },
  DeleteDBClusterResult: {
    DocDB: "DeleteDBCluster",
    Neptune: "DeleteDBCluster",
    RDS: "DeleteDBCluster",
  },
  DeleteDBClusterParameterGroupMessage: {
    DocDB: "DeleteDBClusterParameterGroup",
    Neptune: "DeleteDBClusterParameterGroup",
    RDS: "DeleteDBClusterParameterGroup",
  },
  DeleteDBClusterSnapshotMessage: {
    DocDB: "DeleteDBClusterSnapshot",
    Neptune: "DeleteDBClusterSnapshot",
    RDS: "DeleteDBClusterSnapshot",
  },
  DeleteDBClusterSnapshotResult: {
    DocDB: "DeleteDBClusterSnapshot",
    Neptune: "DeleteDBClusterSnapshot",
    RDS: "DeleteDBClusterSnapshot",
  },
  DeleteDBInstanceMessage: {
    DocDB: "DeleteDBInstance",
    Neptune: "DeleteDBInstance",
    RDS: "DeleteDBInstance",
  },
  DeleteDBInstanceResult: {
    DocDB: "DeleteDBInstance",
    Neptune: "DeleteDBInstance",
    RDS: "DeleteDBInstance",
  },
  DeleteDBSubnetGroupMessage: {
    DocDB: "DeleteDBSubnetGroup",
    Neptune: "DeleteDBSubnetGroup",
    RDS: "DeleteDBSubnetGroup",
  },
  DeleteEventSubscriptionResult: {
    DocDB: "DeleteEventSubscription",
    Neptune: "DeleteEventSubscription",
    RDS: "DeleteEventSubscription",
  },
  DeleteGlobalClusterMessage: {
    DocDB: "DeleteGlobalCluster",
    Neptune: "DeleteGlobalCluster",
    RDS: "DeleteGlobalCluster",
  },
  DeleteGlobalClusterResult: {
    DocDB: "DeleteGlobalCluster",
    Neptune: "DeleteGlobalCluster",
    RDS: "DeleteGlobalCluster",
  },
  CertificateMessage: { DocDB: "DescribeCertificates", RDS: "DescribeCertificates" },
  DescribeDBClusterParameterGroupsMessage: {
    DocDB: "DescribeDBClusterParameterGroups",
    Neptune: "DescribeDBClusterParameterGroups",
    RDS: "DescribeDBClusterParameterGroups",
  },
  DBClusterParameterGroupsMessage: {
    DocDB: "DescribeDBClusterParameterGroups",
    Neptune: "DescribeDBClusterParameterGroups",
    RDS: "DescribeDBClusterParameterGroups",
  },
  DescribeDBClusterParametersMessage: {
    DocDB: "DescribeDBClusterParameters",
    Neptune: "DescribeDBClusterParameters",
    RDS: "DescribeDBClusterParameters",
  },
  DBClusterParameterGroupDetails: {
    DocDB: "DescribeDBClusterParameters",
    Neptune: "DescribeDBClusterParameters",
    RDS: "DescribeDBClusterParameters",
  },
  DescribeDBClusterSnapshotAttributesMessage: {
    DocDB: "DescribeDBClusterSnapshotAttributes",
    Neptune: "DescribeDBClusterSnapshotAttributes",
    RDS: "DescribeDBClusterSnapshotAttributes",
  },
  DescribeDBClusterSnapshotAttributesResult: {
    DocDB: "DescribeDBClusterSnapshotAttributes",
    Neptune: "DescribeDBClusterSnapshotAttributes",
    RDS: "DescribeDBClusterSnapshotAttributes",
  },
  DescribeDBClusterSnapshotsMessage: {
    DocDB: "DescribeDBClusterSnapshots",
    Neptune: "DescribeDBClusterSnapshots",
    RDS: "DescribeDBClusterSnapshots",
  },
  DBClusterSnapshotMessage: {
    DocDB: "DescribeDBClusterSnapshots",
    Neptune: "DescribeDBClusterSnapshots",
    RDS: "DescribeDBClusterSnapshots",
  },
  DescribeDBClustersMessage: {
    DocDB: "DescribeDBClusters",
    Neptune: "DescribeDBClusters",
    RDS: "DescribeDBClusters",
  },
  DBClusterMessage: {
    DocDB: "DescribeDBClusters",
    Neptune: "DescribeDBClusters",
    RDS: "DescribeDBClusters",
  },
  DescribeDBEngineVersionsMessage: {
    DocDB: "DescribeDBEngineVersions",
    Neptune: "DescribeDBEngineVersions",
    RDS: "DescribeDBEngineVersions",
  },
  DBEngineVersionMessage: {
    DocDB: "DescribeDBEngineVersions",
    Neptune: "DescribeDBEngineVersions",
    RDS: "DescribeDBEngineVersions",
  },
  DescribeDBInstancesMessage: {
    DocDB: "DescribeDBInstances",
    Neptune: "DescribeDBInstances",
    RDS: "DescribeDBInstances",
  },
  DBInstanceMessage: {
    DocDB: "DescribeDBInstances",
    Neptune: "DescribeDBInstances",
    RDS: "DescribeDBInstances",
  },
  DescribeDBSubnetGroupsMessage: {
    DocDB: "DescribeDBSubnetGroups",
    Neptune: "DescribeDBSubnetGroups",
    RDS: "DescribeDBSubnetGroups",
  },
  DBSubnetGroupMessage: {
    DocDB: "DescribeDBSubnetGroups",
    Neptune: "DescribeDBSubnetGroups",
    RDS: "DescribeDBSubnetGroups",
  },
  DescribeEngineDefaultClusterParametersMessage: {
    DocDB: "DescribeEngineDefaultClusterParameters",
    Neptune: "DescribeEngineDefaultClusterParameters",
    RDS: "DescribeEngineDefaultClusterParameters",
  },
  DescribeEngineDefaultClusterParametersResult: {
    DocDB: "DescribeEngineDefaultClusterParameters",
    Neptune: "DescribeEngineDefaultClusterParameters",
    RDS: "DescribeEngineDefaultClusterParameters",
  },
  EventCategoriesMessage: {
    DocDB: "DescribeEventCategories",
    Neptune: "DescribeEventCategories",
    RDS: "DescribeEventCategories",
    Redshift: "DescribeEventCategories",
  },
  EventSubscriptionsMessage: {
    DocDB: "DescribeEventSubscriptions",
    Neptune: "DescribeEventSubscriptions",
    RDS: "DescribeEventSubscriptions",
    Redshift: "DescribeEventSubscriptions",
  },
  EventsMessage: {
    DocDB: "DescribeEvents",
    ElastiCache: "DescribeEvents",
    Neptune: "DescribeEvents",
    RDS: "DescribeEvents",
    Redshift: "DescribeEvents",
  },
  DescribeGlobalClustersMessage: {
    DocDB: "DescribeGlobalClusters",
    Neptune: "DescribeGlobalClusters",
    RDS: "DescribeGlobalClusters",
  },
  GlobalClustersMessage: {
    DocDB: "DescribeGlobalClusters",
    Neptune: "DescribeGlobalClusters",
    RDS: "DescribeGlobalClusters",
  },
  DescribeOrderableDBInstanceOptionsMessage: {
    DocDB: "DescribeOrderableDBInstanceOptions",
    Neptune: "DescribeOrderableDBInstanceOptions",
    RDS: "DescribeOrderableDBInstanceOptions",
  },
  OrderableDBInstanceOptionsMessage: {
    DocDB: "DescribeOrderableDBInstanceOptions",
    Neptune: "DescribeOrderableDBInstanceOptions",
    RDS: "DescribeOrderableDBInstanceOptions",
  },
  PendingMaintenanceActionsMessage: {
    DocDB: "DescribePendingMaintenanceActions",
    Neptune: "DescribePendingMaintenanceActions",
    RDS: "DescribePendingMaintenanceActions",
  },
  FailoverDBClusterMessage: {
    DocDB: "FailoverDBCluster",
    Neptune: "FailoverDBCluster",
    RDS: "FailoverDBCluster",
  },
  FailoverDBClusterResult: {
    DocDB: "FailoverDBCluster",
    Neptune: "FailoverDBCluster",
    RDS: "FailoverDBCluster",
  },
  TagListMessage: {
    DocDB: "ListTagsForResource",
    ElastiCache: "RemoveTagsFromResource",
    Neptune: "ListTagsForResource",
    RDS: "ListTagsForResource",
  },
  ModifyDBClusterMessage: {
    DocDB: "ModifyDBCluster",
    Neptune: "ModifyDBCluster",
    RDS: "ModifyDBCluster",
  },
  ModifyDBClusterResult: {
    DocDB: "ModifyDBCluster",
    Neptune: "ModifyDBCluster",
    RDS: "ModifyDBCluster",
  },
  ModifyDBClusterParameterGroupMessage: {
    DocDB: "ModifyDBClusterParameterGroup",
    Neptune: "ModifyDBClusterParameterGroup",
    RDS: "ModifyDBClusterParameterGroup",
  },
  DBClusterParameterGroupNameMessage: {
    DocDB: "ResetDBClusterParameterGroup",
    Neptune: "ResetDBClusterParameterGroup",
    RDS: "ResetDBClusterParameterGroup",
  },
  ModifyDBClusterSnapshotAttributeMessage: {
    DocDB: "ModifyDBClusterSnapshotAttribute",
    Neptune: "ModifyDBClusterSnapshotAttribute",
    RDS: "ModifyDBClusterSnapshotAttribute",
  },
  ModifyDBClusterSnapshotAttributeResult: {
    DocDB: "ModifyDBClusterSnapshotAttribute",
    Neptune: "ModifyDBClusterSnapshotAttribute",
    RDS: "ModifyDBClusterSnapshotAttribute",
  },
  ModifyDBInstanceMessage: {
    DocDB: "ModifyDBInstance",
    Neptune: "ModifyDBInstance",
    RDS: "ModifyDBInstance",
  },
  ModifyDBInstanceResult: {
    DocDB: "ModifyDBInstance",
    Neptune: "ModifyDBInstance",
    RDS: "ModifyDBInstance",
  },
  ModifyDBSubnetGroupMessage: {
    DocDB: "ModifyDBSubnetGroup",
    Neptune: "ModifyDBSubnetGroup",
    RDS: "ModifyDBSubnetGroup",
  },
  ModifyDBSubnetGroupResult: {
    DocDB: "ModifyDBSubnetGroup",
    Neptune: "ModifyDBSubnetGroup",
    RDS: "ModifyDBSubnetGroup",
  },
  ModifyEventSubscriptionResult: {
    DocDB: "ModifyEventSubscription",
    Neptune: "ModifyEventSubscription",
    RDS: "ModifyEventSubscription",
    Redshift: "ModifyEventSubscription",
  },
  ModifyGlobalClusterMessage: {
    DocDB: "ModifyGlobalCluster",
    Neptune: "ModifyGlobalCluster",
    RDS: "ModifyGlobalCluster",
  },
  ModifyGlobalClusterResult: {
    DocDB: "ModifyGlobalCluster",
    Neptune: "ModifyGlobalCluster",
    RDS: "ModifyGlobalCluster",
  },
  RebootDBInstanceMessage: {
    DocDB: "RebootDBInstance",
    Neptune: "RebootDBInstance",
    RDS: "RebootDBInstance",
  },
  RebootDBInstanceResult: {
    DocDB: "RebootDBInstance",
    Neptune: "RebootDBInstance",
    RDS: "RebootDBInstance",
  },
  RemoveFromGlobalClusterMessage: {
    DocDB: "RemoveFromGlobalCluster",
    Neptune: "RemoveFromGlobalCluster",
    RDS: "RemoveFromGlobalCluster",
  },
  RemoveFromGlobalClusterResult: {
    DocDB: "RemoveFromGlobalCluster",
    Neptune: "RemoveFromGlobalCluster",
    RDS: "RemoveFromGlobalCluster",
  },
  RemoveSourceIdentifierFromSubscriptionMessage: {
    DocDB: "RemoveSourceIdentifierFromSubscription",
    Neptune: "RemoveSourceIdentifierFromSubscription",
    RDS: "RemoveSourceIdentifierFromSubscription",
  },
  RemoveSourceIdentifierFromSubscriptionResult: {
    DocDB: "RemoveSourceIdentifierFromSubscription",
    Neptune: "RemoveSourceIdentifierFromSubscription",
    RDS: "RemoveSourceIdentifierFromSubscription",
  },
  ResetDBClusterParameterGroupMessage: {
    DocDB: "ResetDBClusterParameterGroup",
    Neptune: "ResetDBClusterParameterGroup",
    RDS: "ResetDBClusterParameterGroup",
  },
  RestoreDBClusterFromSnapshotMessage: {
    DocDB: "RestoreDBClusterFromSnapshot",
    Neptune: "RestoreDBClusterFromSnapshot",
    RDS: "RestoreDBClusterFromSnapshot",
  },
  RestoreDBClusterFromSnapshotResult: {
    DocDB: "RestoreDBClusterFromSnapshot",
    Neptune: "RestoreDBClusterFromSnapshot",
    RDS: "RestoreDBClusterFromSnapshot",
  },
  RestoreDBClusterToPointInTimeMessage: {
    DocDB: "RestoreDBClusterToPointInTime",
    Neptune: "RestoreDBClusterToPointInTime",
    RDS: "RestoreDBClusterToPointInTime",
  },
  RestoreDBClusterToPointInTimeResult: {
    DocDB: "RestoreDBClusterToPointInTime",
    Neptune: "RestoreDBClusterToPointInTime",
    RDS: "RestoreDBClusterToPointInTime",
  },
  StartDBClusterMessage: {
    DocDB: "StartDBCluster",
    Neptune: "StartDBCluster",
    RDS: "StartDBCluster",
  },
  StartDBClusterResult: {
    DocDB: "StartDBCluster",
    Neptune: "StartDBCluster",
    RDS: "StartDBCluster",
  },
  StopDBClusterMessage: { DocDB: "StopDBCluster", Neptune: "StopDBCluster", RDS: "StopDBCluster" },
  StopDBClusterResult: { DocDB: "StopDBCluster", Neptune: "StopDBCluster", RDS: "StopDBCluster" },
  ReplicationConfigurationTemplate: {
    Drs: "UpdateReplicationConfigurationTemplate",
    Mgn: "UpdateReplicationConfigurationTemplate",
  },
  SourceServer: { Drs: "RetryDataReplication", Mgn: "UpdateSourceServerReplicationType" },
  LaunchConfiguration: { Drs: "UpdateLaunchConfiguration", Mgn: "UpdateLaunchConfiguration" },
  ReplicationConfiguration: {
    Drs: "UpdateReplicationConfiguration",
    Mgn: "UpdateReplicationConfiguration",
  },
  KinesisStreamingDestinationInput: { DynamoDB: "EnableKinesisStreamingDestination" },
  KinesisStreamingDestinationOutput: { DynamoDB: "EnableKinesisStreamingDestination" },
  AcceptAddressTransferResult: { EC2: "AcceptAddressTransfer" },
  AcceptReservedInstancesExchangeQuoteResult: { EC2: "AcceptReservedInstancesExchangeQuote" },
  AcceptTransitGatewayMulticastDomainAssociationsResult: {
    EC2: "AcceptTransitGatewayMulticastDomainAssociations",
  },
  AcceptTransitGatewayPeeringAttachmentResult: { EC2: "AcceptTransitGatewayPeeringAttachment" },
  AcceptTransitGatewayVpcAttachmentResult: { EC2: "AcceptTransitGatewayVpcAttachment" },
  AcceptVpcEndpointConnectionsResult: { EC2: "AcceptVpcEndpointConnections" },
  AcceptVpcPeeringConnectionResult: { EC2: "AcceptVpcPeeringConnection" },
  AdvertiseByoipCidrResult: { EC2: "AdvertiseByoipCidr" },
  AllocateAddressResult: { EC2: "AllocateAddress" },
  AllocateHostsResult: { EC2: "AllocateHosts" },
  AllocateIpamPoolCidrResult: { EC2: "AllocateIpamPoolCidr" },
  ApplySecurityGroupsToClientVpnTargetNetworkResult: {
    EC2: "ApplySecurityGroupsToClientVpnTargetNetwork",
  },
  AssignIpv6AddressesResult: { EC2: "AssignIpv6Addresses" },
  AssignPrivateIpAddressesResult: { EC2: "AssignPrivateIpAddresses" },
  AssignPrivateNatGatewayAddressResult: { EC2: "AssignPrivateNatGatewayAddress" },
  AssociateAddressResult: { EC2: "AssociateAddress" },
  AssociateClientVpnTargetNetworkResult: { EC2: "AssociateClientVpnTargetNetwork" },
  AssociateEnclaveCertificateIamRoleResult: { EC2: "AssociateEnclaveCertificateIamRole" },
  AssociateIamInstanceProfileResult: { EC2: "AssociateIamInstanceProfile" },
  AssociateInstanceEventWindowResult: { EC2: "AssociateInstanceEventWindow" },
  AssociateIpamResourceDiscoveryResult: { EC2: "AssociateIpamResourceDiscovery" },
  AssociateNatGatewayAddressResult: { EC2: "AssociateNatGatewayAddress" },
  AssociateRouteTableResult: { EC2: "AssociateRouteTable" },
  AssociateSubnetCidrBlockResult: { EC2: "AssociateSubnetCidrBlock" },
  AssociateTransitGatewayMulticastDomainResult: { EC2: "AssociateTransitGatewayMulticastDomain" },
  AssociateTransitGatewayPolicyTableResult: { EC2: "AssociateTransitGatewayPolicyTable" },
  AssociateTransitGatewayRouteTableResult: { EC2: "AssociateTransitGatewayRouteTable" },
  AssociateTrunkInterfaceResult: { EC2: "AssociateTrunkInterface" },
  AssociateVpcCidrBlockResult: { EC2: "AssociateVpcCidrBlock" },
  AttachClassicLinkVpcResult: { EC2: "AttachClassicLinkVpc" },
  AttachNetworkInterfaceResult: { EC2: "AttachNetworkInterface" },
  AttachVerifiedAccessTrustProviderResult: { EC2: "AttachVerifiedAccessTrustProvider" },
  VolumeAttachment: { EC2: "DetachVolume" },
  AttachVpnGatewayResult: { EC2: "AttachVpnGateway" },
  AuthorizeClientVpnIngressResult: { EC2: "AuthorizeClientVpnIngress" },
  AuthorizeSecurityGroupEgressResult: { EC2: "AuthorizeSecurityGroupEgress" },
  AuthorizeSecurityGroupIngressResult: { EC2: "AuthorizeSecurityGroupIngress" },
  BundleInstanceResult: { EC2: "BundleInstance" },
  CancelBundleTaskResult: { EC2: "CancelBundleTask" },
  CancelCapacityReservationResult: { EC2: "CancelCapacityReservation" },
  CancelCapacityReservationFleetsResult: { EC2: "CancelCapacityReservationFleets" },
  CancelConversionRequest: { EC2: "CancelConversionTask" },
  CancelImageLaunchPermissionResult: { EC2: "CancelImageLaunchPermission" },
  CancelImportTaskResult: { EC2: "CancelImportTask" },
  CancelReservedInstancesListingResult: { EC2: "CancelReservedInstancesListing" },
  CancelSpotInstanceRequestsResult: { EC2: "CancelSpotInstanceRequests" },
  ConfirmProductInstanceResult: { EC2: "ConfirmProductInstance" },
  CopyFpgaImageResult: { EC2: "CopyFpgaImage" },
  CopyImageResult: { EC2: "CopyImage" },
  CopySnapshotResult: {
    EC2: "CopySnapshot",
    ElastiCache: "CopySnapshot",
    Lightsail: "CopySnapshot",
  },
  CreateCapacityReservationResult: { EC2: "CreateCapacityReservation" },
  CreateCapacityReservationFleetResult: { EC2: "CreateCapacityReservationFleet" },
  CreateCarrierGatewayResult: { EC2: "CreateCarrierGateway" },
  CreateClientVpnEndpointResult: { EC2: "CreateClientVpnEndpoint" },
  CreateClientVpnRouteResult: { EC2: "CreateClientVpnRoute" },
  CreateCoipCidrResult: { EC2: "CreateCoipCidr" },
  CreateCoipPoolResult: { EC2: "CreateCoipPool" },
  CreateCustomerGatewayResult: { EC2: "CreateCustomerGateway" },
  CreateDefaultSubnetResult: { EC2: "CreateDefaultSubnet" },
  CreateDefaultVpcResult: { EC2: "CreateDefaultVpc" },
  CreateDhcpOptionsResult: { EC2: "CreateDhcpOptions" },
  CreateEgressOnlyInternetGatewayResult: { EC2: "CreateEgressOnlyInternetGateway" },
  CreateFlowLogsResult: { EC2: "CreateFlowLogs" },
  CreateFpgaImageResult: { EC2: "CreateFpgaImage" },
  CreateImageResult: { EC2: "CreateImage" },
  CreateInstanceConnectEndpointResult: { EC2: "CreateInstanceConnectEndpoint" },
  CreateInstanceEventWindowResult: { EC2: "CreateInstanceEventWindow" },
  CreateInstanceExportTaskResult: { EC2: "CreateInstanceExportTask" },
  CreateInternetGatewayResult: { EC2: "CreateInternetGateway" },
  CreateIpamResult: { EC2: "CreateIpam" },
  CreateIpamPoolResult: { EC2: "CreateIpamPool" },
  CreateIpamResourceDiscoveryResult: { EC2: "CreateIpamResourceDiscovery" },
  CreateIpamScopeResult: { EC2: "CreateIpamScope" },
  KeyPair: { EC2: "CreateKeyPair" },
  CreateLaunchTemplateResult: { EC2: "CreateLaunchTemplate" },
  CreateLaunchTemplateVersionResult: { EC2: "CreateLaunchTemplateVersion" },
  CreateLocalGatewayRouteResult: { EC2: "CreateLocalGatewayRoute" },
  CreateLocalGatewayRouteTableResult: { EC2: "CreateLocalGatewayRouteTable" },
  CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociationResult: {
    EC2: "CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociation",
  },
  CreateLocalGatewayRouteTableVpcAssociationResult: {
    EC2: "CreateLocalGatewayRouteTableVpcAssociation",
  },
  CreateManagedPrefixListResult: { EC2: "CreateManagedPrefixList" },
  CreateNatGatewayResult: { EC2: "CreateNatGateway" },
  CreateNetworkAclResult: { EC2: "CreateNetworkAcl" },
  CreateNetworkInsightsAccessScopeResult: { EC2: "CreateNetworkInsightsAccessScope" },
  CreateNetworkInsightsPathResult: { EC2: "CreateNetworkInsightsPath" },
  CreateNetworkInterfaceResult: { EC2: "CreateNetworkInterface" },
  CreateNetworkInterfacePermissionResult: { EC2: "CreateNetworkInterfacePermission" },
  CreatePlacementGroupResult: { EC2: "CreatePlacementGroup" },
  CreatePublicIpv4PoolResult: { EC2: "CreatePublicIpv4Pool" },
  CreateReplaceRootVolumeTaskResult: { EC2: "CreateReplaceRootVolumeTask" },
  CreateReservedInstancesListingResult: { EC2: "CreateReservedInstancesListing" },
  CreateRestoreImageTaskResult: { EC2: "CreateRestoreImageTask" },
  CreateRouteTableResult: { EC2: "CreateRouteTable" },
  CreateSecurityGroupResult: { EC2: "CreateSecurityGroup" },
  Snapshot: { EC2: "CreateSnapshot" },
  CreateSnapshotsResult: { EC2: "CreateSnapshots" },
  CreateSpotDatafeedSubscriptionResult: { EC2: "CreateSpotDatafeedSubscription" },
  CreateStoreImageTaskResult: { EC2: "CreateStoreImageTask" },
  CreateSubnetResult: { EC2: "CreateSubnet" },
  CreateSubnetCidrReservationResult: { EC2: "CreateSubnetCidrReservation" },
  CreateTrafficMirrorFilterResult: { EC2: "CreateTrafficMirrorFilter" },
  CreateTrafficMirrorFilterRuleResult: { EC2: "CreateTrafficMirrorFilterRule" },
  CreateTrafficMirrorSessionResult: { EC2: "CreateTrafficMirrorSession" },
  CreateTrafficMirrorTargetResult: { EC2: "CreateTrafficMirrorTarget" },
  CreateTransitGatewayResult: { EC2: "CreateTransitGateway" },
  CreateTransitGatewayConnectResult: { EC2: "CreateTransitGatewayConnect" },
  CreateTransitGatewayConnectPeerResult: { EC2: "CreateTransitGatewayConnectPeer" },
  CreateTransitGatewayMulticastDomainResult: { EC2: "CreateTransitGatewayMulticastDomain" },
  CreateTransitGatewayPeeringAttachmentResult: { EC2: "CreateTransitGatewayPeeringAttachment" },
  CreateTransitGatewayPolicyTableResult: { EC2: "CreateTransitGatewayPolicyTable" },
  CreateTransitGatewayPrefixListReferenceResult: { EC2: "CreateTransitGatewayPrefixListReference" },
  CreateTransitGatewayRouteResult: { EC2: "CreateTransitGatewayRoute" },
  CreateTransitGatewayRouteTableResult: { EC2: "CreateTransitGatewayRouteTable" },
  CreateTransitGatewayRouteTableAnnouncementResult: {
    EC2: "CreateTransitGatewayRouteTableAnnouncement",
  },
  CreateTransitGatewayVpcAttachmentResult: { EC2: "CreateTransitGatewayVpcAttachment" },
  CreateVerifiedAccessEndpointResult: { EC2: "CreateVerifiedAccessEndpoint" },
  CreateVerifiedAccessGroupResult: { EC2: "CreateVerifiedAccessGroup" },
  CreateVerifiedAccessInstanceResult: { EC2: "CreateVerifiedAccessInstance" },
  CreateVerifiedAccessTrustProviderResult: { EC2: "CreateVerifiedAccessTrustProvider" },
  Volume: { EC2: "CreateVolume" },
  CreateVpcResult: { EC2: "CreateVpc" },
  CreateVpcEndpointResult: { EC2: "CreateVpcEndpoint" },
  CreateVpcEndpointConnectionNotificationResult: { EC2: "CreateVpcEndpointConnectionNotification" },
  CreateVpcEndpointServiceConfigurationResult: { EC2: "CreateVpcEndpointServiceConfiguration" },
  CreateVpcPeeringConnectionResult: { EC2: "CreateVpcPeeringConnection" },
  CreateVpnConnectionResult: { EC2: "CreateVpnConnection" },
  CreateVpnGatewayResult: { EC2: "CreateVpnGateway" },
  DeleteCarrierGatewayResult: { EC2: "DeleteCarrierGateway" },
  DeleteClientVpnEndpointResult: { EC2: "DeleteClientVpnEndpoint" },
  DeleteClientVpnRouteResult: { EC2: "DeleteClientVpnRoute" },
  DeleteCoipCidrResult: { EC2: "DeleteCoipCidr" },
  DeleteCoipPoolResult: { EC2: "DeleteCoipPool" },
  DeleteEgressOnlyInternetGatewayResult: { EC2: "DeleteEgressOnlyInternetGateway" },
  DeleteFleetsResult: { EC2: "DeleteFleets" },
  DeleteFlowLogsResult: { EC2: "DeleteFlowLogs" },
  DeleteFpgaImageResult: { EC2: "DeleteFpgaImage" },
  DeleteInstanceConnectEndpointResult: { EC2: "DeleteInstanceConnectEndpoint" },
  DeleteInstanceEventWindowResult: { EC2: "DeleteInstanceEventWindow" },
  DeleteIpamResult: { EC2: "DeleteIpam" },
  DeleteIpamPoolResult: { EC2: "DeleteIpamPool" },
  DeleteIpamResourceDiscoveryResult: { EC2: "DeleteIpamResourceDiscovery" },
  DeleteIpamScopeResult: { EC2: "DeleteIpamScope" },
  DeleteLaunchTemplateResult: { EC2: "DeleteLaunchTemplate" },
  DeleteLaunchTemplateVersionsResult: { EC2: "DeleteLaunchTemplateVersions" },
  DeleteLocalGatewayRouteResult: { EC2: "DeleteLocalGatewayRoute" },
  DeleteLocalGatewayRouteTableResult: { EC2: "DeleteLocalGatewayRouteTable" },
  DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationResult: {
    EC2: "DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociation",
  },
  DeleteLocalGatewayRouteTableVpcAssociationResult: {
    EC2: "DeleteLocalGatewayRouteTableVpcAssociation",
  },
  DeleteManagedPrefixListResult: { EC2: "DeleteManagedPrefixList" },
  DeleteNatGatewayResult: { EC2: "DeleteNatGateway" },
  DeleteNetworkInsightsAccessScopeResult: { EC2: "DeleteNetworkInsightsAccessScope" },
  DeleteNetworkInsightsAccessScopeAnalysisResult: {
    EC2: "DeleteNetworkInsightsAccessScopeAnalysis",
  },
  DeleteNetworkInsightsAnalysisResult: { EC2: "DeleteNetworkInsightsAnalysis" },
  DeleteNetworkInsightsPathResult: { EC2: "DeleteNetworkInsightsPath" },
  DeleteNetworkInterfacePermissionResult: { EC2: "DeleteNetworkInterfacePermission" },
  DeletePublicIpv4PoolResult: { EC2: "DeletePublicIpv4Pool" },
  DeleteQueuedReservedInstancesResult: { EC2: "DeleteQueuedReservedInstances" },
  DeleteSubnetCidrReservationResult: { EC2: "DeleteSubnetCidrReservation" },
  DeleteTrafficMirrorFilterResult: { EC2: "DeleteTrafficMirrorFilter" },
  DeleteTrafficMirrorFilterRuleResult: { EC2: "DeleteTrafficMirrorFilterRule" },
  DeleteTrafficMirrorSessionResult: { EC2: "DeleteTrafficMirrorSession" },
  DeleteTrafficMirrorTargetResult: { EC2: "DeleteTrafficMirrorTarget" },
  DeleteTransitGatewayResult: { EC2: "DeleteTransitGateway" },
  DeleteTransitGatewayConnectResult: { EC2: "DeleteTransitGatewayConnect" },
  DeleteTransitGatewayConnectPeerResult: { EC2: "DeleteTransitGatewayConnectPeer" },
  DeleteTransitGatewayMulticastDomainResult: { EC2: "DeleteTransitGatewayMulticastDomain" },
  DeleteTransitGatewayPeeringAttachmentResult: { EC2: "DeleteTransitGatewayPeeringAttachment" },
  DeleteTransitGatewayPolicyTableResult: { EC2: "DeleteTransitGatewayPolicyTable" },
  DeleteTransitGatewayPrefixListReferenceResult: { EC2: "DeleteTransitGatewayPrefixListReference" },
  DeleteTransitGatewayRouteResult: { EC2: "DeleteTransitGatewayRoute" },
  DeleteTransitGatewayRouteTableResult: { EC2: "DeleteTransitGatewayRouteTable" },
  DeleteTransitGatewayRouteTableAnnouncementResult: {
    EC2: "DeleteTransitGatewayRouteTableAnnouncement",
  },
  DeleteTransitGatewayVpcAttachmentResult: { EC2: "DeleteTransitGatewayVpcAttachment" },
  DeleteVerifiedAccessEndpointResult: { EC2: "DeleteVerifiedAccessEndpoint" },
  DeleteVerifiedAccessGroupResult: { EC2: "DeleteVerifiedAccessGroup" },
  DeleteVerifiedAccessInstanceResult: { EC2: "DeleteVerifiedAccessInstance" },
  DeleteVerifiedAccessTrustProviderResult: { EC2: "DeleteVerifiedAccessTrustProvider" },
  DeleteVpcEndpointConnectionNotificationsResult: {
    EC2: "DeleteVpcEndpointConnectionNotifications",
  },
  DeleteVpcEndpointServiceConfigurationsResult: { EC2: "DeleteVpcEndpointServiceConfigurations" },
  DeleteVpcEndpointsResult: { EC2: "DeleteVpcEndpoints" },
  DeleteVpcPeeringConnectionResult: { EC2: "DeleteVpcPeeringConnection" },
  DeprovisionByoipCidrResult: { EC2: "DeprovisionByoipCidr" },
  DeprovisionIpamPoolCidrResult: { EC2: "DeprovisionIpamPoolCidr" },
  DeprovisionPublicIpv4PoolCidrResult: { EC2: "DeprovisionPublicIpv4PoolCidr" },
  DeregisterInstanceEventNotificationAttributesResult: {
    EC2: "DeregisterInstanceEventNotificationAttributes",
  },
  DeregisterTransitGatewayMulticastGroupMembersResult: {
    EC2: "DeregisterTransitGatewayMulticastGroupMembers",
  },
  DeregisterTransitGatewayMulticastGroupSourcesResult: {
    EC2: "DeregisterTransitGatewayMulticastGroupSources",
  },
  DescribeAccountAttributesResult: {
    EC2: "DescribeAccountAttributes",
    PinpointSMSVoiceV2: "DescribeAccountAttributes",
  },
  DescribeAddressTransfersResult: { EC2: "DescribeAddressTransfers" },
  DescribeAddressesResult: { EC2: "DescribeAddresses", Snowball: "DescribeAddresses" },
  DescribeAddressesAttributeResult: { EC2: "DescribeAddressesAttribute" },
  DescribeAggregateIdFormatResult: { EC2: "DescribeAggregateIdFormat" },
  DescribeAvailabilityZonesResult: { EC2: "DescribeAvailabilityZones" },
  DescribeAwsNetworkPerformanceMetricSubscriptionsResult: {
    EC2: "DescribeAwsNetworkPerformanceMetricSubscriptions",
  },
  DescribeBundleTasksResult: { EC2: "DescribeBundleTasks" },
  DescribeByoipCidrsResult: { EC2: "DescribeByoipCidrs" },
  DescribeCapacityReservationFleetsResult: { EC2: "DescribeCapacityReservationFleets" },
  DescribeCapacityReservationsResult: { EC2: "DescribeCapacityReservations" },
  DescribeCarrierGatewaysResult: { EC2: "DescribeCarrierGateways" },
  DescribeClassicLinkInstancesResult: { EC2: "DescribeClassicLinkInstances" },
  DescribeClientVpnAuthorizationRulesResult: { EC2: "DescribeClientVpnAuthorizationRules" },
  DescribeClientVpnConnectionsResult: { EC2: "DescribeClientVpnConnections" },
  DescribeClientVpnEndpointsResult: { EC2: "DescribeClientVpnEndpoints" },
  DescribeClientVpnRoutesResult: { EC2: "DescribeClientVpnRoutes" },
  DescribeClientVpnTargetNetworksResult: { EC2: "DescribeClientVpnTargetNetworks" },
  DescribeCoipPoolsResult: { EC2: "DescribeCoipPools" },
  DescribeConversionTasksResult: { EC2: "DescribeConversionTasks" },
  DescribeCustomerGatewaysResult: { EC2: "DescribeCustomerGateways" },
  DescribeDhcpOptionsResult: { EC2: "DescribeDhcpOptions" },
  DescribeEgressOnlyInternetGatewaysResult: { EC2: "DescribeEgressOnlyInternetGateways" },
  DescribeElasticGpusResult: { EC2: "DescribeElasticGpus" },
  DescribeExportImageTasksResult: { EC2: "DescribeExportImageTasks" },
  DescribeExportTasksResult: { EC2: "DescribeExportTasks" },
  DescribeFastLaunchImagesResult: { EC2: "DescribeFastLaunchImages" },
  DescribeFastSnapshotRestoresResult: { EC2: "DescribeFastSnapshotRestores" },
  DescribeFleetHistoryResult: { EC2: "DescribeFleetHistory" },
  DescribeFleetInstancesResult: { EC2: "DescribeFleetInstances" },
  DescribeFlowLogsResult: { EC2: "DescribeFlowLogs" },
  DescribeFpgaImageAttributeResult: { EC2: "DescribeFpgaImageAttribute" },
  DescribeFpgaImagesResult: { EC2: "DescribeFpgaImages" },
  DescribeHostReservationOfferingsResult: { EC2: "DescribeHostReservationOfferings" },
  DescribeHostReservationsResult: { EC2: "DescribeHostReservations" },
  DescribeHostsResult: { EC2: "DescribeHosts" },
  DescribeIamInstanceProfileAssociationsResult: { EC2: "DescribeIamInstanceProfileAssociations" },
  DescribeIdFormatResult: { EC2: "DescribeIdFormat" },
  DescribeIdentityIdFormatResult: { EC2: "DescribeIdentityIdFormat" },
  ImageAttribute: { EC2: "DescribeImageAttribute" },
  DescribeImportImageTasksResult: { EC2: "DescribeImportImageTasks" },
  DescribeImportSnapshotTasksResult: { EC2: "DescribeImportSnapshotTasks" },
  InstanceAttribute: { EC2: "DescribeInstanceAttribute" },
  DescribeInstanceConnectEndpointsResult: { EC2: "DescribeInstanceConnectEndpoints" },
  DescribeInstanceCreditSpecificationsResult: { EC2: "DescribeInstanceCreditSpecifications" },
  DescribeInstanceEventNotificationAttributesResult: {
    EC2: "DescribeInstanceEventNotificationAttributes",
  },
  DescribeInstanceEventWindowsResult: { EC2: "DescribeInstanceEventWindows" },
  DescribeInstanceStatusResult: { EC2: "DescribeInstanceStatus" },
  DescribeInstanceTypeOfferingsResult: { EC2: "DescribeInstanceTypeOfferings" },
  DescribeInstanceTypesResult: { EC2: "DescribeInstanceTypes" },
  DescribeInstancesResult: { EC2: "DescribeInstances", OpsWorks: "DescribeInstances" },
  DescribeInternetGatewaysResult: { EC2: "DescribeInternetGateways" },
  DescribeIpamPoolsResult: { EC2: "DescribeIpamPools" },
  DescribeIpamResourceDiscoveriesResult: { EC2: "DescribeIpamResourceDiscoveries" },
  DescribeIpamResourceDiscoveryAssociationsResult: {
    EC2: "DescribeIpamResourceDiscoveryAssociations",
  },
  DescribeIpamScopesResult: { EC2: "DescribeIpamScopes" },
  DescribeIpamsResult: { EC2: "DescribeIpams" },
  DescribeIpv6PoolsResult: { EC2: "DescribeIpv6Pools" },
  DescribeKeyPairsResult: { EC2: "DescribeKeyPairs" },
  DescribeLaunchTemplateVersionsResult: { EC2: "DescribeLaunchTemplateVersions" },
  DescribeLaunchTemplatesResult: { EC2: "DescribeLaunchTemplates" },
  DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResult: {
    EC2: "DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
  },
  DescribeLocalGatewayRouteTableVpcAssociationsResult: {
    EC2: "DescribeLocalGatewayRouteTableVpcAssociations",
  },
  DescribeLocalGatewayRouteTablesResult: { EC2: "DescribeLocalGatewayRouteTables" },
  DescribeLocalGatewayVirtualInterfaceGroupsResult: {
    EC2: "DescribeLocalGatewayVirtualInterfaceGroups",
  },
  DescribeLocalGatewayVirtualInterfacesResult: { EC2: "DescribeLocalGatewayVirtualInterfaces" },
  DescribeLocalGatewaysResult: { EC2: "DescribeLocalGateways" },
  DescribeManagedPrefixListsResult: { EC2: "DescribeManagedPrefixLists" },
  DescribeMovingAddressesResult: { EC2: "DescribeMovingAddresses" },
  DescribeNatGatewaysResult: { EC2: "DescribeNatGateways" },
  DescribeNetworkAclsResult: { EC2: "DescribeNetworkAcls" },
  DescribeNetworkInsightsAccessScopeAnalysesResult: {
    EC2: "DescribeNetworkInsightsAccessScopeAnalyses",
  },
  DescribeNetworkInsightsAccessScopesResult: { EC2: "DescribeNetworkInsightsAccessScopes" },
  DescribeNetworkInsightsAnalysesResult: { EC2: "DescribeNetworkInsightsAnalyses" },
  DescribeNetworkInsightsPathsResult: { EC2: "DescribeNetworkInsightsPaths" },
  DescribeNetworkInterfaceAttributeResult: { EC2: "DescribeNetworkInterfaceAttribute" },
  DescribeNetworkInterfacePermissionsResult: { EC2: "DescribeNetworkInterfacePermissions" },
  DescribeNetworkInterfacesResult: { EC2: "DescribeNetworkInterfaces" },
  DescribePlacementGroupsResult: { EC2: "DescribePlacementGroups" },
  DescribePrefixListsResult: { EC2: "DescribePrefixLists" },
  DescribePrincipalIdFormatResult: { EC2: "DescribePrincipalIdFormat" },
  DescribePublicIpv4PoolsResult: { EC2: "DescribePublicIpv4Pools" },
  DescribeReplaceRootVolumeTasksResult: { EC2: "DescribeReplaceRootVolumeTasks" },
  DescribeReservedInstancesResult: { EC2: "DescribeReservedInstances" },
  DescribeReservedInstancesListingsResult: { EC2: "DescribeReservedInstancesListings" },
  DescribeReservedInstancesModificationsResult: { EC2: "DescribeReservedInstancesModifications" },
  DescribeReservedInstancesOfferingsResult: { EC2: "DescribeReservedInstancesOfferings" },
  DescribeRouteTablesResult: { EC2: "DescribeRouteTables" },
  DescribeScheduledInstanceAvailabilityResult: { EC2: "DescribeScheduledInstanceAvailability" },
  DescribeScheduledInstancesResult: { EC2: "DescribeScheduledInstances" },
  DescribeSecurityGroupReferencesResult: { EC2: "DescribeSecurityGroupReferences" },
  DescribeSecurityGroupRulesResult: { EC2: "DescribeSecurityGroupRules" },
  DescribeSecurityGroupsResult: { EC2: "DescribeSecurityGroups" },
  DescribeSnapshotAttributeResult: { EC2: "DescribeSnapshotAttribute" },
  DescribeSnapshotTierStatusResult: { EC2: "DescribeSnapshotTierStatus" },
  DescribeSpotDatafeedSubscriptionResult: { EC2: "DescribeSpotDatafeedSubscription" },
  DescribeSpotInstanceRequestsResult: { EC2: "DescribeSpotInstanceRequests" },
  DescribeSpotPriceHistoryResult: { EC2: "DescribeSpotPriceHistory" },
  DescribeStaleSecurityGroupsResult: { EC2: "DescribeStaleSecurityGroups" },
  DescribeStoreImageTasksResult: { EC2: "DescribeStoreImageTasks" },
  DescribeSubnetsResult: { EC2: "DescribeSubnets" },
  DescribeTagsResult: { EC2: "DescribeTags", WorkSpaces: "DescribeTags" },
  DescribeTrafficMirrorFiltersResult: { EC2: "DescribeTrafficMirrorFilters" },
  DescribeTrafficMirrorSessionsResult: { EC2: "DescribeTrafficMirrorSessions" },
  DescribeTrafficMirrorTargetsResult: { EC2: "DescribeTrafficMirrorTargets" },
  DescribeTransitGatewayAttachmentsResult: { EC2: "DescribeTransitGatewayAttachments" },
  DescribeTransitGatewayConnectPeersResult: { EC2: "DescribeTransitGatewayConnectPeers" },
  DescribeTransitGatewayConnectsResult: { EC2: "DescribeTransitGatewayConnects" },
  DescribeTransitGatewayMulticastDomainsResult: { EC2: "DescribeTransitGatewayMulticastDomains" },
  DescribeTransitGatewayPeeringAttachmentsResult: {
    EC2: "DescribeTransitGatewayPeeringAttachments",
  },
  DescribeTransitGatewayPolicyTablesResult: { EC2: "DescribeTransitGatewayPolicyTables" },
  DescribeTransitGatewayRouteTableAnnouncementsResult: {
    EC2: "DescribeTransitGatewayRouteTableAnnouncements",
  },
  DescribeTransitGatewayRouteTablesResult: { EC2: "DescribeTransitGatewayRouteTables" },
  DescribeTransitGatewayVpcAttachmentsResult: { EC2: "DescribeTransitGatewayVpcAttachments" },
  DescribeTransitGatewaysResult: { EC2: "DescribeTransitGateways" },
  DescribeTrunkInterfaceAssociationsResult: { EC2: "DescribeTrunkInterfaceAssociations" },
  DescribeVerifiedAccessEndpointsResult: { EC2: "DescribeVerifiedAccessEndpoints" },
  DescribeVerifiedAccessGroupsResult: { EC2: "DescribeVerifiedAccessGroups" },
  DescribeVerifiedAccessInstanceLoggingConfigurationsResult: {
    EC2: "DescribeVerifiedAccessInstanceLoggingConfigurations",
  },
  DescribeVerifiedAccessInstancesResult: { EC2: "DescribeVerifiedAccessInstances" },
  DescribeVerifiedAccessTrustProvidersResult: { EC2: "DescribeVerifiedAccessTrustProviders" },
  DescribeVolumeAttributeResult: { EC2: "DescribeVolumeAttribute" },
  DescribeVolumeStatusResult: { EC2: "DescribeVolumeStatus" },
  DescribeVolumesResult: { EC2: "DescribeVolumes", OpsWorks: "DescribeVolumes" },
  DescribeVolumesModificationsResult: { EC2: "DescribeVolumesModifications" },
  DescribeVpcAttributeResult: { EC2: "DescribeVpcAttribute" },
  DescribeVpcClassicLinkResult: { EC2: "DescribeVpcClassicLink" },
  DescribeVpcClassicLinkDnsSupportResult: { EC2: "DescribeVpcClassicLinkDnsSupport" },
  DescribeVpcEndpointConnectionNotificationsResult: {
    EC2: "DescribeVpcEndpointConnectionNotifications",
  },
  DescribeVpcEndpointConnectionsResult: { EC2: "DescribeVpcEndpointConnections" },
  DescribeVpcEndpointServiceConfigurationsResult: {
    EC2: "DescribeVpcEndpointServiceConfigurations",
  },
  DescribeVpcEndpointServicePermissionsResult: { EC2: "DescribeVpcEndpointServicePermissions" },
  DescribeVpcEndpointServicesResult: { EC2: "DescribeVpcEndpointServices" },
  DescribeVpcEndpointsResult: { EC2: "DescribeVpcEndpoints" },
  DescribeVpcPeeringConnectionsResult: { EC2: "DescribeVpcPeeringConnections" },
  DescribeVpcsResult: { EC2: "DescribeVpcs" },
  DescribeVpnConnectionsResult: { EC2: "DescribeVpnConnections" },
  DescribeVpnGatewaysResult: { EC2: "DescribeVpnGateways" },
  DetachClassicLinkVpcResult: { EC2: "DetachClassicLinkVpc" },
  DetachVerifiedAccessTrustProviderResult: { EC2: "DetachVerifiedAccessTrustProvider" },
  DisableAddressTransferResult: { EC2: "DisableAddressTransfer" },
  DisableAwsNetworkPerformanceMetricSubscriptionResult: {
    EC2: "DisableAwsNetworkPerformanceMetricSubscription",
  },
  DisableEbsEncryptionByDefaultResult: { EC2: "DisableEbsEncryptionByDefault" },
  DisableFastLaunchResult: { EC2: "DisableFastLaunch" },
  DisableFastSnapshotRestoresResult: { EC2: "DisableFastSnapshotRestores" },
  DisableImageDeprecationResult: { EC2: "DisableImageDeprecation" },
  DisableIpamOrganizationAdminAccountResult: { EC2: "DisableIpamOrganizationAdminAccount" },
  DisableSerialConsoleAccessResult: { EC2: "DisableSerialConsoleAccess" },
  DisableTransitGatewayRouteTablePropagationResult: {
    EC2: "DisableTransitGatewayRouteTablePropagation",
  },
  DisableVpcClassicLinkResult: { EC2: "DisableVpcClassicLink" },
  DisableVpcClassicLinkDnsSupportResult: { EC2: "DisableVpcClassicLinkDnsSupport" },
  DisassociateClientVpnTargetNetworkResult: { EC2: "DisassociateClientVpnTargetNetwork" },
  DisassociateEnclaveCertificateIamRoleResult: { EC2: "DisassociateEnclaveCertificateIamRole" },
  DisassociateIamInstanceProfileResult: { EC2: "DisassociateIamInstanceProfile" },
  DisassociateInstanceEventWindowResult: { EC2: "DisassociateInstanceEventWindow" },
  DisassociateIpamResourceDiscoveryResult: { EC2: "DisassociateIpamResourceDiscovery" },
  DisassociateNatGatewayAddressResult: { EC2: "DisassociateNatGatewayAddress" },
  DisassociateSubnetCidrBlockResult: { EC2: "DisassociateSubnetCidrBlock" },
  DisassociateTransitGatewayMulticastDomainResult: {
    EC2: "DisassociateTransitGatewayMulticastDomain",
  },
  DisassociateTransitGatewayPolicyTableResult: { EC2: "DisassociateTransitGatewayPolicyTable" },
  DisassociateTransitGatewayRouteTableResult: { EC2: "DisassociateTransitGatewayRouteTable" },
  DisassociateTrunkInterfaceResult: { EC2: "DisassociateTrunkInterface" },
  DisassociateVpcCidrBlockResult: { EC2: "DisassociateVpcCidrBlock" },
  EnableAddressTransferResult: { EC2: "EnableAddressTransfer" },
  EnableAwsNetworkPerformanceMetricSubscriptionResult: {
    EC2: "EnableAwsNetworkPerformanceMetricSubscription",
  },
  EnableEbsEncryptionByDefaultResult: { EC2: "EnableEbsEncryptionByDefault" },
  EnableFastLaunchResult: { EC2: "EnableFastLaunch" },
  EnableFastSnapshotRestoresResult: { EC2: "EnableFastSnapshotRestores" },
  EnableImageDeprecationResult: { EC2: "EnableImageDeprecation" },
  EnableIpamOrganizationAdminAccountResult: { EC2: "EnableIpamOrganizationAdminAccount" },
  EnableReachabilityAnalyzerOrganizationSharingResult: {
    EC2: "EnableReachabilityAnalyzerOrganizationSharing",
  },
  EnableSerialConsoleAccessResult: { EC2: "EnableSerialConsoleAccess" },
  EnableTransitGatewayRouteTablePropagationResult: {
    EC2: "EnableTransitGatewayRouteTablePropagation",
  },
  EnableVpcClassicLinkResult: { EC2: "EnableVpcClassicLink" },
  EnableVpcClassicLinkDnsSupportResult: { EC2: "EnableVpcClassicLinkDnsSupport" },
  ExportClientVpnClientCertificateRevocationListResult: {
    EC2: "ExportClientVpnClientCertificateRevocationList",
  },
  ExportClientVpnClientConfigurationResult: { EC2: "ExportClientVpnClientConfiguration" },
  ExportImageResult: { EC2: "ExportImage" },
  ExportTransitGatewayRoutesResult: { EC2: "ExportTransitGatewayRoutes" },
  GetAssociatedEnclaveCertificateIamRolesResult: { EC2: "GetAssociatedEnclaveCertificateIamRoles" },
  GetAssociatedIpv6PoolCidrsResult: { EC2: "GetAssociatedIpv6PoolCidrs" },
  GetAwsNetworkPerformanceDataResult: { EC2: "GetAwsNetworkPerformanceData" },
  GetCapacityReservationUsageResult: { EC2: "GetCapacityReservationUsage" },
  GetCoipPoolUsageResult: { EC2: "GetCoipPoolUsage" },
  GetConsoleOutputResult: { EC2: "GetConsoleOutput" },
  GetConsoleScreenshotResult: { EC2: "GetConsoleScreenshot" },
  GetDefaultCreditSpecificationResult: { EC2: "GetDefaultCreditSpecification" },
  GetEbsDefaultKmsKeyIdResult: { EC2: "GetEbsDefaultKmsKeyId" },
  GetEbsEncryptionByDefaultResult: { EC2: "GetEbsEncryptionByDefault" },
  GetFlowLogsIntegrationTemplateResult: { EC2: "GetFlowLogsIntegrationTemplate" },
  GetGroupsForCapacityReservationResult: { EC2: "GetGroupsForCapacityReservation" },
  GetHostReservationPurchasePreviewResult: { EC2: "GetHostReservationPurchasePreview" },
  GetInstanceTypesFromInstanceRequirementsResult: {
    EC2: "GetInstanceTypesFromInstanceRequirements",
  },
  GetInstanceUefiDataResult: { EC2: "GetInstanceUefiData" },
  GetIpamAddressHistoryResult: { EC2: "GetIpamAddressHistory" },
  GetIpamDiscoveredAccountsResult: { EC2: "GetIpamDiscoveredAccounts" },
  GetIpamDiscoveredResourceCidrsResult: { EC2: "GetIpamDiscoveredResourceCidrs" },
  GetIpamPoolAllocationsResult: { EC2: "GetIpamPoolAllocations" },
  GetIpamPoolCidrsResult: { EC2: "GetIpamPoolCidrs" },
  GetIpamResourceCidrsResult: { EC2: "GetIpamResourceCidrs" },
  GetLaunchTemplateDataResult: { EC2: "GetLaunchTemplateData" },
  GetManagedPrefixListAssociationsResult: { EC2: "GetManagedPrefixListAssociations" },
  GetManagedPrefixListEntriesResult: { EC2: "GetManagedPrefixListEntries" },
  GetNetworkInsightsAccessScopeAnalysisFindingsResult: {
    EC2: "GetNetworkInsightsAccessScopeAnalysisFindings",
  },
  GetNetworkInsightsAccessScopeContentResult: { EC2: "GetNetworkInsightsAccessScopeContent" },
  GetPasswordDataResult: { EC2: "GetPasswordData" },
  GetReservedInstancesExchangeQuoteResult: { EC2: "GetReservedInstancesExchangeQuote" },
  GetSerialConsoleAccessStatusResult: { EC2: "GetSerialConsoleAccessStatus" },
  GetSpotPlacementScoresResult: { EC2: "GetSpotPlacementScores" },
  GetSubnetCidrReservationsResult: { EC2: "GetSubnetCidrReservations" },
  GetTransitGatewayAttachmentPropagationsResult: { EC2: "GetTransitGatewayAttachmentPropagations" },
  GetTransitGatewayMulticastDomainAssociationsResult: {
    EC2: "GetTransitGatewayMulticastDomainAssociations",
  },
  GetTransitGatewayPolicyTableAssociationsResult: {
    EC2: "GetTransitGatewayPolicyTableAssociations",
  },
  GetTransitGatewayPolicyTableEntriesResult: { EC2: "GetTransitGatewayPolicyTableEntries" },
  GetTransitGatewayPrefixListReferencesResult: { EC2: "GetTransitGatewayPrefixListReferences" },
  GetTransitGatewayRouteTableAssociationsResult: { EC2: "GetTransitGatewayRouteTableAssociations" },
  GetTransitGatewayRouteTablePropagationsResult: { EC2: "GetTransitGatewayRouteTablePropagations" },
  GetVerifiedAccessEndpointPolicyResult: { EC2: "GetVerifiedAccessEndpointPolicy" },
  GetVerifiedAccessGroupPolicyResult: { EC2: "GetVerifiedAccessGroupPolicy" },
  GetVpnConnectionDeviceSampleConfigurationResult: {
    EC2: "GetVpnConnectionDeviceSampleConfiguration",
  },
  GetVpnConnectionDeviceTypesResult: { EC2: "GetVpnConnectionDeviceTypes" },
  GetVpnTunnelReplacementStatusResult: { EC2: "GetVpnTunnelReplacementStatus" },
  ImportClientVpnClientCertificateRevocationListResult: {
    EC2: "ImportClientVpnClientCertificateRevocationList",
  },
  ImportImageResult: { EC2: "ImportImage" },
  ImportInstanceResult: { EC2: "ImportInstance" },
  ImportKeyPairResult: { EC2: "ImportKeyPair", Lightsail: "ImportKeyPair" },
  ImportSnapshotResult: { EC2: "ImportSnapshot" },
  ImportVolumeResult: { EC2: "ImportVolume" },
  ListImagesInRecycleBinResult: { EC2: "ListImagesInRecycleBin" },
  ListSnapshotsInRecycleBinResult: { EC2: "ListSnapshotsInRecycleBin" },
  ModifyAddressAttributeResult: { EC2: "ModifyAddressAttribute" },
  ModifyAvailabilityZoneGroupResult: { EC2: "ModifyAvailabilityZoneGroup" },
  ModifyCapacityReservationResult: { EC2: "ModifyCapacityReservation" },
  ModifyCapacityReservationFleetResult: { EC2: "ModifyCapacityReservationFleet" },
  ModifyClientVpnEndpointResult: { EC2: "ModifyClientVpnEndpoint" },
  ModifyDefaultCreditSpecificationResult: { EC2: "ModifyDefaultCreditSpecification" },
  ModifyEbsDefaultKmsKeyIdResult: { EC2: "ModifyEbsDefaultKmsKeyId" },
  ModifyFleetResult: { EC2: "ModifyFleet" },
  ModifyFpgaImageAttributeResult: { EC2: "ModifyFpgaImageAttribute" },
  ModifyHostsResult: { EC2: "ModifyHosts" },
  ModifyInstanceCapacityReservationAttributesResult: {
    EC2: "ModifyInstanceCapacityReservationAttributes",
  },
  ModifyInstanceCreditSpecificationResult: { EC2: "ModifyInstanceCreditSpecification" },
  ModifyInstanceEventStartTimeResult: { EC2: "ModifyInstanceEventStartTime" },
  ModifyInstanceEventWindowResult: { EC2: "ModifyInstanceEventWindow" },
  ModifyInstanceMaintenanceOptionsResult: { EC2: "ModifyInstanceMaintenanceOptions" },
  ModifyInstanceMetadataOptionsResult: { EC2: "ModifyInstanceMetadataOptions" },
  ModifyInstancePlacementResult: { EC2: "ModifyInstancePlacement" },
  ModifyIpamResult: { EC2: "ModifyIpam" },
  ModifyIpamPoolResult: { EC2: "ModifyIpamPool" },
  ModifyIpamResourceCidrResult: { EC2: "ModifyIpamResourceCidr" },
  ModifyIpamResourceDiscoveryResult: { EC2: "ModifyIpamResourceDiscovery" },
  ModifyIpamScopeResult: { EC2: "ModifyIpamScope" },
  ModifyLaunchTemplateResult: { EC2: "ModifyLaunchTemplate" },
  ModifyLocalGatewayRouteResult: { EC2: "ModifyLocalGatewayRoute" },
  ModifyManagedPrefixListResult: { EC2: "ModifyManagedPrefixList" },
  ModifyPrivateDnsNameOptionsResult: { EC2: "ModifyPrivateDnsNameOptions" },
  ModifyReservedInstancesResult: { EC2: "ModifyReservedInstances" },
  ModifySecurityGroupRulesResult: { EC2: "ModifySecurityGroupRules" },
  ModifySnapshotTierResult: { EC2: "ModifySnapshotTier" },
  ModifyTrafficMirrorFilterNetworkServicesResult: {
    EC2: "ModifyTrafficMirrorFilterNetworkServices",
  },
  ModifyTrafficMirrorFilterRuleResult: { EC2: "ModifyTrafficMirrorFilterRule" },
  ModifyTrafficMirrorSessionResult: { EC2: "ModifyTrafficMirrorSession" },
  ModifyTransitGatewayResult: { EC2: "ModifyTransitGateway" },
  ModifyTransitGatewayPrefixListReferenceResult: { EC2: "ModifyTransitGatewayPrefixListReference" },
  ModifyTransitGatewayVpcAttachmentResult: { EC2: "ModifyTransitGatewayVpcAttachment" },
  ModifyVerifiedAccessEndpointResult: { EC2: "ModifyVerifiedAccessEndpoint" },
  ModifyVerifiedAccessEndpointPolicyResult: { EC2: "ModifyVerifiedAccessEndpointPolicy" },
  ModifyVerifiedAccessGroupResult: { EC2: "ModifyVerifiedAccessGroup" },
  ModifyVerifiedAccessGroupPolicyResult: { EC2: "ModifyVerifiedAccessGroupPolicy" },
  ModifyVerifiedAccessInstanceResult: { EC2: "ModifyVerifiedAccessInstance" },
  ModifyVerifiedAccessInstanceLoggingConfigurationResult: {
    EC2: "ModifyVerifiedAccessInstanceLoggingConfiguration",
  },
  ModifyVerifiedAccessTrustProviderResult: { EC2: "ModifyVerifiedAccessTrustProvider" },
  ModifyVolumeResult: { EC2: "ModifyVolume" },
  ModifyVpcEndpointResult: { EC2: "ModifyVpcEndpoint" },
  ModifyVpcEndpointConnectionNotificationResult: { EC2: "ModifyVpcEndpointConnectionNotification" },
  ModifyVpcEndpointServiceConfigurationResult: { EC2: "ModifyVpcEndpointServiceConfiguration" },
  ModifyVpcEndpointServicePayerResponsibilityResult: {
    EC2: "ModifyVpcEndpointServicePayerResponsibility",
  },
  ModifyVpcEndpointServicePermissionsResult: { EC2: "ModifyVpcEndpointServicePermissions" },
  ModifyVpcPeeringConnectionOptionsResult: { EC2: "ModifyVpcPeeringConnectionOptions" },
  ModifyVpcTenancyResult: { EC2: "ModifyVpcTenancy" },
  ModifyVpnConnectionResult: { EC2: "ModifyVpnConnection" },
  ModifyVpnConnectionOptionsResult: { EC2: "ModifyVpnConnectionOptions" },
  ModifyVpnTunnelCertificateResult: { EC2: "ModifyVpnTunnelCertificate" },
  ModifyVpnTunnelOptionsResult: { EC2: "ModifyVpnTunnelOptions" },
  MonitorInstancesResult: { EC2: "MonitorInstances" },
  MoveAddressToVpcResult: { EC2: "MoveAddressToVpc" },
  MoveByoipCidrToIpamResult: { EC2: "MoveByoipCidrToIpam" },
  ProvisionByoipCidrResult: { EC2: "ProvisionByoipCidr" },
  ProvisionIpamPoolCidrResult: { EC2: "ProvisionIpamPoolCidr" },
  ProvisionPublicIpv4PoolCidrResult: { EC2: "ProvisionPublicIpv4PoolCidr" },
  PurchaseHostReservationResult: { EC2: "PurchaseHostReservation" },
  PurchaseReservedInstancesOfferingResult: { EC2: "PurchaseReservedInstancesOffering" },
  PurchaseScheduledInstancesResult: { EC2: "PurchaseScheduledInstances" },
  RegisterImageResult: { EC2: "RegisterImage" },
  RegisterInstanceEventNotificationAttributesResult: {
    EC2: "RegisterInstanceEventNotificationAttributes",
  },
  RegisterTransitGatewayMulticastGroupMembersResult: {
    EC2: "RegisterTransitGatewayMulticastGroupMembers",
  },
  RegisterTransitGatewayMulticastGroupSourcesResult: {
    EC2: "RegisterTransitGatewayMulticastGroupSources",
  },
  RejectTransitGatewayMulticastDomainAssociationsResult: {
    EC2: "RejectTransitGatewayMulticastDomainAssociations",
  },
  RejectTransitGatewayPeeringAttachmentResult: { EC2: "RejectTransitGatewayPeeringAttachment" },
  RejectTransitGatewayVpcAttachmentResult: { EC2: "RejectTransitGatewayVpcAttachment" },
  RejectVpcEndpointConnectionsResult: { EC2: "RejectVpcEndpointConnections" },
  RejectVpcPeeringConnectionResult: { EC2: "RejectVpcPeeringConnection" },
  ReleaseHostsResult: { EC2: "ReleaseHosts" },
  ReleaseIpamPoolAllocationResult: { EC2: "ReleaseIpamPoolAllocation" },
  ReplaceIamInstanceProfileAssociationResult: { EC2: "ReplaceIamInstanceProfileAssociation" },
  ReplaceNetworkAclAssociationResult: { EC2: "ReplaceNetworkAclAssociation" },
  ReplaceRouteTableAssociationResult: { EC2: "ReplaceRouteTableAssociation" },
  ReplaceTransitGatewayRouteResult: { EC2: "ReplaceTransitGatewayRoute" },
  ReplaceVpnTunnelResult: { EC2: "ReplaceVpnTunnel" },
  RequestSpotInstancesResult: { EC2: "RequestSpotInstances" },
  ResetAddressAttributeResult: { EC2: "ResetAddressAttribute" },
  ResetEbsDefaultKmsKeyIdResult: { EC2: "ResetEbsDefaultKmsKeyId" },
  ResetFpgaImageAttributeResult: { EC2: "ResetFpgaImageAttribute" },
  RestoreAddressToClassicResult: { EC2: "RestoreAddressToClassic" },
  RestoreImageFromRecycleBinResult: { EC2: "RestoreImageFromRecycleBin" },
  RestoreManagedPrefixListVersionResult: { EC2: "RestoreManagedPrefixListVersion" },
  RestoreSnapshotFromRecycleBinResult: { EC2: "RestoreSnapshotFromRecycleBin" },
  RestoreSnapshotTierResult: { EC2: "RestoreSnapshotTier" },
  RevokeClientVpnIngressResult: { EC2: "RevokeClientVpnIngress" },
  RevokeSecurityGroupEgressResult: { EC2: "RevokeSecurityGroupEgress" },
  RevokeSecurityGroupIngressResult: { EC2: "RevokeSecurityGroupIngress" },
  Reservation: { EC2: "RunInstances" },
  RunScheduledInstancesResult: { EC2: "RunScheduledInstances" },
  SearchLocalGatewayRoutesResult: { EC2: "SearchLocalGatewayRoutes" },
  SearchTransitGatewayMulticastGroupsResult: { EC2: "SearchTransitGatewayMulticastGroups" },
  SearchTransitGatewayRoutesResult: { EC2: "SearchTransitGatewayRoutes" },
  StartInstancesResult: { EC2: "StartInstances" },
  StartNetworkInsightsAccessScopeAnalysisResult: { EC2: "StartNetworkInsightsAccessScopeAnalysis" },
  StartNetworkInsightsAnalysisResult: { EC2: "StartNetworkInsightsAnalysis" },
  StartVpcEndpointServicePrivateDnsVerificationResult: {
    EC2: "StartVpcEndpointServicePrivateDnsVerification",
  },
  StopInstancesResult: { EC2: "StopInstances" },
  TerminateClientVpnConnectionsResult: { EC2: "TerminateClientVpnConnections" },
  TerminateInstancesResult: { EC2: "TerminateInstances" },
  UnassignIpv6AddressesResult: { EC2: "UnassignIpv6Addresses" },
  UnassignPrivateNatGatewayAddressResult: { EC2: "UnassignPrivateNatGatewayAddress" },
  UnmonitorInstancesResult: { EC2: "UnmonitorInstances" },
  UpdateSecurityGroupRuleDescriptionsEgressResult: {
    EC2: "UpdateSecurityGroupRuleDescriptionsEgress",
  },
  UpdateSecurityGroupRuleDescriptionsIngressResult: {
    EC2: "UpdateSecurityGroupRuleDescriptionsIngress",
  },
  WithdrawByoipCidrResult: { EC2: "WithdrawByoipCidr" },
  AccessPointDescription: { EFS: "CreateAccessPoint" },
  FileSystemDescription: { EFS: "UpdateFileSystem" },
  MountTargetDescription: { EFS: "CreateMountTarget" },
  ReplicationConfigurationDescription: { EFS: "CreateReplicationConfiguration" },
  BackupPolicyDescription: { EFS: "PutBackupPolicy" },
  FileSystemPolicyDescription: { EFS: "PutFileSystemPolicy" },
  LifecycleConfigurationDescription: { EFS: "PutLifecycleConfiguration" },
  CreateAccessPointInput: { ELB: "CreateLoadBalancer" },
  CreateAccessPointOutput: { ELB: "CreateLoadBalancer" },
  CreateLoadBalancerListenerInput: { ELB: "CreateLoadBalancerListeners" },
  CreateLoadBalancerListenerOutput: { ELB: "CreateLoadBalancerListeners" },
  DeleteAccessPointInput: { ELB: "DeleteLoadBalancer" },
  DeleteAccessPointOutput: { ELB: "DeleteLoadBalancer" },
  DeleteLoadBalancerListenerInput: { ELB: "DeleteLoadBalancerListeners" },
  DeleteLoadBalancerListenerOutput: { ELB: "DeleteLoadBalancerListeners" },
  DeregisterEndPointsInput: { ELB: "DeregisterInstancesFromLoadBalancer" },
  DeregisterEndPointsOutput: { ELB: "DeregisterInstancesFromLoadBalancer" },
  DescribeEndPointStateInput: { ELB: "DescribeInstanceHealth" },
  DescribeEndPointStateOutput: { ELB: "DescribeInstanceHealth" },
  DescribeAccessPointsInput: { ELB: "DescribeLoadBalancers" },
  DescribeAccessPointsOutput: { ELB: "DescribeLoadBalancers" },
  RemoveAvailabilityZonesInput: { ELB: "DisableAvailabilityZonesForLoadBalancer" },
  RemoveAvailabilityZonesOutput: { ELB: "DisableAvailabilityZonesForLoadBalancer" },
  AddAvailabilityZonesInput: { ELB: "EnableAvailabilityZonesForLoadBalancer" },
  AddAvailabilityZonesOutput: { ELB: "EnableAvailabilityZonesForLoadBalancer" },
  RegisterEndPointsInput: { ELB: "RegisterInstancesWithLoadBalancer" },
  RegisterEndPointsOutput: { ELB: "RegisterInstancesWithLoadBalancer" },
  AuthorizeCacheSecurityGroupIngressMessage: { ElastiCache: "AuthorizeCacheSecurityGroupIngress" },
  AuthorizeCacheSecurityGroupIngressResult: { ElastiCache: "AuthorizeCacheSecurityGroupIngress" },
  BatchApplyUpdateActionMessage: { ElastiCache: "BatchApplyUpdateAction" },
  UpdateActionResultsMessage: { ElastiCache: "BatchStopUpdateAction" },
  BatchStopUpdateActionMessage: { ElastiCache: "BatchStopUpdateAction" },
  CompleteMigrationMessage: { ElastiCache: "CompleteMigration" },
  CopySnapshotMessage: { ElastiCache: "CopySnapshot" },
  CreateCacheClusterMessage: { ElastiCache: "CreateCacheCluster" },
  CreateCacheClusterResult: { ElastiCache: "CreateCacheCluster" },
  CreateCacheParameterGroupMessage: { ElastiCache: "CreateCacheParameterGroup" },
  CreateCacheParameterGroupResult: { ElastiCache: "CreateCacheParameterGroup" },
  CreateCacheSecurityGroupMessage: { ElastiCache: "CreateCacheSecurityGroup" },
  CreateCacheSecurityGroupResult: { ElastiCache: "CreateCacheSecurityGroup" },
  CreateCacheSubnetGroupMessage: { ElastiCache: "CreateCacheSubnetGroup" },
  CreateCacheSubnetGroupResult: { ElastiCache: "CreateCacheSubnetGroup" },
  CreateGlobalReplicationGroupMessage: { ElastiCache: "CreateGlobalReplicationGroup" },
  CreateGlobalReplicationGroupResult: { ElastiCache: "CreateGlobalReplicationGroup" },
  CreateReplicationGroupMessage: { ElastiCache: "CreateReplicationGroup" },
  CreateReplicationGroupResult: { ElastiCache: "CreateReplicationGroup" },
  CreateSnapshotMessage: { ElastiCache: "CreateSnapshot" },
  CreateUserMessage: { ElastiCache: "CreateUser" },
  User: { ElastiCache: "ModifyUser" },
  CreateUserGroupMessage: { ElastiCache: "CreateUserGroup" },
  UserGroup: { ElastiCache: "ModifyUserGroup" },
  DecreaseNodeGroupsInGlobalReplicationGroupMessage: {
    ElastiCache: "DecreaseNodeGroupsInGlobalReplicationGroup",
  },
  DecreaseNodeGroupsInGlobalReplicationGroupResult: {
    ElastiCache: "DecreaseNodeGroupsInGlobalReplicationGroup",
  },
  DecreaseReplicaCountMessage: { ElastiCache: "DecreaseReplicaCount" },
  DecreaseReplicaCountResult: { ElastiCache: "DecreaseReplicaCount" },
  DeleteCacheClusterMessage: { ElastiCache: "DeleteCacheCluster" },
  DeleteCacheClusterResult: { ElastiCache: "DeleteCacheCluster" },
  DeleteCacheParameterGroupMessage: { ElastiCache: "DeleteCacheParameterGroup" },
  DeleteCacheSecurityGroupMessage: { ElastiCache: "DeleteCacheSecurityGroup" },
  DeleteCacheSubnetGroupMessage: { ElastiCache: "DeleteCacheSubnetGroup" },
  DeleteGlobalReplicationGroupMessage: { ElastiCache: "DeleteGlobalReplicationGroup" },
  DeleteGlobalReplicationGroupResult: { ElastiCache: "DeleteGlobalReplicationGroup" },
  DeleteReplicationGroupMessage: { ElastiCache: "DeleteReplicationGroup" },
  DeleteReplicationGroupResult: { ElastiCache: "DeleteReplicationGroup" },
  DeleteSnapshotMessage: { ElastiCache: "DeleteSnapshot" },
  DeleteUserMessage: { ElastiCache: "DeleteUser" },
  DeleteUserGroupMessage: { ElastiCache: "DeleteUserGroup" },
  DescribeCacheClustersMessage: { ElastiCache: "DescribeCacheClusters" },
  CacheClusterMessage: { ElastiCache: "DescribeCacheClusters" },
  DescribeCacheEngineVersionsMessage: { ElastiCache: "DescribeCacheEngineVersions" },
  CacheEngineVersionMessage: { ElastiCache: "DescribeCacheEngineVersions" },
  DescribeCacheParameterGroupsMessage: { ElastiCache: "DescribeCacheParameterGroups" },
  CacheParameterGroupsMessage: { ElastiCache: "DescribeCacheParameterGroups" },
  DescribeCacheParametersMessage: { ElastiCache: "DescribeCacheParameters" },
  CacheParameterGroupDetails: { ElastiCache: "DescribeCacheParameters" },
  DescribeCacheSecurityGroupsMessage: { ElastiCache: "DescribeCacheSecurityGroups" },
  CacheSecurityGroupMessage: { ElastiCache: "DescribeCacheSecurityGroups" },
  DescribeCacheSubnetGroupsMessage: { ElastiCache: "DescribeCacheSubnetGroups" },
  CacheSubnetGroupMessage: { ElastiCache: "DescribeCacheSubnetGroups" },
  DescribeEngineDefaultParametersMessage: {
    ElastiCache: "DescribeEngineDefaultParameters",
    Neptune: "DescribeEngineDefaultParameters",
    RDS: "DescribeEngineDefaultParameters",
  },
  DescribeEngineDefaultParametersResult: {
    ElastiCache: "DescribeEngineDefaultParameters",
    Neptune: "DescribeEngineDefaultParameters",
    RDS: "DescribeEngineDefaultParameters",
  },
  DescribeGlobalReplicationGroupsMessage: { ElastiCache: "DescribeGlobalReplicationGroups" },
  DescribeGlobalReplicationGroupsResult: { ElastiCache: "DescribeGlobalReplicationGroups" },
  DescribeReplicationGroupsMessage: { ElastiCache: "DescribeReplicationGroups" },
  ReplicationGroupMessage: { ElastiCache: "DescribeReplicationGroups" },
  DescribeReservedCacheNodesMessage: { ElastiCache: "DescribeReservedCacheNodes" },
  ReservedCacheNodeMessage: { ElastiCache: "DescribeReservedCacheNodes" },
  DescribeReservedCacheNodesOfferingsMessage: {
    ElastiCache: "DescribeReservedCacheNodesOfferings",
  },
  ReservedCacheNodesOfferingMessage: { ElastiCache: "DescribeReservedCacheNodesOfferings" },
  DescribeServiceUpdatesMessage: { ElastiCache: "DescribeServiceUpdates" },
  ServiceUpdatesMessage: { ElastiCache: "DescribeServiceUpdates" },
  DescribeSnapshotsMessage: { ElastiCache: "DescribeSnapshots" },
  DescribeSnapshotsListMessage: { ElastiCache: "DescribeSnapshots" },
  DescribeUpdateActionsMessage: { ElastiCache: "DescribeUpdateActions" },
  UpdateActionsMessage: { ElastiCache: "DescribeUpdateActions" },
  DescribeUserGroupsMessage: { ElastiCache: "DescribeUserGroups" },
  DescribeUserGroupsResult: { ElastiCache: "DescribeUserGroups" },
  DescribeUsersMessage: { ElastiCache: "DescribeUsers" },
  DisassociateGlobalReplicationGroupMessage: { ElastiCache: "DisassociateGlobalReplicationGroup" },
  DisassociateGlobalReplicationGroupResult: { ElastiCache: "DisassociateGlobalReplicationGroup" },
  FailoverGlobalReplicationGroupMessage: { ElastiCache: "FailoverGlobalReplicationGroup" },
  FailoverGlobalReplicationGroupResult: { ElastiCache: "FailoverGlobalReplicationGroup" },
  IncreaseNodeGroupsInGlobalReplicationGroupMessage: {
    ElastiCache: "IncreaseNodeGroupsInGlobalReplicationGroup",
  },
  IncreaseNodeGroupsInGlobalReplicationGroupResult: {
    ElastiCache: "IncreaseNodeGroupsInGlobalReplicationGroup",
  },
  IncreaseReplicaCountMessage: { ElastiCache: "IncreaseReplicaCount" },
  IncreaseReplicaCountResult: { ElastiCache: "IncreaseReplicaCount" },
  ListAllowedNodeTypeModificationsMessage: { ElastiCache: "ListAllowedNodeTypeModifications" },
  AllowedNodeTypeModificationsMessage: { ElastiCache: "ListAllowedNodeTypeModifications" },
  ModifyCacheClusterMessage: { ElastiCache: "ModifyCacheCluster" },
  ModifyCacheClusterResult: { ElastiCache: "ModifyCacheCluster" },
  ModifyCacheParameterGroupMessage: { ElastiCache: "ModifyCacheParameterGroup" },
  CacheParameterGroupNameMessage: { ElastiCache: "ResetCacheParameterGroup" },
  ModifyCacheSubnetGroupMessage: { ElastiCache: "ModifyCacheSubnetGroup" },
  ModifyCacheSubnetGroupResult: { ElastiCache: "ModifyCacheSubnetGroup" },
  ModifyGlobalReplicationGroupMessage: { ElastiCache: "ModifyGlobalReplicationGroup" },
  ModifyGlobalReplicationGroupResult: { ElastiCache: "ModifyGlobalReplicationGroup" },
  ModifyReplicationGroupMessage: { ElastiCache: "ModifyReplicationGroup" },
  ModifyReplicationGroupResult: { ElastiCache: "ModifyReplicationGroup" },
  ModifyReplicationGroupShardConfigurationMessage: {
    ElastiCache: "ModifyReplicationGroupShardConfiguration",
  },
  ModifyReplicationGroupShardConfigurationResult: {
    ElastiCache: "ModifyReplicationGroupShardConfiguration",
  },
  ModifyUserMessage: { ElastiCache: "ModifyUser" },
  ModifyUserGroupMessage: { ElastiCache: "ModifyUserGroup" },
  PurchaseReservedCacheNodesOfferingMessage: { ElastiCache: "PurchaseReservedCacheNodesOffering" },
  PurchaseReservedCacheNodesOfferingResult: { ElastiCache: "PurchaseReservedCacheNodesOffering" },
  RebalanceSlotsInGlobalReplicationGroupMessage: {
    ElastiCache: "RebalanceSlotsInGlobalReplicationGroup",
  },
  RebalanceSlotsInGlobalReplicationGroupResult: {
    ElastiCache: "RebalanceSlotsInGlobalReplicationGroup",
  },
  RebootCacheClusterMessage: { ElastiCache: "RebootCacheCluster" },
  RebootCacheClusterResult: { ElastiCache: "RebootCacheCluster" },
  ResetCacheParameterGroupMessage: { ElastiCache: "ResetCacheParameterGroup" },
  RevokeCacheSecurityGroupIngressMessage: { ElastiCache: "RevokeCacheSecurityGroupIngress" },
  RevokeCacheSecurityGroupIngressResult: { ElastiCache: "RevokeCacheSecurityGroupIngress" },
  StartMigrationMessage: { ElastiCache: "StartMigration" },
  TestFailoverMessage: { ElastiCache: "TestFailover" },
  TestFailoverResult: { ElastiCache: "TestFailover" },
  AbortEnvironmentUpdateMessage: { ElasticBeanstalk: "AbortEnvironmentUpdate" },
  ApplyEnvironmentManagedActionResult: { ElasticBeanstalk: "ApplyEnvironmentManagedAction" },
  AssociateEnvironmentOperationsRoleMessage: {
    ElasticBeanstalk: "AssociateEnvironmentOperationsRole",
  },
  CheckDNSAvailabilityMessage: { ElasticBeanstalk: "CheckDNSAvailability" },
  CheckDNSAvailabilityResultMessage: { ElasticBeanstalk: "CheckDNSAvailability" },
  ComposeEnvironmentsMessage: { ElasticBeanstalk: "ComposeEnvironments" },
  EnvironmentDescriptionsMessage: { ElasticBeanstalk: "DescribeEnvironments" },
  CreateApplicationMessage: { ElasticBeanstalk: "CreateApplication" },
  ApplicationDescriptionMessage: { ElasticBeanstalk: "UpdateApplication" },
  CreateApplicationVersionMessage: { ElasticBeanstalk: "CreateApplicationVersion" },
  ApplicationVersionDescriptionMessage: { ElasticBeanstalk: "UpdateApplicationVersion" },
  CreateConfigurationTemplateMessage: { ElasticBeanstalk: "CreateConfigurationTemplate" },
  ConfigurationSettingsDescription: { ElasticBeanstalk: "UpdateConfigurationTemplate" },
  CreateEnvironmentMessage: { ElasticBeanstalk: "CreateEnvironment" },
  EnvironmentDescription: { ElasticBeanstalk: "UpdateEnvironment" },
  CreatePlatformVersionResult: { ElasticBeanstalk: "CreatePlatformVersion" },
  DeleteApplicationMessage: { ElasticBeanstalk: "DeleteApplication" },
  DeleteApplicationVersionMessage: { ElasticBeanstalk: "DeleteApplicationVersion" },
  DeleteConfigurationTemplateMessage: { ElasticBeanstalk: "DeleteConfigurationTemplate" },
  DeleteEnvironmentConfigurationMessage: { ElasticBeanstalk: "DeleteEnvironmentConfiguration" },
  DeletePlatformVersionResult: { ElasticBeanstalk: "DeletePlatformVersion" },
  DescribeApplicationVersionsMessage: { ElasticBeanstalk: "DescribeApplicationVersions" },
  ApplicationVersionDescriptionsMessage: { ElasticBeanstalk: "DescribeApplicationVersions" },
  DescribeApplicationsMessage: { ElasticBeanstalk: "DescribeApplications" },
  ApplicationDescriptionsMessage: { ElasticBeanstalk: "DescribeApplications" },
  DescribeConfigurationOptionsMessage: { ElasticBeanstalk: "DescribeConfigurationOptions" },
  ConfigurationOptionsDescription: { ElasticBeanstalk: "DescribeConfigurationOptions" },
  DescribeConfigurationSettingsMessage: { ElasticBeanstalk: "DescribeConfigurationSettings" },
  ConfigurationSettingsDescriptions: { ElasticBeanstalk: "DescribeConfigurationSettings" },
  DescribeEnvironmentHealthResult: { ElasticBeanstalk: "DescribeEnvironmentHealth" },
  DescribeEnvironmentManagedActionHistoryResult: {
    ElasticBeanstalk: "DescribeEnvironmentManagedActionHistory",
  },
  DescribeEnvironmentManagedActionsResult: {
    ElasticBeanstalk: "DescribeEnvironmentManagedActions",
  },
  DescribeEnvironmentResourcesMessage: { ElasticBeanstalk: "DescribeEnvironmentResources" },
  EnvironmentResourceDescriptionsMessage: { ElasticBeanstalk: "DescribeEnvironmentResources" },
  DescribeEnvironmentsMessage: { ElasticBeanstalk: "DescribeEnvironments" },
  EventDescriptionsMessage: { ElasticBeanstalk: "DescribeEvents" },
  DescribeInstancesHealthResult: { ElasticBeanstalk: "DescribeInstancesHealth" },
  DescribePlatformVersionResult: { ElasticBeanstalk: "DescribePlatformVersion" },
  DisassociateEnvironmentOperationsRoleMessage: {
    ElasticBeanstalk: "DisassociateEnvironmentOperationsRole",
  },
  ListPlatformBranchesResult: { ElasticBeanstalk: "ListPlatformBranches" },
  ListPlatformVersionsResult: { ElasticBeanstalk: "ListPlatformVersions" },
  ResourceTagsDescriptionMessage: { ElasticBeanstalk: "ListTagsForResource" },
  RebuildEnvironmentMessage: { ElasticBeanstalk: "RebuildEnvironment" },
  RequestEnvironmentInfoMessage: { ElasticBeanstalk: "RequestEnvironmentInfo" },
  RestartAppServerMessage: { ElasticBeanstalk: "RestartAppServer" },
  RetrieveEnvironmentInfoMessage: { ElasticBeanstalk: "RetrieveEnvironmentInfo" },
  RetrieveEnvironmentInfoResultMessage: { ElasticBeanstalk: "RetrieveEnvironmentInfo" },
  SwapEnvironmentCNAMEsMessage: { ElasticBeanstalk: "SwapEnvironmentCNAMEs" },
  TerminateEnvironmentMessage: { ElasticBeanstalk: "TerminateEnvironment" },
  UpdateApplicationMessage: { ElasticBeanstalk: "UpdateApplication" },
  UpdateApplicationResourceLifecycleMessage: {
    ElasticBeanstalk: "UpdateApplicationResourceLifecycle",
  },
  ApplicationResourceLifecycleDescriptionMessage: {
    ElasticBeanstalk: "UpdateApplicationResourceLifecycle",
  },
  UpdateApplicationVersionMessage: { ElasticBeanstalk: "UpdateApplicationVersion" },
  UpdateConfigurationTemplateMessage: { ElasticBeanstalk: "UpdateConfigurationTemplate" },
  UpdateEnvironmentMessage: { ElasticBeanstalk: "UpdateEnvironment" },
  UpdateTagsForResourceMessage: { ElasticBeanstalk: "UpdateTagsForResource" },
  ValidateConfigurationSettingsMessage: { ElasticBeanstalk: "ValidateConfigurationSettings" },
  ConfigurationSettingsValidationMessages: { ElasticBeanstalk: "ValidateConfigurationSettings" },
  BatchCreateVariableResult: { FraudDetector: "BatchCreateVariable" },
  BatchGetVariableResult: { FraudDetector: "BatchGetVariable" },
  CancelBatchImportJobResult: { FraudDetector: "CancelBatchImportJob" },
  CancelBatchPredictionJobResult: { FraudDetector: "CancelBatchPredictionJob" },
  CreateBatchImportJobResult: { FraudDetector: "CreateBatchImportJob" },
  CreateBatchPredictionJobResult: { FraudDetector: "CreateBatchPredictionJob" },
  CreateDetectorVersionResult: { FraudDetector: "CreateDetectorVersion" },
  CreateListResult: { FraudDetector: "CreateList" },
  CreateModelResult: { FraudDetector: "CreateModel" },
  CreateModelVersionResult: { FraudDetector: "CreateModelVersion" },
  CreateRuleResult: { FraudDetector: "CreateRule" },
  CreateVariableResult: { FraudDetector: "CreateVariable" },
  DeleteBatchImportJobResult: { FraudDetector: "DeleteBatchImportJob" },
  DeleteBatchPredictionJobResult: { FraudDetector: "DeleteBatchPredictionJob" },
  DeleteDetectorResult: { FraudDetector: "DeleteDetector" },
  DeleteDetectorVersionResult: { FraudDetector: "DeleteDetectorVersion" },
  DeleteEntityTypeResult: { FraudDetector: "DeleteEntityType" },
  DeleteEventResult: { FraudDetector: "DeleteEvent" },
  DeleteEventTypeResult: { FraudDetector: "DeleteEventType" },
  DeleteEventsByEventTypeResult: { FraudDetector: "DeleteEventsByEventType" },
  DeleteExternalModelResult: { FraudDetector: "DeleteExternalModel" },
  DeleteLabelResult: { FraudDetector: "DeleteLabel" },
  DeleteListResult: { FraudDetector: "DeleteList" },
  DeleteModelResult: { FraudDetector: "DeleteModel" },
  DeleteModelVersionResult: { FraudDetector: "DeleteModelVersion" },
  DeleteOutcomeResult: { FraudDetector: "DeleteOutcome" },
  DeleteRuleResult: { FraudDetector: "DeleteRule" },
  DeleteVariableResult: { FraudDetector: "DeleteVariable" },
  DescribeDetectorResult: { FraudDetector: "DescribeDetector" },
  DescribeModelVersionsResult: { FraudDetector: "DescribeModelVersions" },
  GetBatchImportJobsResult: { FraudDetector: "GetBatchImportJobs" },
  GetBatchPredictionJobsResult: { FraudDetector: "GetBatchPredictionJobs" },
  GetDeleteEventsByEventTypeStatusResult: { FraudDetector: "GetDeleteEventsByEventTypeStatus" },
  GetDetectorVersionResult: { FraudDetector: "GetDetectorVersion" },
  GetDetectorsResult: { FraudDetector: "GetDetectors" },
  GetEntityTypesResult: { FraudDetector: "GetEntityTypes" },
  GetEventResult: { FraudDetector: "GetEvent" },
  GetEventPredictionResult: { FraudDetector: "GetEventPrediction" },
  GetEventPredictionMetadataResult: { FraudDetector: "GetEventPredictionMetadata" },
  GetEventTypesResult: { FraudDetector: "GetEventTypes" },
  GetExternalModelsResult: { FraudDetector: "GetExternalModels" },
  GetLabelsResult: { FraudDetector: "GetLabels" },
  GetListElementsResult: { FraudDetector: "GetListElements" },
  GetListsMetadataResult: { FraudDetector: "GetListsMetadata" },
  GetModelVersionResult: { FraudDetector: "GetModelVersion" },
  GetModelsResult: { FraudDetector: "GetModels" },
  GetOutcomesResult: { FraudDetector: "GetOutcomes" },
  GetRulesResult: { FraudDetector: "GetRules" },
  GetVariablesResult: { FraudDetector: "GetVariables" },
  ListEventPredictionsResult: { FraudDetector: "ListEventPredictions" },
  PutDetectorResult: { FraudDetector: "PutDetector" },
  PutEntityTypeResult: { FraudDetector: "PutEntityType" },
  PutEventTypeResult: { FraudDetector: "PutEventType" },
  PutExternalModelResult: { FraudDetector: "PutExternalModel" },
  PutKMSEncryptionKeyResult: { FraudDetector: "PutKMSEncryptionKey" },
  PutLabelResult: { FraudDetector: "PutLabel" },
  PutOutcomeResult: { FraudDetector: "PutOutcome" },
  SendEventResult: { FraudDetector: "SendEvent" },
  UpdateDetectorVersionResult: { FraudDetector: "UpdateDetectorVersion" },
  UpdateDetectorVersionMetadataResult: { FraudDetector: "UpdateDetectorVersionMetadata" },
  UpdateDetectorVersionStatusResult: { FraudDetector: "UpdateDetectorVersionStatus" },
  UpdateEventLabelResult: { FraudDetector: "UpdateEventLabel" },
  UpdateListResult: { FraudDetector: "UpdateList" },
  UpdateModelResult: { FraudDetector: "UpdateModel" },
  UpdateModelVersionResult: { FraudDetector: "UpdateModelVersion" },
  UpdateModelVersionStatusResult: { FraudDetector: "UpdateModelVersionStatus" },
  UpdateRuleMetadataResult: { FraudDetector: "UpdateRuleMetadata" },
  UpdateRuleVersionResult: { FraudDetector: "UpdateRuleVersion" },
  UpdateVariableResult: { FraudDetector: "UpdateVariable" },
  CreateGameResult: { GameSparks: "CreateGame" },
  CreateStageResult: { GameSparks: "CreateStage" },
  DeleteGameResult: { GameSparks: "DeleteGame" },
  DeleteStageResult: { GameSparks: "DeleteStage" },
  DisconnectPlayerResult: { GameSparks: "DisconnectPlayer" },
  ExportSnapshotResult: { GameSparks: "ExportSnapshot", Lightsail: "ExportSnapshot" },
  GetExtensionResult: { GameSparks: "GetExtension" },
  GetExtensionVersionResult: { GameSparks: "GetExtensionVersion" },
  GetGameResult: { GameSparks: "GetGame" },
  GetGameConfigurationResult: { GameSparks: "GetGameConfiguration" },
  GetGeneratedCodeJobResult: { GameSparks: "GetGeneratedCodeJob" },
  GetPlayerConnectionStatusResult: { GameSparks: "GetPlayerConnectionStatus" },
  GetSnapshotResult: { GameSparks: "GetSnapshot" },
  GetStageResult: { GameSparks: "GetStage" },
  GetStageDeploymentResult: { GameSparks: "GetStageDeployment" },
  ImportGameConfigurationResult: { GameSparks: "ImportGameConfiguration" },
  ListExtensionVersionsResult: { GameSparks: "ListExtensionVersions" },
  ListExtensionsResult: { GameSparks: "ListExtensions" },
  ListGamesResult: { GameSparks: "ListGames" },
  ListGeneratedCodeJobsResult: { GameSparks: "ListGeneratedCodeJobs" },
  ListSnapshotsResult: { GameSparks: "ListSnapshots" },
  ListStageDeploymentsResult: { GameSparks: "ListStageDeployments" },
  ListStagesResult: { GameSparks: "ListStages" },
  StartGeneratedCodeJobResult: { GameSparks: "StartGeneratedCodeJob" },
  StartStageDeploymentResult: { GameSparks: "StartStageDeployment" },
  UpdateGameResult: { GameSparks: "UpdateGame" },
  UpdateGameConfigurationResult: { GameSparks: "UpdateGameConfiguration" },
  UpdateSnapshotResult: { GameSparks: "UpdateSnapshot" },
  UpdateStageResult: { GameSparks: "UpdateStage" },
  ArchiveCreationOutput: { Glacier: "UploadArchive" },
  GlacierJobDescription: { Glacier: "DescribeJob" },
  ContactIdResponse: { GroundStation: "ReserveContact" },
  ConfigIdResponse: { GroundStation: "UpdateConfig" },
  DataflowEndpointGroupIdResponse: { GroundStation: "DeleteDataflowEndpointGroup" },
  EphemerisIdResponse: { GroundStation: "UpdateEphemeris" },
  MissionProfileIdResponse: { GroundStation: "UpdateMissionProfile" },
  BatchCreateTableRowsResult: { Honeycode: "BatchCreateTableRows" },
  BatchDeleteTableRowsResult: { Honeycode: "BatchDeleteTableRows" },
  BatchUpdateTableRowsResult: { Honeycode: "BatchUpdateTableRows" },
  BatchUpsertTableRowsResult: { Honeycode: "BatchUpsertTableRows" },
  DescribeTableDataImportJobResult: { Honeycode: "DescribeTableDataImportJob" },
  GetScreenDataResult: { Honeycode: "GetScreenData" },
  InvokeScreenAutomationResult: { Honeycode: "InvokeScreenAutomation" },
  ListTableColumnsResult: { Honeycode: "ListTableColumns" },
  ListTableRowsResult: { Honeycode: "ListTableRows" },
  ListTablesResult: { Honeycode: "ListTables" },
  QueryTableRowsResult: { Honeycode: "QueryTableRows" },
  StartTableDataImportJobResult: { Honeycode: "StartTableDataImportJob" },
  GetContextKeysForPolicyResponse: { IAM: "GetContextKeysForPrincipalPolicy" },
  SimulatePolicyResponse: { IAM: "SimulatePrincipalPolicy" },
  ListGrantsResponse: { KMS: "ListRetirableGrants" },
  QueryResult: { Kendra: "Query" },
  RetrieveResult: { Kendra: "Retrieve" },
  RescoreResult: { KendraRanking: "Rescore" },
  EnhancedMonitoringOutput: { Kinesis: "EnableEnhancedMonitoring" },
  AliasConfiguration: { Lambda: "UpdateAlias" },
  EventSourceMappingConfiguration: { Lambda: "UpdateEventSourceMapping" },
  FunctionConfiguration: { Lambda: "UpdateFunctionConfiguration" },
  FunctionEventInvokeConfig: { Lambda: "UpdateFunctionEventInvokeConfig" },
  GetLayerVersionResponse: { Lambda: "GetLayerVersionByArn" },
  InvocationRequest: { Lambda: "Invoke" },
  InvocationResponse: { Lambda: "Invoke" },
  Concurrency: { Lambda: "PutFunctionConcurrency" },
  AllocateStaticIpResult: { Lightsail: "AllocateStaticIp" },
  AttachCertificateToDistributionResult: { Lightsail: "AttachCertificateToDistribution" },
  AttachDiskResult: { Lightsail: "AttachDisk" },
  AttachInstancesToLoadBalancerResult: { Lightsail: "AttachInstancesToLoadBalancer" },
  AttachLoadBalancerTlsCertificateResult: { Lightsail: "AttachLoadBalancerTlsCertificate" },
  AttachStaticIpResult: { Lightsail: "AttachStaticIp" },
  CloseInstancePublicPortsResult: { Lightsail: "CloseInstancePublicPorts" },
  CreateBucketResult: { Lightsail: "CreateBucket", S3Control: "CreateBucket" },
  CreateBucketAccessKeyResult: { Lightsail: "CreateBucketAccessKey" },
  CreateCertificateResult: { Lightsail: "CreateCertificate" },
  CreateCloudFormationStackResult: { Lightsail: "CreateCloudFormationStack" },
  CreateContactMethodResult: { Lightsail: "CreateContactMethod" },
  CreateContainerServiceResult: { Lightsail: "CreateContainerService" },
  CreateContainerServiceDeploymentResult: { Lightsail: "CreateContainerServiceDeployment" },
  CreateContainerServiceRegistryLoginResult: { Lightsail: "CreateContainerServiceRegistryLogin" },
  CreateDiskResult: { Lightsail: "CreateDisk" },
  CreateDiskFromSnapshotResult: { Lightsail: "CreateDiskFromSnapshot" },
  CreateDiskSnapshotResult: { Lightsail: "CreateDiskSnapshot" },
  CreateDomainEntryResult: { Lightsail: "CreateDomainEntry" },
  CreateGUISessionAccessDetailsResult: { Lightsail: "CreateGUISessionAccessDetails" },
  CreateInstanceSnapshotResult: { Lightsail: "CreateInstanceSnapshot" },
  CreateInstancesResult: { Lightsail: "CreateInstances" },
  CreateInstancesFromSnapshotResult: { Lightsail: "CreateInstancesFromSnapshot" },
  CreateKeyPairResult: { Lightsail: "CreateKeyPair" },
  CreateLoadBalancerResult: { Lightsail: "CreateLoadBalancer" },
  CreateLoadBalancerTlsCertificateResult: { Lightsail: "CreateLoadBalancerTlsCertificate" },
  CreateRelationalDatabaseResult: { Lightsail: "CreateRelationalDatabase" },
  CreateRelationalDatabaseFromSnapshotResult: { Lightsail: "CreateRelationalDatabaseFromSnapshot" },
  CreateRelationalDatabaseSnapshotResult: { Lightsail: "CreateRelationalDatabaseSnapshot" },
  DeleteAlarmResult: { Lightsail: "DeleteAlarm" },
  DeleteAutoSnapshotResult: { Lightsail: "DeleteAutoSnapshot" },
  DeleteBucketResult: { Lightsail: "DeleteBucket" },
  DeleteBucketAccessKeyResult: { Lightsail: "DeleteBucketAccessKey" },
  DeleteCertificateResult: { Lightsail: "DeleteCertificate" },
  DeleteContactMethodResult: { Lightsail: "DeleteContactMethod" },
  DeleteContainerImageResult: { Lightsail: "DeleteContainerImage" },
  DeleteContainerServiceResult: { Lightsail: "DeleteContainerService" },
  DeleteDiskResult: { Lightsail: "DeleteDisk" },
  DeleteDiskSnapshotResult: { Lightsail: "DeleteDiskSnapshot" },
  DeleteDistributionResult: { Lightsail: "DeleteDistribution" },
  DeleteDomainEntryResult: { Lightsail: "DeleteDomainEntry" },
  DeleteInstanceResult: { Lightsail: "DeleteInstance" },
  DeleteInstanceSnapshotResult: { Lightsail: "DeleteInstanceSnapshot" },
  DeleteKeyPairResult: { Lightsail: "DeleteKeyPair" },
  DeleteKnownHostKeysResult: { Lightsail: "DeleteKnownHostKeys" },
  DeleteLoadBalancerResult: { Lightsail: "DeleteLoadBalancer" },
  DeleteLoadBalancerTlsCertificateResult: { Lightsail: "DeleteLoadBalancerTlsCertificate" },
  DeleteRelationalDatabaseResult: { Lightsail: "DeleteRelationalDatabase" },
  DeleteRelationalDatabaseSnapshotResult: { Lightsail: "DeleteRelationalDatabaseSnapshot" },
  DetachCertificateFromDistributionResult: { Lightsail: "DetachCertificateFromDistribution" },
  DetachDiskResult: { Lightsail: "DetachDisk" },
  DetachInstancesFromLoadBalancerResult: { Lightsail: "DetachInstancesFromLoadBalancer" },
  DetachStaticIpResult: { Lightsail: "DetachStaticIp" },
  DisableAddOnResult: { Lightsail: "DisableAddOn" },
  DownloadDefaultKeyPairResult: { Lightsail: "DownloadDefaultKeyPair" },
  EnableAddOnResult: { Lightsail: "EnableAddOn" },
  GetActiveNamesResult: { Lightsail: "GetActiveNames" },
  GetAlarmsResult: { Lightsail: "GetAlarms" },
  GetAutoSnapshotsResult: { Lightsail: "GetAutoSnapshots" },
  GetBlueprintsResult: { Lightsail: "GetBlueprints" },
  GetBucketAccessKeysResult: { Lightsail: "GetBucketAccessKeys" },
  GetBucketBundlesResult: { Lightsail: "GetBucketBundles" },
  GetBucketMetricDataResult: { Lightsail: "GetBucketMetricData" },
  GetBucketsResult: { Lightsail: "GetBuckets" },
  GetBundlesResult: { Lightsail: "GetBundles" },
  GetCertificatesResult: { Lightsail: "GetCertificates" },
  GetCloudFormationStackRecordsResult: { Lightsail: "GetCloudFormationStackRecords" },
  GetContactMethodsResult: { Lightsail: "GetContactMethods" },
  GetContainerAPIMetadataResult: { Lightsail: "GetContainerAPIMetadata" },
  GetContainerImagesResult: { Lightsail: "GetContainerImages" },
  GetContainerLogResult: { Lightsail: "GetContainerLog" },
  GetContainerServiceDeploymentsResult: { Lightsail: "GetContainerServiceDeployments" },
  GetContainerServiceMetricDataResult: { Lightsail: "GetContainerServiceMetricData" },
  GetContainerServicePowersResult: { Lightsail: "GetContainerServicePowers" },
  ContainerServicesListResult: { Lightsail: "GetContainerServices" },
  GetCostEstimateResult: { Lightsail: "GetCostEstimate" },
  GetDiskResult: { Lightsail: "GetDisk" },
  GetDiskSnapshotResult: { Lightsail: "GetDiskSnapshot" },
  GetDiskSnapshotsResult: { Lightsail: "GetDiskSnapshots" },
  GetDisksResult: { Lightsail: "GetDisks" },
  GetDistributionBundlesResult: { Lightsail: "GetDistributionBundles" },
  GetDistributionLatestCacheResetResult: { Lightsail: "GetDistributionLatestCacheReset" },
  GetDistributionMetricDataResult: { Lightsail: "GetDistributionMetricData" },
  GetDistributionsResult: { Lightsail: "GetDistributions" },
  GetDomainResult: { Lightsail: "GetDomain" },
  GetDomainsResult: { Lightsail: "GetDomains" },
  GetExportSnapshotRecordsResult: { Lightsail: "GetExportSnapshotRecords" },
  GetInstanceResult: { Lightsail: "GetInstance" },
  GetInstanceAccessDetailsResult: { Lightsail: "GetInstanceAccessDetails" },
  GetInstanceMetricDataResult: { Lightsail: "GetInstanceMetricData" },
  GetInstancePortStatesResult: { Lightsail: "GetInstancePortStates" },
  GetInstanceSnapshotResult: { Lightsail: "GetInstanceSnapshot" },
  GetInstanceSnapshotsResult: { Lightsail: "GetInstanceSnapshots" },
  GetInstanceStateResult: { Lightsail: "GetInstanceState" },
  GetInstancesResult: { Lightsail: "GetInstances" },
  GetKeyPairResult: { Lightsail: "GetKeyPair" },
  GetKeyPairsResult: { Lightsail: "GetKeyPairs" },
  GetLoadBalancerResult: { Lightsail: "GetLoadBalancer" },
  GetLoadBalancerMetricDataResult: { Lightsail: "GetLoadBalancerMetricData" },
  GetLoadBalancerTlsCertificatesResult: { Lightsail: "GetLoadBalancerTlsCertificates" },
  GetLoadBalancerTlsPoliciesResult: { Lightsail: "GetLoadBalancerTlsPolicies" },
  GetLoadBalancersResult: { Lightsail: "GetLoadBalancers" },
  GetOperationResult: { Lightsail: "GetOperation" },
  GetOperationsResult: { Lightsail: "GetOperations" },
  GetOperationsForResourceResult: { Lightsail: "GetOperationsForResource" },
  GetRegionsResult: { Lightsail: "GetRegions" },
  GetRelationalDatabaseResult: { Lightsail: "GetRelationalDatabase" },
  GetRelationalDatabaseBlueprintsResult: { Lightsail: "GetRelationalDatabaseBlueprints" },
  GetRelationalDatabaseBundlesResult: { Lightsail: "GetRelationalDatabaseBundles" },
  GetRelationalDatabaseEventsResult: { Lightsail: "GetRelationalDatabaseEvents" },
  GetRelationalDatabaseLogEventsResult: { Lightsail: "GetRelationalDatabaseLogEvents" },
  GetRelationalDatabaseLogStreamsResult: { Lightsail: "GetRelationalDatabaseLogStreams" },
  GetRelationalDatabaseMasterUserPasswordResult: {
    Lightsail: "GetRelationalDatabaseMasterUserPassword",
  },
  GetRelationalDatabaseMetricDataResult: { Lightsail: "GetRelationalDatabaseMetricData" },
  GetRelationalDatabaseParametersResult: { Lightsail: "GetRelationalDatabaseParameters" },
  GetRelationalDatabaseSnapshotResult: { Lightsail: "GetRelationalDatabaseSnapshot" },
  GetRelationalDatabaseSnapshotsResult: { Lightsail: "GetRelationalDatabaseSnapshots" },
  GetRelationalDatabasesResult: { Lightsail: "GetRelationalDatabases" },
  GetStaticIpResult: { Lightsail: "GetStaticIp" },
  GetStaticIpsResult: { Lightsail: "GetStaticIps" },
  IsVpcPeeredResult: { Lightsail: "IsVpcPeered" },
  OpenInstancePublicPortsResult: { Lightsail: "OpenInstancePublicPorts" },
  PeerVpcResult: { Lightsail: "PeerVpc" },
  PutAlarmResult: { Lightsail: "PutAlarm" },
  PutInstancePublicPortsResult: { Lightsail: "PutInstancePublicPorts" },
  RebootInstanceResult: { Lightsail: "RebootInstance" },
  RebootRelationalDatabaseResult: { Lightsail: "RebootRelationalDatabase" },
  RegisterContainerImageResult: { Lightsail: "RegisterContainerImage" },
  ReleaseStaticIpResult: { Lightsail: "ReleaseStaticIp" },
  ResetDistributionCacheResult: { Lightsail: "ResetDistributionCache" },
  SendContactMethodVerificationResult: { Lightsail: "SendContactMethodVerification" },
  SetIpAddressTypeResult: { Lightsail: "SetIpAddressType" },
  SetResourceAccessForBucketResult: { Lightsail: "SetResourceAccessForBucket" },
  StartGUISessionResult: { Lightsail: "StartGUISession" },
  StartInstanceResult: { Lightsail: "StartInstance" },
  StartRelationalDatabaseResult: { Lightsail: "StartRelationalDatabase" },
  StopGUISessionResult: { Lightsail: "StopGUISession" },
  StopInstanceResult: { Lightsail: "StopInstance" },
  StopRelationalDatabaseResult: { Lightsail: "StopRelationalDatabase" },
  TestAlarmResult: { Lightsail: "TestAlarm" },
  UnpeerVpcResult: { Lightsail: "UnpeerVpc" },
  UpdateBucketResult: { Lightsail: "UpdateBucket" },
  UpdateBucketBundleResult: { Lightsail: "UpdateBucketBundle" },
  UpdateContainerServiceResult: { Lightsail: "UpdateContainerService" },
  UpdateDistributionBundleResult: { Lightsail: "UpdateDistributionBundle" },
  UpdateDomainEntryResult: { Lightsail: "UpdateDomainEntry" },
  UpdateInstanceMetadataOptionsResult: { Lightsail: "UpdateInstanceMetadataOptions" },
  UpdateLoadBalancerAttributeResult: { Lightsail: "UpdateLoadBalancerAttribute" },
  UpdateRelationalDatabaseResult: { Lightsail: "UpdateRelationalDatabase" },
  UpdateRelationalDatabaseParametersResult: { Lightsail: "UpdateRelationalDatabaseParameters" },
  AssociateS3ResourcesResult: { Macie: "AssociateS3Resources" },
  DisassociateS3ResourcesResult: { Macie: "DisassociateS3Resources" },
  ListMemberAccountsResult: { Macie: "ListMemberAccounts" },
  ListS3ResourcesResult: { Macie: "ListS3Resources" },
  UpdateS3ResourcesResult: { Macie: "UpdateS3Resources" },
  GenerateDataSetResult: { MarketplaceCommerceAnalytics: "GenerateDataSet" },
  StartSupportDataExportResult: { MarketplaceCommerceAnalytics: "StartSupportDataExport" },
  GetEntitlementsResult: { MarketplaceEntitlementService: "GetEntitlements" },
  BatchMeterUsageResult: { MarketplaceMetering: "BatchMeterUsage" },
  MeterUsageResult: { MarketplaceMetering: "MeterUsage" },
  RegisterUsageResult: { MarketplaceMetering: "RegisterUsage" },
  ResolveCustomerResult: { MarketplaceMetering: "ResolveCustomer" },
  Wave: { Mgn: "UpdateWave" },
  LaunchConfigurationTemplate: { Mgn: "UpdateLaunchConfigurationTemplate" },
  SourceServerActionDocument: { Mgn: "PutSourceServerAction" },
  TemplateActionDocument: { Mgn: "PutTemplateAction" },
  AssociateCreatedArtifactResult: { MigrationHub: "AssociateCreatedArtifact" },
  AssociateDiscoveredResourceResult: { MigrationHub: "AssociateDiscoveredResource" },
  CreateProgressUpdateStreamResult: { MigrationHub: "CreateProgressUpdateStream" },
  DeleteProgressUpdateStreamResult: { MigrationHub: "DeleteProgressUpdateStream" },
  DescribeApplicationStateResult: { MigrationHub: "DescribeApplicationState" },
  DescribeMigrationTaskResult: { MigrationHub: "DescribeMigrationTask" },
  DisassociateCreatedArtifactResult: { MigrationHub: "DisassociateCreatedArtifact" },
  DisassociateDiscoveredResourceResult: { MigrationHub: "DisassociateDiscoveredResource" },
  ImportMigrationTaskResult: { MigrationHub: "ImportMigrationTask" },
  ListApplicationStatesResult: { MigrationHub: "ListApplicationStates" },
  ListCreatedArtifactsResult: { MigrationHub: "ListCreatedArtifacts" },
  ListDiscoveredResourcesResult: { MigrationHub: "ListDiscoveredResources" },
  ListMigrationTasksResult: { MigrationHub: "ListMigrationTasks" },
  ListProgressUpdateStreamsResult: { MigrationHub: "ListProgressUpdateStreams" },
  NotifyApplicationStateResult: { MigrationHub: "NotifyApplicationState" },
  NotifyMigrationTaskStateResult: { MigrationHub: "NotifyMigrationTaskState" },
  PutResourceAttributesResult: { MigrationHub: "PutResourceAttributes" },
  CreateHomeRegionControlResult: { MigrationHubConfig: "CreateHomeRegionControl" },
  DescribeHomeRegionControlsResult: { MigrationHubConfig: "DescribeHomeRegionControls" },
  GetHomeRegionResult: { MigrationHubConfig: "GetHomeRegion" },
  CreateMigrationWorkflowRequest: { MigrationHubOrchestrator: "CreateWorkflow" },
  CreateMigrationWorkflowResponse: { MigrationHubOrchestrator: "CreateWorkflow" },
  DeleteMigrationWorkflowRequest: { MigrationHubOrchestrator: "DeleteWorkflow" },
  DeleteMigrationWorkflowResponse: { MigrationHubOrchestrator: "DeleteWorkflow" },
  GetMigrationWorkflowTemplateRequest: { MigrationHubOrchestrator: "GetTemplate" },
  GetMigrationWorkflowTemplateResponse: { MigrationHubOrchestrator: "GetTemplate" },
  GetMigrationWorkflowRequest: { MigrationHubOrchestrator: "GetWorkflow" },
  GetMigrationWorkflowResponse: { MigrationHubOrchestrator: "GetWorkflow" },
  ListMigrationWorkflowTemplatesRequest: { MigrationHubOrchestrator: "ListTemplates" },
  ListMigrationWorkflowTemplatesResponse: { MigrationHubOrchestrator: "ListTemplates" },
  ListMigrationWorkflowsRequest: { MigrationHubOrchestrator: "ListWorkflows" },
  ListMigrationWorkflowsResponse: { MigrationHubOrchestrator: "ListWorkflows" },
  StartMigrationWorkflowRequest: { MigrationHubOrchestrator: "StartWorkflow" },
  StartMigrationWorkflowResponse: { MigrationHubOrchestrator: "StartWorkflow" },
  StopMigrationWorkflowRequest: { MigrationHubOrchestrator: "StopWorkflow" },
  StopMigrationWorkflowResponse: { MigrationHubOrchestrator: "StopWorkflow" },
  UpdateMigrationWorkflowRequest: { MigrationHubOrchestrator: "UpdateWorkflow" },
  UpdateMigrationWorkflowResponse: { MigrationHubOrchestrator: "UpdateWorkflow" },
  DescribeBundleResult: { Mobile: "DescribeBundle" },
  ExportBundleResult: { Mobile: "ExportBundle" },
  ExportProjectResult: { Mobile: "ExportProject" },
  ListBundlesResult: { Mobile: "ListBundles" },
  AddRoleToDBClusterMessage: { Neptune: "AddRoleToDBCluster", RDS: "AddRoleToDBCluster" },
  CopyDBParameterGroupMessage: { Neptune: "CopyDBParameterGroup", RDS: "CopyDBParameterGroup" },
  CopyDBParameterGroupResult: { Neptune: "CopyDBParameterGroup", RDS: "CopyDBParameterGroup" },
  CreateDBClusterEndpointMessage: {
    Neptune: "CreateDBClusterEndpoint",
    RDS: "CreateDBClusterEndpoint",
  },
  CreateDBParameterGroupMessage: {
    Neptune: "CreateDBParameterGroup",
    RDS: "CreateDBParameterGroup",
  },
  CreateDBParameterGroupResult: {
    Neptune: "CreateDBParameterGroup",
    RDS: "CreateDBParameterGroup",
  },
  DeleteDBClusterEndpointMessage: {
    Neptune: "DeleteDBClusterEndpoint",
    RDS: "DeleteDBClusterEndpoint",
  },
  DeleteDBParameterGroupMessage: {
    Neptune: "DeleteDBParameterGroup",
    RDS: "DeleteDBParameterGroup",
  },
  DescribeDBClusterEndpointsMessage: {
    Neptune: "DescribeDBClusterEndpoints",
    RDS: "DescribeDBClusterEndpoints",
  },
  DBClusterEndpointMessage: {
    Neptune: "DescribeDBClusterEndpoints",
    RDS: "DescribeDBClusterEndpoints",
  },
  DescribeDBParameterGroupsMessage: {
    Neptune: "DescribeDBParameterGroups",
    RDS: "DescribeDBParameterGroups",
  },
  DBParameterGroupsMessage: {
    Neptune: "DescribeDBParameterGroups",
    RDS: "DescribeDBParameterGroups",
  },
  DescribeDBParametersMessage: { Neptune: "DescribeDBParameters", RDS: "DescribeDBParameters" },
  DBParameterGroupDetails: { Neptune: "DescribeDBParameters", RDS: "DescribeDBParameters" },
  DescribeValidDBInstanceModificationsMessage: {
    Neptune: "DescribeValidDBInstanceModifications",
    RDS: "DescribeValidDBInstanceModifications",
  },
  DescribeValidDBInstanceModificationsResult: {
    Neptune: "DescribeValidDBInstanceModifications",
    RDS: "DescribeValidDBInstanceModifications",
  },
  FailoverGlobalClusterMessage: { Neptune: "FailoverGlobalCluster", RDS: "FailoverGlobalCluster" },
  FailoverGlobalClusterResult: { Neptune: "FailoverGlobalCluster", RDS: "FailoverGlobalCluster" },
  ModifyDBClusterEndpointMessage: {
    Neptune: "ModifyDBClusterEndpoint",
    RDS: "ModifyDBClusterEndpoint",
  },
  ModifyDBParameterGroupMessage: {
    Neptune: "ModifyDBParameterGroup",
    RDS: "ModifyDBParameterGroup",
  },
  DBParameterGroupNameMessage: { Neptune: "ResetDBParameterGroup", RDS: "ResetDBParameterGroup" },
  PromoteReadReplicaDBClusterMessage: {
    Neptune: "PromoteReadReplicaDBCluster",
    RDS: "PromoteReadReplicaDBCluster",
  },
  PromoteReadReplicaDBClusterResult: {
    Neptune: "PromoteReadReplicaDBCluster",
    RDS: "PromoteReadReplicaDBCluster",
  },
  RemoveRoleFromDBClusterMessage: {
    Neptune: "RemoveRoleFromDBCluster",
    RDS: "RemoveRoleFromDBCluster",
  },
  ResetDBParameterGroupMessage: { Neptune: "ResetDBParameterGroup", RDS: "ResetDBParameterGroup" },
  CancelAnnotationImportRequest: { Omics: "CancelAnnotationImportJob" },
  CancelAnnotationImportResponse: { Omics: "CancelAnnotationImportJob" },
  CancelVariantImportRequest: { Omics: "CancelVariantImportJob" },
  CancelVariantImportResponse: { Omics: "CancelVariantImportJob" },
  GetAnnotationImportRequest: { Omics: "GetAnnotationImportJob" },
  GetAnnotationImportResponse: { Omics: "GetAnnotationImportJob" },
  GetVariantImportRequest: { Omics: "GetVariantImportJob" },
  GetVariantImportResponse: { Omics: "GetVariantImportJob" },
  StartAnnotationImportRequest: { Omics: "StartAnnotationImportJob" },
  StartAnnotationImportResponse: { Omics: "StartAnnotationImportJob" },
  StartVariantImportRequest: { Omics: "StartVariantImportJob" },
  StartVariantImportResponse: { Omics: "StartVariantImportJob" },
  CloneStackResult: { OpsWorks: "CloneStack" },
  CreateInstanceResult: { OpsWorks: "CreateInstance" },
  CreateLayerResult: { OpsWorks: "CreateLayer" },
  DescribeAgentVersionsResult: { OpsWorks: "DescribeAgentVersions" },
  DescribeAppsResult: { OpsWorks: "DescribeApps" },
  DescribeCommandsResult: { OpsWorks: "DescribeCommands" },
  DescribeDeploymentsResult: { OpsWorks: "DescribeDeployments" },
  DescribeEcsClustersResult: { OpsWorks: "DescribeEcsClusters" },
  DescribeElasticIpsResult: { OpsWorks: "DescribeElasticIps" },
  DescribeElasticLoadBalancersResult: { OpsWorks: "DescribeElasticLoadBalancers" },
  DescribeLayersResult: { OpsWorks: "DescribeLayers" },
  DescribeLoadBasedAutoScalingResult: { OpsWorks: "DescribeLoadBasedAutoScaling" },
  DescribePermissionsResult: { OpsWorks: "DescribePermissions" },
  DescribeRaidArraysResult: { OpsWorks: "DescribeRaidArrays" },
  DescribeRdsDbInstancesResult: { OpsWorks: "DescribeRdsDbInstances" },
  DescribeServiceErrorsResult: { OpsWorks: "DescribeServiceErrors" },
  DescribeStackProvisioningParametersResult: { OpsWorks: "DescribeStackProvisioningParameters" },
  DescribeStackSummaryResult: { OpsWorks: "DescribeStackSummary" },
  DescribeTimeBasedAutoScalingResult: { OpsWorks: "DescribeTimeBasedAutoScaling" },
  DescribeUserProfilesResult: { OpsWorks: "DescribeUserProfiles" },
  GetHostnameSuggestionResult: { OpsWorks: "GetHostnameSuggestion" },
  GrantAccessResult: { OpsWorks: "GrantAccess" },
  ListTagsResult: { OpsWorks: "ListTags" },
  RegisterEcsClusterResult: { OpsWorks: "RegisterEcsCluster" },
  RegisterElasticIpResult: { OpsWorks: "RegisterElasticIp" },
  RegisterInstanceResult: { OpsWorks: "RegisterInstance" },
  RegisterVolumeResult: { OpsWorks: "RegisterVolume" },
  AssociateOriginationIdentityResult: { PinpointSMSVoiceV2: "AssociateOriginationIdentity" },
  CreateConfigurationSetResult: { PinpointSMSVoiceV2: "CreateConfigurationSet" },
  CreateEventDestinationResult: { PinpointSMSVoiceV2: "CreateEventDestination" },
  CreateOptOutListResult: { PinpointSMSVoiceV2: "CreateOptOutList" },
  CreatePoolResult: { PinpointSMSVoiceV2: "CreatePool" },
  DeleteConfigurationSetResult: { PinpointSMSVoiceV2: "DeleteConfigurationSet" },
  DeleteDefaultMessageTypeResult: { PinpointSMSVoiceV2: "DeleteDefaultMessageType" },
  DeleteDefaultSenderIdResult: { PinpointSMSVoiceV2: "DeleteDefaultSenderId" },
  DeleteEventDestinationResult: { PinpointSMSVoiceV2: "DeleteEventDestination" },
  DeleteKeywordResult: { PinpointSMSVoiceV2: "DeleteKeyword" },
  DeleteOptOutListResult: { PinpointSMSVoiceV2: "DeleteOptOutList" },
  DeleteOptedOutNumberResult: { PinpointSMSVoiceV2: "DeleteOptedOutNumber" },
  DeletePoolResult: { PinpointSMSVoiceV2: "DeletePool" },
  DeleteTextMessageSpendLimitOverrideResult: {
    PinpointSMSVoiceV2: "DeleteTextMessageSpendLimitOverride",
  },
  DeleteVoiceMessageSpendLimitOverrideResult: {
    PinpointSMSVoiceV2: "DeleteVoiceMessageSpendLimitOverride",
  },
  DescribeAccountLimitsResult: { PinpointSMSVoiceV2: "DescribeAccountLimits" },
  DescribeConfigurationSetsResult: { PinpointSMSVoiceV2: "DescribeConfigurationSets" },
  DescribeKeywordsResult: { PinpointSMSVoiceV2: "DescribeKeywords" },
  DescribeOptOutListsResult: { PinpointSMSVoiceV2: "DescribeOptOutLists" },
  DescribeOptedOutNumbersResult: { PinpointSMSVoiceV2: "DescribeOptedOutNumbers" },
  DescribePhoneNumbersResult: { PinpointSMSVoiceV2: "DescribePhoneNumbers" },
  DescribePoolsResult: { PinpointSMSVoiceV2: "DescribePools" },
  DescribeSenderIdsResult: { PinpointSMSVoiceV2: "DescribeSenderIds" },
  DescribeSpendLimitsResult: { PinpointSMSVoiceV2: "DescribeSpendLimits" },
  DisassociateOriginationIdentityResult: { PinpointSMSVoiceV2: "DisassociateOriginationIdentity" },
  ListPoolOriginationIdentitiesResult: { PinpointSMSVoiceV2: "ListPoolOriginationIdentities" },
  PutKeywordResult: { PinpointSMSVoiceV2: "PutKeyword" },
  PutOptedOutNumberResult: { PinpointSMSVoiceV2: "PutOptedOutNumber" },
  ReleasePhoneNumberResult: { PinpointSMSVoiceV2: "ReleasePhoneNumber" },
  RequestPhoneNumberResult: { PinpointSMSVoiceV2: "RequestPhoneNumber" },
  SendTextMessageResult: { PinpointSMSVoiceV2: "SendTextMessage" },
  SendVoiceMessageResult: { PinpointSMSVoiceV2: "SendVoiceMessage" },
  SetDefaultMessageTypeResult: { PinpointSMSVoiceV2: "SetDefaultMessageType" },
  SetDefaultSenderIdResult: { PinpointSMSVoiceV2: "SetDefaultSenderId" },
  SetTextMessageSpendLimitOverrideResult: {
    PinpointSMSVoiceV2: "SetTextMessageSpendLimitOverride",
  },
  SetVoiceMessageSpendLimitOverrideResult: {
    PinpointSMSVoiceV2: "SetVoiceMessageSpendLimitOverride",
  },
  UpdateEventDestinationResult: { PinpointSMSVoiceV2: "UpdateEventDestination" },
  UpdatePhoneNumberResult: { PinpointSMSVoiceV2: "UpdatePhoneNumber" },
  UpdatePoolResult: { PinpointSMSVoiceV2: "UpdatePool" },
  UpdateNetworkSiteResponse: { PrivateNetworks: "UpdateNetworkSitePlan" },
  SendCommandResult: { QLDBSession: "SendCommand", SSM: "SendCommand" },
  AddRoleToDBInstanceMessage: { RDS: "AddRoleToDBInstance" },
  AuthorizeDBSecurityGroupIngressMessage: { RDS: "AuthorizeDBSecurityGroupIngress" },
  AuthorizeDBSecurityGroupIngressResult: { RDS: "AuthorizeDBSecurityGroupIngress" },
  BacktrackDBClusterMessage: { RDS: "BacktrackDBCluster" },
  DBClusterBacktrack: { RDS: "BacktrackDBCluster" },
  CancelExportTaskMessage: { RDS: "CancelExportTask" },
  ExportTask: { RDS: "StartExportTask" },
  CopyDBSnapshotMessage: { RDS: "CopyDBSnapshot" },
  CopyDBSnapshotResult: { RDS: "CopyDBSnapshot" },
  CopyOptionGroupMessage: { RDS: "CopyOptionGroup" },
  CopyOptionGroupResult: { RDS: "CopyOptionGroup" },
  CreateCustomDBEngineVersionMessage: { RDS: "CreateCustomDBEngineVersion" },
  DBEngineVersion: { RDS: "ModifyCustomDBEngineVersion" },
  DBClusterEndpoint: { RDS: "ModifyDBClusterEndpoint" },
  CreateDBInstanceReadReplicaMessage: { RDS: "CreateDBInstanceReadReplica" },
  CreateDBInstanceReadReplicaResult: { RDS: "CreateDBInstanceReadReplica" },
  CreateDBSecurityGroupMessage: { RDS: "CreateDBSecurityGroup" },
  CreateDBSecurityGroupResult: { RDS: "CreateDBSecurityGroup" },
  CreateDBSnapshotMessage: { RDS: "CreateDBSnapshot" },
  CreateDBSnapshotResult: { RDS: "CreateDBSnapshot" },
  CreateOptionGroupMessage: { RDS: "CreateOptionGroup" },
  CreateOptionGroupResult: { RDS: "CreateOptionGroup" },
  DeleteCustomDBEngineVersionMessage: { RDS: "DeleteCustomDBEngineVersion" },
  DeleteDBInstanceAutomatedBackupMessage: { RDS: "DeleteDBInstanceAutomatedBackup" },
  DeleteDBInstanceAutomatedBackupResult: { RDS: "DeleteDBInstanceAutomatedBackup" },
  DeleteDBSecurityGroupMessage: { RDS: "DeleteDBSecurityGroup" },
  DeleteDBSnapshotMessage: { RDS: "DeleteDBSnapshot" },
  DeleteDBSnapshotResult: { RDS: "DeleteDBSnapshot" },
  DeleteOptionGroupMessage: { RDS: "DeleteOptionGroup" },
  AccountAttributesMessage: { RDS: "DescribeAccountAttributes" },
  DescribeDBClusterBacktracksMessage: { RDS: "DescribeDBClusterBacktracks" },
  DBClusterBacktrackMessage: { RDS: "DescribeDBClusterBacktracks" },
  DescribeDBInstanceAutomatedBackupsMessage: { RDS: "DescribeDBInstanceAutomatedBackups" },
  DBInstanceAutomatedBackupMessage: { RDS: "DescribeDBInstanceAutomatedBackups" },
  DescribeDBLogFilesMessage: { RDS: "DescribeDBLogFiles" },
  DescribeDBSecurityGroupsMessage: { RDS: "DescribeDBSecurityGroups" },
  DBSecurityGroupMessage: { RDS: "DescribeDBSecurityGroups" },
  DescribeDBSnapshotAttributesMessage: { RDS: "DescribeDBSnapshotAttributes" },
  DescribeDBSnapshotAttributesResult: { RDS: "DescribeDBSnapshotAttributes" },
  DescribeDBSnapshotsMessage: { RDS: "DescribeDBSnapshots" },
  DBSnapshotMessage: { RDS: "DescribeDBSnapshots" },
  DescribeExportTasksMessage: { RDS: "DescribeExportTasks" },
  ExportTasksMessage: { RDS: "DescribeExportTasks" },
  DescribeOptionGroupOptionsMessage: { RDS: "DescribeOptionGroupOptions" },
  OptionGroupOptionsMessage: { RDS: "DescribeOptionGroupOptions" },
  DescribeOptionGroupsMessage: { RDS: "DescribeOptionGroups" },
  OptionGroups: { RDS: "DescribeOptionGroups" },
  DescribeReservedDBInstancesMessage: { RDS: "DescribeReservedDBInstances" },
  ReservedDBInstanceMessage: { RDS: "DescribeReservedDBInstances" },
  DescribeReservedDBInstancesOfferingsMessage: { RDS: "DescribeReservedDBInstancesOfferings" },
  ReservedDBInstancesOfferingMessage: { RDS: "DescribeReservedDBInstancesOfferings" },
  DescribeSourceRegionsMessage: { RDS: "DescribeSourceRegions" },
  SourceRegionMessage: { RDS: "DescribeSourceRegions" },
  DownloadDBLogFilePortionMessage: { RDS: "DownloadDBLogFilePortion" },
  DownloadDBLogFilePortionDetails: { RDS: "DownloadDBLogFilePortion" },
  ModifyCertificatesMessage: { RDS: "ModifyCertificates" },
  ModifyCertificatesResult: { RDS: "ModifyCertificates" },
  ModifyCurrentDBClusterCapacityMessage: { RDS: "ModifyCurrentDBClusterCapacity" },
  DBClusterCapacityInfo: { RDS: "ModifyCurrentDBClusterCapacity" },
  ModifyCustomDBEngineVersionMessage: { RDS: "ModifyCustomDBEngineVersion" },
  ModifyDBSnapshotMessage: { RDS: "ModifyDBSnapshot" },
  ModifyDBSnapshotResult: { RDS: "ModifyDBSnapshot" },
  ModifyDBSnapshotAttributeMessage: { RDS: "ModifyDBSnapshotAttribute" },
  ModifyDBSnapshotAttributeResult: { RDS: "ModifyDBSnapshotAttribute" },
  ModifyOptionGroupMessage: { RDS: "ModifyOptionGroup" },
  ModifyOptionGroupResult: { RDS: "ModifyOptionGroup" },
  PromoteReadReplicaMessage: { RDS: "PromoteReadReplica" },
  PromoteReadReplicaResult: { RDS: "PromoteReadReplica" },
  PurchaseReservedDBInstancesOfferingMessage: { RDS: "PurchaseReservedDBInstancesOffering" },
  PurchaseReservedDBInstancesOfferingResult: { RDS: "PurchaseReservedDBInstancesOffering" },
  RebootDBClusterMessage: { RDS: "RebootDBCluster" },
  RebootDBClusterResult: { RDS: "RebootDBCluster" },
  RemoveRoleFromDBInstanceMessage: { RDS: "RemoveRoleFromDBInstance" },
  RestoreDBClusterFromS3Message: { RDS: "RestoreDBClusterFromS3" },
  RestoreDBClusterFromS3Result: { RDS: "RestoreDBClusterFromS3" },
  RestoreDBInstanceFromDBSnapshotMessage: { RDS: "RestoreDBInstanceFromDBSnapshot" },
  RestoreDBInstanceFromDBSnapshotResult: { RDS: "RestoreDBInstanceFromDBSnapshot" },
  RestoreDBInstanceFromS3Message: { RDS: "RestoreDBInstanceFromS3" },
  RestoreDBInstanceFromS3Result: { RDS: "RestoreDBInstanceFromS3" },
  RestoreDBInstanceToPointInTimeMessage: { RDS: "RestoreDBInstanceToPointInTime" },
  RestoreDBInstanceToPointInTimeResult: { RDS: "RestoreDBInstanceToPointInTime" },
  RevokeDBSecurityGroupIngressMessage: { RDS: "RevokeDBSecurityGroupIngress" },
  RevokeDBSecurityGroupIngressResult: { RDS: "RevokeDBSecurityGroupIngress" },
  StartDBInstanceMessage: { RDS: "StartDBInstance" },
  StartDBInstanceResult: { RDS: "StartDBInstance" },
  StartDBInstanceAutomatedBackupsReplicationMessage: {
    RDS: "StartDBInstanceAutomatedBackupsReplication",
  },
  StartDBInstanceAutomatedBackupsReplicationResult: {
    RDS: "StartDBInstanceAutomatedBackupsReplication",
  },
  StartExportTaskMessage: { RDS: "StartExportTask" },
  StopDBInstanceMessage: { RDS: "StopDBInstance" },
  StopDBInstanceResult: { RDS: "StopDBInstance" },
  StopDBInstanceAutomatedBackupsReplicationMessage: {
    RDS: "StopDBInstanceAutomatedBackupsReplication",
  },
  StopDBInstanceAutomatedBackupsReplicationResult: {
    RDS: "StopDBInstanceAutomatedBackupsReplication",
  },
  SwitchoverReadReplicaMessage: { RDS: "SwitchoverReadReplica" },
  SwitchoverReadReplicaResult: { RDS: "SwitchoverReadReplica" },
  AcceptReservedNodeExchangeInputMessage: { Redshift: "AcceptReservedNodeExchange" },
  AcceptReservedNodeExchangeOutputMessage: { Redshift: "AcceptReservedNodeExchange" },
  PartnerIntegrationInputMessage: { Redshift: "DeletePartner" },
  PartnerIntegrationOutputMessage: { Redshift: "UpdatePartnerStatus" },
  AssociateDataShareConsumerMessage: { Redshift: "AssociateDataShareConsumer" },
  DataShare: { Redshift: "RejectDataShare" },
  AuthorizeClusterSecurityGroupIngressMessage: { Redshift: "AuthorizeClusterSecurityGroupIngress" },
  AuthorizeClusterSecurityGroupIngressResult: { Redshift: "AuthorizeClusterSecurityGroupIngress" },
  AuthorizeDataShareMessage: { Redshift: "AuthorizeDataShare" },
  AuthorizeEndpointAccessMessage: { Redshift: "AuthorizeEndpointAccess" },
  EndpointAuthorization: { Redshift: "RevokeEndpointAccess" },
  AuthorizeSnapshotAccessMessage: { Redshift: "AuthorizeSnapshotAccess" },
  AuthorizeSnapshotAccessResult: { Redshift: "AuthorizeSnapshotAccess" },
  BatchDeleteClusterSnapshotsResult: { Redshift: "BatchDeleteClusterSnapshots" },
  BatchModifyClusterSnapshotsMessage: { Redshift: "BatchModifyClusterSnapshots" },
  BatchModifyClusterSnapshotsOutputMessage: { Redshift: "BatchModifyClusterSnapshots" },
  CancelResizeMessage: { Redshift: "CancelResize" },
  ResizeProgressMessage: { Redshift: "DescribeResize" },
  CopyClusterSnapshotMessage: { Redshift: "CopyClusterSnapshot" },
  CopyClusterSnapshotResult: { Redshift: "CopyClusterSnapshot" },
  CreateAuthenticationProfileMessage: { Redshift: "CreateAuthenticationProfile" },
  CreateAuthenticationProfileResult: { Redshift: "CreateAuthenticationProfile" },
  CreateClusterMessage: { Redshift: "CreateCluster" },
  CreateClusterResult: { Redshift: "CreateCluster", Snowball: "CreateCluster" },
  CreateClusterParameterGroupMessage: { Redshift: "CreateClusterParameterGroup" },
  CreateClusterParameterGroupResult: { Redshift: "CreateClusterParameterGroup" },
  CreateClusterSecurityGroupMessage: { Redshift: "CreateClusterSecurityGroup" },
  CreateClusterSecurityGroupResult: { Redshift: "CreateClusterSecurityGroup" },
  CreateClusterSnapshotMessage: { Redshift: "CreateClusterSnapshot" },
  CreateClusterSnapshotResult: { Redshift: "CreateClusterSnapshot" },
  CreateClusterSubnetGroupMessage: { Redshift: "CreateClusterSubnetGroup" },
  CreateClusterSubnetGroupResult: { Redshift: "CreateClusterSubnetGroup" },
  CreateCustomDomainAssociationMessage: { Redshift: "CreateCustomDomainAssociation" },
  CreateCustomDomainAssociationResult: { Redshift: "CreateCustomDomainAssociation" },
  CreateEndpointAccessMessage: { Redshift: "CreateEndpointAccess" },
  EndpointAccess: { Redshift: "ModifyEndpointAccess" },
  CreateHsmClientCertificateMessage: { Redshift: "CreateHsmClientCertificate" },
  CreateHsmClientCertificateResult: { Redshift: "CreateHsmClientCertificate" },
  CreateHsmConfigurationMessage: { Redshift: "CreateHsmConfiguration" },
  CreateHsmConfigurationResult: { Redshift: "CreateHsmConfiguration" },
  CreateScheduledActionMessage: { Redshift: "CreateScheduledAction" },
  ScheduledAction: { Redshift: "ModifyScheduledAction" },
  CreateSnapshotCopyGrantMessage: { Redshift: "CreateSnapshotCopyGrant" },
  CreateSnapshotCopyGrantResult: { Redshift: "CreateSnapshotCopyGrant" },
  CreateSnapshotScheduleMessage: { Redshift: "CreateSnapshotSchedule" },
  SnapshotSchedule: { Redshift: "ModifySnapshotSchedule" },
  CreateTagsMessage: { Redshift: "CreateTags" },
  CreateUsageLimitMessage: { Redshift: "CreateUsageLimit" },
  UsageLimit: { Redshift: "ModifyUsageLimit" },
  DeauthorizeDataShareMessage: { Redshift: "DeauthorizeDataShare" },
  DeleteAuthenticationProfileMessage: { Redshift: "DeleteAuthenticationProfile" },
  DeleteAuthenticationProfileResult: { Redshift: "DeleteAuthenticationProfile" },
  DeleteClusterMessage: { Redshift: "DeleteCluster" },
  DeleteClusterResult: { Redshift: "DeleteCluster" },
  DeleteClusterParameterGroupMessage: { Redshift: "DeleteClusterParameterGroup" },
  DeleteClusterSecurityGroupMessage: { Redshift: "DeleteClusterSecurityGroup" },
  DeleteClusterSnapshotMessage: { Redshift: "DeleteClusterSnapshot" },
  DeleteClusterSnapshotResult: { Redshift: "DeleteClusterSnapshot" },
  DeleteClusterSubnetGroupMessage: { Redshift: "DeleteClusterSubnetGroup" },
  DeleteCustomDomainAssociationMessage: { Redshift: "DeleteCustomDomainAssociation" },
  DeleteEndpointAccessMessage: { Redshift: "DeleteEndpointAccess" },
  DeleteHsmClientCertificateMessage: { Redshift: "DeleteHsmClientCertificate" },
  DeleteHsmConfigurationMessage: { Redshift: "DeleteHsmConfiguration" },
  DeleteScheduledActionMessage: { Redshift: "DeleteScheduledAction" },
  DeleteSnapshotCopyGrantMessage: { Redshift: "DeleteSnapshotCopyGrant" },
  DeleteSnapshotScheduleMessage: { Redshift: "DeleteSnapshotSchedule" },
  DeleteTagsMessage: { Redshift: "DeleteTags" },
  DeleteUsageLimitMessage: { Redshift: "DeleteUsageLimit" },
  AccountAttributeList: { Redshift: "DescribeAccountAttributes" },
  DescribeAuthenticationProfilesMessage: { Redshift: "DescribeAuthenticationProfiles" },
  DescribeAuthenticationProfilesResult: { Redshift: "DescribeAuthenticationProfiles" },
  DescribeClusterDbRevisionsMessage: { Redshift: "DescribeClusterDbRevisions" },
  ClusterDbRevisionsMessage: { Redshift: "DescribeClusterDbRevisions" },
  DescribeClusterParameterGroupsMessage: { Redshift: "DescribeClusterParameterGroups" },
  ClusterParameterGroupsMessage: { Redshift: "DescribeClusterParameterGroups" },
  DescribeClusterParametersMessage: { Redshift: "DescribeClusterParameters" },
  ClusterParameterGroupDetails: { Redshift: "DescribeClusterParameters" },
  DescribeClusterSecurityGroupsMessage: { Redshift: "DescribeClusterSecurityGroups" },
  ClusterSecurityGroupMessage: { Redshift: "DescribeClusterSecurityGroups" },
  DescribeClusterSnapshotsMessage: { Redshift: "DescribeClusterSnapshots" },
  SnapshotMessage: { Redshift: "DescribeClusterSnapshots" },
  DescribeClusterSubnetGroupsMessage: { Redshift: "DescribeClusterSubnetGroups" },
  ClusterSubnetGroupMessage: { Redshift: "DescribeClusterSubnetGroups" },
  DescribeClusterTracksMessage: { Redshift: "DescribeClusterTracks" },
  TrackListMessage: { Redshift: "DescribeClusterTracks" },
  DescribeClusterVersionsMessage: { Redshift: "DescribeClusterVersions" },
  ClusterVersionsMessage: { Redshift: "DescribeClusterVersions" },
  DescribeClustersMessage: { Redshift: "DescribeClusters" },
  ClustersMessage: { Redshift: "DescribeClusters" },
  DescribeCustomDomainAssociationsMessage: { Redshift: "DescribeCustomDomainAssociations" },
  CustomDomainAssociationsMessage: { Redshift: "DescribeCustomDomainAssociations" },
  DescribeDataSharesMessage: { Redshift: "DescribeDataShares" },
  DescribeDataSharesResult: { Redshift: "DescribeDataShares" },
  DescribeDataSharesForConsumerMessage: { Redshift: "DescribeDataSharesForConsumer" },
  DescribeDataSharesForConsumerResult: { Redshift: "DescribeDataSharesForConsumer" },
  DescribeDataSharesForProducerMessage: { Redshift: "DescribeDataSharesForProducer" },
  DescribeDataSharesForProducerResult: { Redshift: "DescribeDataSharesForProducer" },
  DescribeDefaultClusterParametersMessage: { Redshift: "DescribeDefaultClusterParameters" },
  DescribeDefaultClusterParametersResult: { Redshift: "DescribeDefaultClusterParameters" },
  DescribeEndpointAccessMessage: { Redshift: "DescribeEndpointAccess" },
  EndpointAccessList: { Redshift: "DescribeEndpointAccess" },
  DescribeEndpointAuthorizationMessage: { Redshift: "DescribeEndpointAuthorization" },
  EndpointAuthorizationList: { Redshift: "DescribeEndpointAuthorization" },
  DescribeHsmClientCertificatesMessage: { Redshift: "DescribeHsmClientCertificates" },
  HsmClientCertificateMessage: { Redshift: "DescribeHsmClientCertificates" },
  DescribeHsmConfigurationsMessage: { Redshift: "DescribeHsmConfigurations" },
  HsmConfigurationMessage: { Redshift: "DescribeHsmConfigurations" },
  DescribeLoggingStatusMessage: { Redshift: "DescribeLoggingStatus" },
  LoggingStatus: { Redshift: "EnableLogging" },
  DescribeNodeConfigurationOptionsMessage: { Redshift: "DescribeNodeConfigurationOptions" },
  NodeConfigurationOptionsMessage: { Redshift: "DescribeNodeConfigurationOptions" },
  DescribeOrderableClusterOptionsMessage: { Redshift: "DescribeOrderableClusterOptions" },
  OrderableClusterOptionsMessage: { Redshift: "DescribeOrderableClusterOptions" },
  DescribePartnersInputMessage: { Redshift: "DescribePartners" },
  DescribePartnersOutputMessage: { Redshift: "DescribePartners" },
  DescribeReservedNodeExchangeStatusInputMessage: {
    Redshift: "DescribeReservedNodeExchangeStatus",
  },
  DescribeReservedNodeExchangeStatusOutputMessage: {
    Redshift: "DescribeReservedNodeExchangeStatus",
  },
  DescribeReservedNodeOfferingsMessage: { Redshift: "DescribeReservedNodeOfferings" },
  ReservedNodeOfferingsMessage: { Redshift: "DescribeReservedNodeOfferings" },
  DescribeReservedNodesMessage: { Redshift: "DescribeReservedNodes" },
  ReservedNodesMessage: { Redshift: "DescribeReservedNodes" },
  DescribeResizeMessage: { Redshift: "DescribeResize" },
  DescribeScheduledActionsMessage: { Redshift: "DescribeScheduledActions" },
  ScheduledActionsMessage: { Redshift: "DescribeScheduledActions" },
  DescribeSnapshotCopyGrantsMessage: { Redshift: "DescribeSnapshotCopyGrants" },
  SnapshotCopyGrantMessage: { Redshift: "DescribeSnapshotCopyGrants" },
  DescribeSnapshotSchedulesMessage: { Redshift: "DescribeSnapshotSchedules" },
  DescribeSnapshotSchedulesOutputMessage: { Redshift: "DescribeSnapshotSchedules" },
  DescribeTableRestoreStatusMessage: { Redshift: "DescribeTableRestoreStatus" },
  TableRestoreStatusMessage: { Redshift: "DescribeTableRestoreStatus" },
  DescribeTagsMessage: { Redshift: "DescribeTags" },
  TaggedResourceListMessage: { Redshift: "DescribeTags" },
  DescribeUsageLimitsMessage: { Redshift: "DescribeUsageLimits" },
  UsageLimitList: { Redshift: "DescribeUsageLimits" },
  DisableLoggingMessage: { Redshift: "DisableLogging" },
  DisableSnapshotCopyMessage: { Redshift: "DisableSnapshotCopy" },
  DisableSnapshotCopyResult: { Redshift: "DisableSnapshotCopy" },
  DisassociateDataShareConsumerMessage: { Redshift: "DisassociateDataShareConsumer" },
  EnableLoggingMessage: { Redshift: "EnableLogging" },
  EnableSnapshotCopyMessage: { Redshift: "EnableSnapshotCopy" },
  EnableSnapshotCopyResult: { Redshift: "EnableSnapshotCopy" },
  GetClusterCredentialsMessage: { Redshift: "GetClusterCredentials" },
  ClusterCredentials: { Redshift: "GetClusterCredentials" },
  GetClusterCredentialsWithIAMMessage: { Redshift: "GetClusterCredentialsWithIAM" },
  ClusterExtendedCredentials: { Redshift: "GetClusterCredentialsWithIAM" },
  GetReservedNodeExchangeConfigurationOptionsInputMessage: {
    Redshift: "GetReservedNodeExchangeConfigurationOptions",
  },
  GetReservedNodeExchangeConfigurationOptionsOutputMessage: {
    Redshift: "GetReservedNodeExchangeConfigurationOptions",
  },
  GetReservedNodeExchangeOfferingsInputMessage: { Redshift: "GetReservedNodeExchangeOfferings" },
  GetReservedNodeExchangeOfferingsOutputMessage: { Redshift: "GetReservedNodeExchangeOfferings" },
  ModifyAquaInputMessage: { Redshift: "ModifyAquaConfiguration" },
  ModifyAquaOutputMessage: { Redshift: "ModifyAquaConfiguration" },
  ModifyAuthenticationProfileMessage: { Redshift: "ModifyAuthenticationProfile" },
  ModifyAuthenticationProfileResult: { Redshift: "ModifyAuthenticationProfile" },
  ModifyClusterMessage: { Redshift: "ModifyCluster" },
  ModifyClusterResult: { Redshift: "ModifyCluster" },
  ModifyClusterDbRevisionMessage: { Redshift: "ModifyClusterDbRevision" },
  ModifyClusterDbRevisionResult: { Redshift: "ModifyClusterDbRevision" },
  ModifyClusterIamRolesMessage: { Redshift: "ModifyClusterIamRoles" },
  ModifyClusterIamRolesResult: { Redshift: "ModifyClusterIamRoles" },
  ModifyClusterMaintenanceMessage: { Redshift: "ModifyClusterMaintenance" },
  ModifyClusterMaintenanceResult: { Redshift: "ModifyClusterMaintenance" },
  ModifyClusterParameterGroupMessage: { Redshift: "ModifyClusterParameterGroup" },
  ClusterParameterGroupNameMessage: { Redshift: "ResetClusterParameterGroup" },
  ModifyClusterSnapshotMessage: { Redshift: "ModifyClusterSnapshot" },
  ModifyClusterSnapshotResult: { Redshift: "ModifyClusterSnapshot" },
  ModifyClusterSnapshotScheduleMessage: { Redshift: "ModifyClusterSnapshotSchedule" },
  ModifyClusterSubnetGroupMessage: { Redshift: "ModifyClusterSubnetGroup" },
  ModifyClusterSubnetGroupResult: { Redshift: "ModifyClusterSubnetGroup" },
  ModifyCustomDomainAssociationMessage: { Redshift: "ModifyCustomDomainAssociation" },
  ModifyCustomDomainAssociationResult: { Redshift: "ModifyCustomDomainAssociation" },
  ModifyEndpointAccessMessage: { Redshift: "ModifyEndpointAccess" },
  ModifyScheduledActionMessage: { Redshift: "ModifyScheduledAction" },
  ModifySnapshotCopyRetentionPeriodMessage: { Redshift: "ModifySnapshotCopyRetentionPeriod" },
  ModifySnapshotCopyRetentionPeriodResult: { Redshift: "ModifySnapshotCopyRetentionPeriod" },
  ModifySnapshotScheduleMessage: { Redshift: "ModifySnapshotSchedule" },
  ModifyUsageLimitMessage: { Redshift: "ModifyUsageLimit" },
  PauseClusterMessage: { Redshift: "PauseCluster" },
  PauseClusterResult: { Redshift: "PauseCluster" },
  PurchaseReservedNodeOfferingMessage: { Redshift: "PurchaseReservedNodeOffering" },
  PurchaseReservedNodeOfferingResult: { Redshift: "PurchaseReservedNodeOffering" },
  RebootClusterMessage: { Redshift: "RebootCluster" },
  RebootClusterResult: { Redshift: "RebootCluster" },
  RejectDataShareMessage: { Redshift: "RejectDataShare" },
  ResetClusterParameterGroupMessage: { Redshift: "ResetClusterParameterGroup" },
  ResizeClusterMessage: { Redshift: "ResizeCluster" },
  ResizeClusterResult: { Redshift: "ResizeCluster" },
  RestoreFromClusterSnapshotMessage: { Redshift: "RestoreFromClusterSnapshot" },
  RestoreFromClusterSnapshotResult: { Redshift: "RestoreFromClusterSnapshot" },
  RestoreTableFromClusterSnapshotMessage: { Redshift: "RestoreTableFromClusterSnapshot" },
  RestoreTableFromClusterSnapshotResult: { Redshift: "RestoreTableFromClusterSnapshot" },
  ResumeClusterMessage: { Redshift: "ResumeCluster" },
  ResumeClusterResult: { Redshift: "ResumeCluster" },
  RevokeClusterSecurityGroupIngressMessage: { Redshift: "RevokeClusterSecurityGroupIngress" },
  RevokeClusterSecurityGroupIngressResult: { Redshift: "RevokeClusterSecurityGroupIngress" },
  RevokeEndpointAccessMessage: { Redshift: "RevokeEndpointAccess" },
  RevokeSnapshotAccessMessage: { Redshift: "RevokeSnapshotAccess" },
  RevokeSnapshotAccessResult: { Redshift: "RevokeSnapshotAccess" },
  RotateEncryptionKeyMessage: { Redshift: "RotateEncryptionKey" },
  RotateEncryptionKeyResult: { Redshift: "RotateEncryptionKey" },
  UpdatePartnerStatusInputMessage: { Redshift: "UpdatePartnerStatus" },
  ProfileDetailResponse: { RolesAnywhere: "UpdateProfile" },
  TrustAnchorDetailResponse: { RolesAnywhere: "UpdateTrustAnchor" },
  ScalarCrlRequest: { RolesAnywhere: "GetCrl" },
  CrlDetailResponse: { RolesAnywhere: "UpdateCrl" },
  ScalarProfileRequest: { RolesAnywhere: "GetProfile" },
  ScalarTrustAnchorRequest: { RolesAnywhere: "GetTrustAnchor" },
  ScalarSubjectRequest: { RolesAnywhere: "GetSubject" },
  SubjectDetailResponse: { RolesAnywhere: "GetSubject" },
  ListRequest: { RolesAnywhere: "ListTrustAnchors" },
  GetBucketNotificationConfigurationRequest: { S3: "GetBucketNotification" },
  NotificationConfigurationDeprecated: { S3: "GetBucketNotification" },
  NotificationConfiguration: { S3: "GetBucketNotificationConfiguration" },
  CreateAccessPointResult: { S3Control: "CreateAccessPoint" },
  CreateAccessPointForObjectLambdaResult: { S3Control: "CreateAccessPointForObjectLambda" },
  CreateJobResult: { S3Control: "CreateJob", Snowball: "CreateJob" },
  CreateMultiRegionAccessPointResult: { S3Control: "CreateMultiRegionAccessPoint" },
  DeleteJobTaggingResult: { S3Control: "DeleteJobTagging" },
  DeleteMultiRegionAccessPointResult: { S3Control: "DeleteMultiRegionAccessPoint" },
  DeleteStorageLensConfigurationTaggingResult: {
    S3Control: "DeleteStorageLensConfigurationTagging",
  },
  DescribeJobResult: { S3Control: "DescribeJob", Snowball: "DescribeJob" },
  DescribeMultiRegionAccessPointOperationResult: {
    S3Control: "DescribeMultiRegionAccessPointOperation",
  },
  GetAccessPointResult: { S3Control: "GetAccessPoint" },
  GetAccessPointConfigurationForObjectLambdaResult: {
    S3Control: "GetAccessPointConfigurationForObjectLambda",
  },
  GetAccessPointForObjectLambdaResult: { S3Control: "GetAccessPointForObjectLambda" },
  GetAccessPointPolicyResult: { S3Control: "GetAccessPointPolicy" },
  GetAccessPointPolicyForObjectLambdaResult: { S3Control: "GetAccessPointPolicyForObjectLambda" },
  GetAccessPointPolicyStatusResult: { S3Control: "GetAccessPointPolicyStatus" },
  GetAccessPointPolicyStatusForObjectLambdaResult: {
    S3Control: "GetAccessPointPolicyStatusForObjectLambda",
  },
  GetBucketResult: { S3Control: "GetBucket" },
  GetBucketLifecycleConfigurationResult: { S3Control: "GetBucketLifecycleConfiguration" },
  GetBucketPolicyResult: { S3Control: "GetBucketPolicy" },
  GetBucketReplicationResult: { S3Control: "GetBucketReplication" },
  GetBucketTaggingResult: { S3Control: "GetBucketTagging" },
  GetBucketVersioningResult: { S3Control: "GetBucketVersioning" },
  GetJobTaggingResult: { S3Control: "GetJobTagging" },
  GetMultiRegionAccessPointResult: { S3Control: "GetMultiRegionAccessPoint" },
  GetMultiRegionAccessPointPolicyResult: { S3Control: "GetMultiRegionAccessPointPolicy" },
  GetMultiRegionAccessPointPolicyStatusResult: {
    S3Control: "GetMultiRegionAccessPointPolicyStatus",
  },
  GetMultiRegionAccessPointRoutesResult: { S3Control: "GetMultiRegionAccessPointRoutes" },
  GetStorageLensConfigurationResult: { S3Control: "GetStorageLensConfiguration" },
  GetStorageLensConfigurationTaggingResult: { S3Control: "GetStorageLensConfigurationTagging" },
  ListAccessPointsResult: { S3Control: "ListAccessPoints" },
  ListAccessPointsForObjectLambdaResult: { S3Control: "ListAccessPointsForObjectLambda" },
  ListMultiRegionAccessPointsResult: { S3Control: "ListMultiRegionAccessPoints" },
  ListRegionalBucketsResult: { S3Control: "ListRegionalBuckets" },
  ListStorageLensConfigurationsResult: { S3Control: "ListStorageLensConfigurations" },
  PutJobTaggingResult: { S3Control: "PutJobTagging" },
  PutMultiRegionAccessPointPolicyResult: { S3Control: "PutMultiRegionAccessPointPolicy" },
  PutStorageLensConfigurationTaggingResult: { S3Control: "PutStorageLensConfigurationTagging" },
  SubmitMultiRegionAccessPointRoutesResult: { S3Control: "SubmitMultiRegionAccessPointRoutes" },
  UpdateJobPriorityResult: { S3Control: "UpdateJobPriority" },
  UpdateJobStatusResult: { S3Control: "UpdateJobStatus" },
  CreateEndpointResult: { S3Outposts: "CreateEndpoint" },
  ListEndpointsResult: { S3Outposts: "ListEndpoints" },
  ListOutpostsWithS3Result: { S3Outposts: "ListOutpostsWithS3" },
  ListSharedEndpointsResult: { S3Outposts: "ListSharedEndpoints" },
  CreateEndpointResponse: { SNS: "CreatePlatformEndpoint" },
  CreateSMSSandboxPhoneNumberResult: { SNS: "CreateSMSSandboxPhoneNumber" },
  DeleteSMSSandboxPhoneNumberResult: { SNS: "DeleteSMSSandboxPhoneNumber" },
  GetSMSSandboxAccountStatusResult: { SNS: "GetSMSSandboxAccountStatus" },
  ListOriginationNumbersResult: { SNS: "ListOriginationNumbers" },
  ListSMSSandboxPhoneNumbersResult: { SNS: "ListSMSSandboxPhoneNumbers" },
  VerifySMSSandboxPhoneNumberResult: { SNS: "VerifySMSSandboxPhoneNumber" },
  CancelMessageMoveTaskResult: { SQS: "CancelMessageMoveTask" },
  ChangeMessageVisibilityBatchResult: { SQS: "ChangeMessageVisibilityBatch" },
  CreateQueueResult: { SQS: "CreateQueue" },
  DeleteMessageBatchResult: { SQS: "DeleteMessageBatch" },
  GetQueueAttributesResult: { SQS: "GetQueueAttributes" },
  GetQueueUrlResult: { SQS: "GetQueueUrl" },
  ListDeadLetterSourceQueuesResult: { SQS: "ListDeadLetterSourceQueues" },
  ListMessageMoveTasksResult: { SQS: "ListMessageMoveTasks" },
  ListQueueTagsResult: { SQS: "ListQueueTags" },
  ListQueuesResult: { SQS: "ListQueues" },
  ReceiveMessageResult: { SQS: "ReceiveMessage" },
  SendMessageResult: { SQS: "SendMessage" },
  SendMessageBatchResult: { SQS: "SendMessageBatch" },
  StartMessageMoveTaskResult: { SQS: "StartMessageMoveTask" },
  CancelCommandResult: { SSM: "CancelCommand" },
  CancelMaintenanceWindowExecutionResult: { SSM: "CancelMaintenanceWindowExecution" },
  CreateActivationResult: { SSM: "CreateActivation" },
  CreateAssociationResult: { SSM: "CreateAssociation" },
  CreateAssociationBatchResult: { SSM: "CreateAssociationBatch" },
  CreateDocumentResult: { SSM: "CreateDocument" },
  CreateMaintenanceWindowResult: { SSM: "CreateMaintenanceWindow" },
  CreateOpsMetadataResult: { SSM: "CreateOpsMetadata" },
  CreatePatchBaselineResult: { SSM: "CreatePatchBaseline" },
  CreateResourceDataSyncResult: { SSM: "CreateResourceDataSync" },
  DeleteActivationResult: { SSM: "DeleteActivation" },
  DeleteAssociationResult: { SSM: "DeleteAssociation" },
  DeleteDocumentResult: { SSM: "DeleteDocument" },
  DeleteInventoryResult: { SSM: "DeleteInventory" },
  DeleteMaintenanceWindowResult: { SSM: "DeleteMaintenanceWindow" },
  DeleteOpsMetadataResult: { SSM: "DeleteOpsMetadata" },
  DeleteParameterResult: { SSM: "DeleteParameter" },
  DeleteParametersResult: { SSM: "DeleteParameters" },
  DeletePatchBaselineResult: { SSM: "DeletePatchBaseline" },
  DeleteResourceDataSyncResult: { SSM: "DeleteResourceDataSync" },
  DeregisterManagedInstanceResult: { SSM: "DeregisterManagedInstance" },
  DeregisterPatchBaselineForPatchGroupResult: { SSM: "DeregisterPatchBaselineForPatchGroup" },
  DeregisterTargetFromMaintenanceWindowResult: { SSM: "DeregisterTargetFromMaintenanceWindow" },
  DeregisterTaskFromMaintenanceWindowResult: { SSM: "DeregisterTaskFromMaintenanceWindow" },
  DescribeActivationsResult: { SSM: "DescribeActivations" },
  DescribeAssociationResult: { SSM: "DescribeAssociation" },
  DescribeAssociationExecutionTargetsResult: { SSM: "DescribeAssociationExecutionTargets" },
  DescribeAssociationExecutionsResult: { SSM: "DescribeAssociationExecutions" },
  DescribeAutomationExecutionsResult: { SSM: "DescribeAutomationExecutions" },
  DescribeAutomationStepExecutionsResult: { SSM: "DescribeAutomationStepExecutions" },
  DescribeAvailablePatchesResult: { SSM: "DescribeAvailablePatches" },
  DescribeDocumentResult: { SSM: "DescribeDocument" },
  DescribeEffectiveInstanceAssociationsResult: { SSM: "DescribeEffectiveInstanceAssociations" },
  DescribeEffectivePatchesForPatchBaselineResult: {
    SSM: "DescribeEffectivePatchesForPatchBaseline",
  },
  DescribeInstanceAssociationsStatusResult: { SSM: "DescribeInstanceAssociationsStatus" },
  DescribeInstanceInformationResult: { SSM: "DescribeInstanceInformation" },
  DescribeInstancePatchStatesResult: { SSM: "DescribeInstancePatchStates" },
  DescribeInstancePatchStatesForPatchGroupResult: {
    SSM: "DescribeInstancePatchStatesForPatchGroup",
  },
  DescribeInstancePatchesResult: { SSM: "DescribeInstancePatches" },
  DescribeInventoryDeletionsResult: { SSM: "DescribeInventoryDeletions" },
  DescribeMaintenanceWindowExecutionTaskInvocationsResult: {
    SSM: "DescribeMaintenanceWindowExecutionTaskInvocations",
  },
  DescribeMaintenanceWindowExecutionTasksResult: { SSM: "DescribeMaintenanceWindowExecutionTasks" },
  DescribeMaintenanceWindowExecutionsResult: { SSM: "DescribeMaintenanceWindowExecutions" },
  DescribeMaintenanceWindowScheduleResult: { SSM: "DescribeMaintenanceWindowSchedule" },
  DescribeMaintenanceWindowTargetsResult: { SSM: "DescribeMaintenanceWindowTargets" },
  DescribeMaintenanceWindowTasksResult: { SSM: "DescribeMaintenanceWindowTasks" },
  DescribeMaintenanceWindowsResult: { SSM: "DescribeMaintenanceWindows" },
  DescribeMaintenanceWindowsForTargetResult: { SSM: "DescribeMaintenanceWindowsForTarget" },
  DescribeParametersResult: { SSM: "DescribeParameters" },
  DescribePatchBaselinesResult: { SSM: "DescribePatchBaselines" },
  DescribePatchGroupStateResult: { SSM: "DescribePatchGroupState" },
  DescribePatchGroupsResult: { SSM: "DescribePatchGroups" },
  DescribePatchPropertiesResult: { SSM: "DescribePatchProperties" },
  GetAutomationExecutionResult: { SSM: "GetAutomationExecution" },
  GetCommandInvocationResult: { SSM: "GetCommandInvocation" },
  GetDefaultPatchBaselineResult: { SSM: "GetDefaultPatchBaseline" },
  GetDeployablePatchSnapshotForInstanceResult: { SSM: "GetDeployablePatchSnapshotForInstance" },
  GetDocumentResult: { SSM: "GetDocument" },
  GetInventoryResult: { SSM: "GetInventory" },
  GetInventorySchemaResult: { SSM: "GetInventorySchema" },
  GetMaintenanceWindowResult: { SSM: "GetMaintenanceWindow" },
  GetMaintenanceWindowExecutionResult: { SSM: "GetMaintenanceWindowExecution" },
  GetMaintenanceWindowExecutionTaskResult: { SSM: "GetMaintenanceWindowExecutionTask" },
  GetMaintenanceWindowExecutionTaskInvocationResult: {
    SSM: "GetMaintenanceWindowExecutionTaskInvocation",
  },
  GetMaintenanceWindowTaskResult: { SSM: "GetMaintenanceWindowTask" },
  GetOpsMetadataResult: { SSM: "GetOpsMetadata" },
  GetOpsSummaryResult: { SSM: "GetOpsSummary" },
  GetParameterResult: { SSM: "GetParameter" },
  GetParameterHistoryResult: { SSM: "GetParameterHistory" },
  GetParametersResult: { SSM: "GetParameters" },
  GetParametersByPathResult: { SSM: "GetParametersByPath" },
  GetPatchBaselineResult: { SSM: "GetPatchBaseline" },
  GetPatchBaselineForPatchGroupResult: { SSM: "GetPatchBaselineForPatchGroup" },
  GetServiceSettingResult: { SSM: "GetServiceSetting" },
  LabelParameterVersionResult: { SSM: "LabelParameterVersion" },
  ListAssociationVersionsResult: { SSM: "ListAssociationVersions" },
  ListAssociationsResult: { SSM: "ListAssociations" },
  ListCommandInvocationsResult: { SSM: "ListCommandInvocations" },
  ListCommandsResult: { SSM: "ListCommands" },
  ListComplianceItemsResult: { SSM: "ListComplianceItems" },
  ListComplianceSummariesResult: { SSM: "ListComplianceSummaries" },
  ListDocumentVersionsResult: { SSM: "ListDocumentVersions" },
  ListDocumentsResult: { SSM: "ListDocuments" },
  ListInventoryEntriesResult: { SSM: "ListInventoryEntries" },
  ListOpsMetadataResult: { SSM: "ListOpsMetadata" },
  ListResourceComplianceSummariesResult: { SSM: "ListResourceComplianceSummaries" },
  ListResourceDataSyncResult: { SSM: "ListResourceDataSync" },
  PutComplianceItemsResult: { SSM: "PutComplianceItems" },
  PutInventoryResult: { SSM: "PutInventory" },
  PutParameterResult: { SSM: "PutParameter" },
  RegisterDefaultPatchBaselineResult: { SSM: "RegisterDefaultPatchBaseline" },
  RegisterPatchBaselineForPatchGroupResult: { SSM: "RegisterPatchBaselineForPatchGroup" },
  RegisterTargetWithMaintenanceWindowResult: { SSM: "RegisterTargetWithMaintenanceWindow" },
  RegisterTaskWithMaintenanceWindowResult: { SSM: "RegisterTaskWithMaintenanceWindow" },
  ResetServiceSettingResult: { SSM: "ResetServiceSetting" },
  SendAutomationSignalResult: { SSM: "SendAutomationSignal" },
  StartAssociationsOnceResult: { SSM: "StartAssociationsOnce" },
  StartAutomationExecutionResult: { SSM: "StartAutomationExecution" },
  StartChangeRequestExecutionResult: { SSM: "StartChangeRequestExecution" },
  StopAutomationExecutionResult: { SSM: "StopAutomationExecution" },
  UnlabelParameterVersionResult: { SSM: "UnlabelParameterVersion" },
  UpdateAssociationResult: { SSM: "UpdateAssociation" },
  UpdateAssociationStatusResult: { SSM: "UpdateAssociationStatus" },
  UpdateDocumentResult: { SSM: "UpdateDocument" },
  UpdateDocumentDefaultVersionResult: { SSM: "UpdateDocumentDefaultVersion" },
  UpdateMaintenanceWindowResult: { SSM: "UpdateMaintenanceWindow" },
  UpdateMaintenanceWindowTargetResult: { SSM: "UpdateMaintenanceWindowTarget" },
  UpdateMaintenanceWindowTaskResult: { SSM: "UpdateMaintenanceWindowTask" },
  UpdateManagedInstanceRoleResult: { SSM: "UpdateManagedInstanceRole" },
  UpdateOpsMetadataResult: { SSM: "UpdateOpsMetadata" },
  UpdatePatchBaselineResult: { SSM: "UpdatePatchBaseline" },
  UpdateResourceDataSyncResult: { SSM: "UpdateResourceDataSync" },
  UpdateServiceSettingResult: { SSM: "UpdateServiceSetting" },
  AcceptPageResult: { SSMContacts: "AcceptPage" },
  ActivateContactChannelResult: { SSMContacts: "ActivateContactChannel" },
  CreateContactResult: { SSMContacts: "CreateContact" },
  CreateContactChannelResult: { SSMContacts: "CreateContactChannel" },
  CreateRotationResult: { SSMContacts: "CreateRotation" },
  CreateRotationOverrideResult: { SSMContacts: "CreateRotationOverride" },
  DeactivateContactChannelResult: { SSMContacts: "DeactivateContactChannel" },
  DeleteContactResult: { SSMContacts: "DeleteContact" },
  DeleteContactChannelResult: { SSMContacts: "DeleteContactChannel" },
  DeleteRotationResult: { SSMContacts: "DeleteRotation" },
  DeleteRotationOverrideResult: { SSMContacts: "DeleteRotationOverride" },
  DescribeEngagementResult: { SSMContacts: "DescribeEngagement" },
  DescribePageResult: { SSMContacts: "DescribePage" },
  GetContactResult: { SSMContacts: "GetContact" },
  GetContactChannelResult: { SSMContacts: "GetContactChannel" },
  GetContactPolicyResult: { SSMContacts: "GetContactPolicy" },
  GetRotationResult: { SSMContacts: "GetRotation" },
  GetRotationOverrideResult: { SSMContacts: "GetRotationOverride" },
  ListContactChannelsResult: { SSMContacts: "ListContactChannels" },
  ListContactsResult: { SSMContacts: "ListContacts" },
  ListEngagementsResult: { SSMContacts: "ListEngagements" },
  ListPageReceiptsResult: { SSMContacts: "ListPageReceipts" },
  ListPageResolutionsResult: { SSMContacts: "ListPageResolutions" },
  ListPagesByContactResult: { SSMContacts: "ListPagesByContact" },
  ListPagesByEngagementResult: { SSMContacts: "ListPagesByEngagement" },
  ListPreviewRotationShiftsResult: { SSMContacts: "ListPreviewRotationShifts" },
  ListRotationOverridesResult: { SSMContacts: "ListRotationOverrides" },
  ListRotationShiftsResult: { SSMContacts: "ListRotationShifts" },
  ListRotationsResult: { SSMContacts: "ListRotations" },
  PutContactPolicyResult: { SSMContacts: "PutContactPolicy" },
  SendActivationCodeResult: { SSMContacts: "SendActivationCode" },
  StartEngagementResult: { SSMContacts: "StartEngagement" },
  StopEngagementResult: { SSMContacts: "StopEngagement" },
  UpdateContactResult: { SSMContacts: "UpdateContact" },
  UpdateContactChannelResult: { SSMContacts: "UpdateContactChannel" },
  UpdateRotationResult: { SSMContacts: "UpdateRotation" },
  WorkflowExecutionCount: { SWF: "CountOpenWorkflowExecutions" },
  PendingTaskCount: { SWF: "CountPendingDecisionTasks" },
  ActivityTypeDetail: { SWF: "DescribeActivityType" },
  DomainDetail: { SWF: "DescribeDomain" },
  WorkflowExecutionDetail: { SWF: "DescribeWorkflowExecution" },
  WorkflowTypeDetail: { SWF: "DescribeWorkflowType" },
  History: { SWF: "GetWorkflowExecutionHistory" },
  ActivityTypeInfos: { SWF: "ListActivityTypes" },
  WorkflowExecutionInfos: { SWF: "ListOpenWorkflowExecutions" },
  DomainInfos: { SWF: "ListDomains" },
  WorkflowTypeInfos: { SWF: "ListWorkflowTypes" },
  ActivityTask: { SWF: "PollForActivityTask" },
  DecisionTask: { SWF: "PollForDecisionTask" },
  ActivityTaskStatus: { SWF: "RecordActivityTaskHeartbeat" },
  Run: { SWF: "StartWorkflowExecution" },
  ListEarthObservationJobInput: { SageMakerGeospatial: "ListEarthObservationJobs" },
  ListEarthObservationJobOutput: { SageMakerGeospatial: "ListEarthObservationJobs" },
  ListVectorEnrichmentJobInput: { SageMakerGeospatial: "ListVectorEnrichmentJobs" },
  ListVectorEnrichmentJobOutput: { SageMakerGeospatial: "ListVectorEnrichmentJobs" },
  GetDeploymentsResult: { SagemakerEdge: "GetDeployments" },
  GetDeviceRegistrationResult: { SagemakerEdge: "GetDeviceRegistration" },
  DescribeDeviceEc2Input: { SnowDeviceManagement: "DescribeDeviceEc2Instances" },
  DescribeDeviceEc2Output: { SnowDeviceManagement: "DescribeDeviceEc2Instances" },
  CancelClusterResult: { Snowball: "CancelCluster" },
  CancelJobResult: { Snowball: "CancelJob" },
  CreateAddressResult: { Snowball: "CreateAddress" },
  CreateLongTermPricingResult: { Snowball: "CreateLongTermPricing" },
  CreateReturnShippingLabelResult: { Snowball: "CreateReturnShippingLabel" },
  DescribeAddressResult: { Snowball: "DescribeAddress" },
  DescribeClusterResult: { Snowball: "DescribeCluster" },
  DescribeReturnShippingLabelResult: { Snowball: "DescribeReturnShippingLabel" },
  GetJobManifestResult: { Snowball: "GetJobManifest" },
  GetJobUnlockCodeResult: { Snowball: "GetJobUnlockCode" },
  GetSnowballUsageResult: { Snowball: "GetSnowballUsage" },
  GetSoftwareUpdatesResult: { Snowball: "GetSoftwareUpdates" },
  ListClusterJobsResult: { Snowball: "ListClusterJobs" },
  ListClustersResult: { Snowball: "ListClusters" },
  ListCompatibleImagesResult: { Snowball: "ListCompatibleImages" },
  ListLongTermPricingResult: { Snowball: "ListLongTermPricing" },
  ListPickupLocationsResult: { Snowball: "ListPickupLocations" },
  ListServiceVersionsResult: { Snowball: "ListServiceVersions" },
  UpdateClusterResult: { Snowball: "UpdateCluster" },
  UpdateJobResult: { Snowball: "UpdateJob" },
  UpdateJobShipmentStateResult: { Snowball: "UpdateJobShipmentState" },
  UpdateLongTermPricingResult: { Snowball: "UpdateLongTermPricing" },
  CreateSlackChannelConfigurationResult: { SupportApp: "CreateSlackChannelConfiguration" },
  DeleteAccountAliasResult: { SupportApp: "DeleteAccountAlias" },
  DeleteSlackChannelConfigurationResult: { SupportApp: "DeleteSlackChannelConfiguration" },
  DeleteSlackWorkspaceConfigurationResult: { SupportApp: "DeleteSlackWorkspaceConfiguration" },
  GetAccountAliasResult: { SupportApp: "GetAccountAlias" },
  ListSlackChannelConfigurationsResult: { SupportApp: "ListSlackChannelConfigurations" },
  ListSlackWorkspaceConfigurationsResult: { SupportApp: "ListSlackWorkspaceConfigurations" },
  PutAccountAliasResult: { SupportApp: "PutAccountAlias" },
  RegisterSlackWorkspaceForOrganizationResult: {
    SupportApp: "RegisterSlackWorkspaceForOrganization",
  },
  UpdateSlackChannelConfigurationResult: { SupportApp: "UpdateSlackChannelConfiguration" },
  AssociateConnectionAliasResult: { WorkSpaces: "AssociateConnectionAlias" },
  AssociateIpGroupsResult: { WorkSpaces: "AssociateIpGroups" },
  AuthorizeIpRulesResult: { WorkSpaces: "AuthorizeIpRules" },
  CopyWorkspaceImageResult: { WorkSpaces: "CopyWorkspaceImage" },
  CreateConnectClientAddInResult: { WorkSpaces: "CreateConnectClientAddIn" },
  CreateConnectionAliasResult: { WorkSpaces: "CreateConnectionAlias" },
  CreateIpGroupResult: { WorkSpaces: "CreateIpGroup" },
  CreateStandbyWorkspacesResult: { WorkSpaces: "CreateStandbyWorkspaces" },
  CreateTagsResult: { WorkSpaces: "CreateTags" },
  CreateUpdatedWorkspaceImageResult: { WorkSpaces: "CreateUpdatedWorkspaceImage" },
  CreateWorkspaceBundleResult: { WorkSpaces: "CreateWorkspaceBundle" },
  CreateWorkspaceImageResult: { WorkSpaces: "CreateWorkspaceImage" },
  CreateWorkspacesResult: { WorkSpaces: "CreateWorkspaces" },
  DeleteClientBrandingResult: { WorkSpaces: "DeleteClientBranding" },
  DeleteConnectClientAddInResult: { WorkSpaces: "DeleteConnectClientAddIn" },
  DeleteConnectionAliasResult: { WorkSpaces: "DeleteConnectionAlias" },
  DeleteIpGroupResult: { WorkSpaces: "DeleteIpGroup" },
  DeleteTagsResult: { WorkSpaces: "DeleteTags" },
  DeleteWorkspaceBundleResult: { WorkSpaces: "DeleteWorkspaceBundle" },
  DeleteWorkspaceImageResult: { WorkSpaces: "DeleteWorkspaceImage" },
  DeregisterWorkspaceDirectoryResult: { WorkSpaces: "DeregisterWorkspaceDirectory" },
  DescribeAccountResult: { WorkSpaces: "DescribeAccount" },
  DescribeAccountModificationsResult: { WorkSpaces: "DescribeAccountModifications" },
  DescribeClientBrandingResult: { WorkSpaces: "DescribeClientBranding" },
  DescribeClientPropertiesResult: { WorkSpaces: "DescribeClientProperties" },
  DescribeConnectClientAddInsResult: { WorkSpaces: "DescribeConnectClientAddIns" },
  DescribeConnectionAliasPermissionsResult: { WorkSpaces: "DescribeConnectionAliasPermissions" },
  DescribeConnectionAliasesResult: { WorkSpaces: "DescribeConnectionAliases" },
  DescribeIpGroupsResult: { WorkSpaces: "DescribeIpGroups" },
  DescribeWorkspaceBundlesResult: { WorkSpaces: "DescribeWorkspaceBundles" },
  DescribeWorkspaceDirectoriesResult: { WorkSpaces: "DescribeWorkspaceDirectories" },
  DescribeWorkspaceImagePermissionsResult: { WorkSpaces: "DescribeWorkspaceImagePermissions" },
  DescribeWorkspaceImagesResult: { WorkSpaces: "DescribeWorkspaceImages" },
  DescribeWorkspaceSnapshotsResult: { WorkSpaces: "DescribeWorkspaceSnapshots" },
  DescribeWorkspacesResult: { WorkSpaces: "DescribeWorkspaces" },
  DescribeWorkspacesConnectionStatusResult: { WorkSpaces: "DescribeWorkspacesConnectionStatus" },
  DisassociateConnectionAliasResult: { WorkSpaces: "DisassociateConnectionAlias" },
  DisassociateIpGroupsResult: { WorkSpaces: "DisassociateIpGroups" },
  ImportClientBrandingResult: { WorkSpaces: "ImportClientBranding" },
  ImportWorkspaceImageResult: { WorkSpaces: "ImportWorkspaceImage" },
  ListAvailableManagementCidrRangesResult: { WorkSpaces: "ListAvailableManagementCidrRanges" },
  MigrateWorkspaceResult: { WorkSpaces: "MigrateWorkspace" },
  ModifyAccountResult: { WorkSpaces: "ModifyAccount" },
  ModifyCertificateBasedAuthPropertiesResult: {
    WorkSpaces: "ModifyCertificateBasedAuthProperties",
  },
  ModifyClientPropertiesResult: { WorkSpaces: "ModifyClientProperties" },
  ModifySamlPropertiesResult: { WorkSpaces: "ModifySamlProperties" },
  ModifySelfservicePermissionsResult: { WorkSpaces: "ModifySelfservicePermissions" },
  ModifyWorkspaceAccessPropertiesResult: { WorkSpaces: "ModifyWorkspaceAccessProperties" },
  ModifyWorkspaceCreationPropertiesResult: { WorkSpaces: "ModifyWorkspaceCreationProperties" },
  ModifyWorkspacePropertiesResult: { WorkSpaces: "ModifyWorkspaceProperties" },
  ModifyWorkspaceStateResult: { WorkSpaces: "ModifyWorkspaceState" },
  RebootWorkspacesResult: { WorkSpaces: "RebootWorkspaces" },
  RebuildWorkspacesResult: { WorkSpaces: "RebuildWorkspaces" },
  RegisterWorkspaceDirectoryResult: { WorkSpaces: "RegisterWorkspaceDirectory" },
  RestoreWorkspaceResult: { WorkSpaces: "RestoreWorkspace" },
  RevokeIpRulesResult: { WorkSpaces: "RevokeIpRules" },
  StartWorkspacesResult: { WorkSpaces: "StartWorkspaces" },
  StopWorkspacesResult: { WorkSpaces: "StopWorkspaces" },
  TerminateWorkspacesResult: { WorkSpaces: "TerminateWorkspaces" },
  UpdateConnectClientAddInResult: { WorkSpaces: "UpdateConnectClientAddIn" },
  UpdateConnectionAliasPermissionResult: { WorkSpaces: "UpdateConnectionAliasPermission" },
  UpdateRulesOfIpGroupResult: { WorkSpaces: "UpdateRulesOfIpGroup" },
  UpdateWorkspaceBundleResult: { WorkSpaces: "UpdateWorkspaceBundle" },
  UpdateWorkspaceImagePermissionResult: { WorkSpaces: "UpdateWorkspaceImagePermission" },
  BatchGetTracesResult: { XRay: "BatchGetTraces" },
  CreateGroupResult: { XRay: "CreateGroup" },
  CreateSamplingRuleResult: { XRay: "CreateSamplingRule" },
  DeleteGroupResult: { XRay: "DeleteGroup" },
  DeleteResourcePolicyResult: { XRay: "DeleteResourcePolicy" },
  DeleteSamplingRuleResult: { XRay: "DeleteSamplingRule" },
  GetEncryptionConfigResult: { XRay: "GetEncryptionConfig" },
  GetGroupResult: { XRay: "GetGroup" },
  GetGroupsResult: { XRay: "GetGroups" },
  GetInsightResult: { XRay: "GetInsight" },
  GetInsightEventsResult: { XRay: "GetInsightEvents" },
  GetInsightImpactGraphResult: { XRay: "GetInsightImpactGraph" },
  GetInsightSummariesResult: { XRay: "GetInsightSummaries" },
  GetSamplingRulesResult: { XRay: "GetSamplingRules" },
  GetSamplingStatisticSummariesResult: { XRay: "GetSamplingStatisticSummaries" },
  GetSamplingTargetsResult: { XRay: "GetSamplingTargets" },
  GetServiceGraphResult: { XRay: "GetServiceGraph" },
  GetTimeSeriesServiceStatisticsResult: { XRay: "GetTimeSeriesServiceStatistics" },
  GetTraceGraphResult: { XRay: "GetTraceGraph" },
  GetTraceSummariesResult: { XRay: "GetTraceSummaries" },
  ListResourcePoliciesResult: { XRay: "ListResourcePolicies" },
  PutEncryptionConfigResult: { XRay: "PutEncryptionConfig" },
  PutResourcePolicyResult: { XRay: "PutResourcePolicy" },
  PutTelemetryRecordsResult: { XRay: "PutTelemetryRecords" },
  PutTraceSegmentsResult: { XRay: "PutTraceSegments" },
  UpdateGroupResult: { XRay: "UpdateGroup" },
  UpdateSamplingRuleResult: { XRay: "UpdateSamplingRule" },
};
